{"version":3,"sources":["store/ducks/manage/actionCreators.ts","components/UI/Fields/Input/index.tsx","components/UI/Dialog/index.tsx","store/ducks/auth/actionCreators.ts","components/Layout/Navbar/SettingsDialog.tsx","utils/history.ts","constants/BREAKPOINTS.ts","store/ducks/owner/actionCreators.ts","store/ducks/manage/selectors.ts","components/Layout/Navbar/index.tsx","assets/img/logo.svg","components/Layout/Sidebar/constants.ts","components/Layout/Sidebar/index.tsx","components/Layout/index.tsx","components/Layout/Auth.tsx","components/Pages/Error/index.tsx","plugins/cookies.ts","store/ducks/auth/selectors.ts","components/Pages/Auth/index.tsx","components/UI/Loading/index.tsx","components/UI/Card/index.tsx","utils/getPrice.ts","components/Pages/Home/AdminHome/index.tsx","components/UI/Status/index.tsx","components/UI/TableWrapper/Row.tsx","components/UI/TableWrapper/index.tsx","components/Pages/Home/SitesTable/NewDialog.tsx","components/Pages/Home/SitesTable/EditDialogForm.tsx","components/Pages/Home/SitesTable/EditDialog.tsx","utils/getDate.ts","components/Pages/Home/SitesTable/index.tsx","components/Pages/Home/SitesTable/utilsTable.ts","components/Pages/Payments/PayoutDialog.tsx","components/Pages/Home/PartnerHome/index.tsx","components/Pages/Home/index.tsx","components/Pages/Partners/PartnersTable/NewDialog.tsx","store/ducks/owner/selectors.ts","components/Pages/Partners/PartnersTable/index.tsx","components/Pages/Partners/PartnersTable/utilsTable.ts","components/Pages/Partners/index.tsx","components/Pages/Partners/Partner.tsx","components/Pages/Payments/PaymentsTable/EditDialog.tsx","components/Pages/Payments/PaymentsTable/utilsTable.ts","components/Pages/Payments/PaymentsTable/index.tsx","components/Pages/Payments/WalletsTable/NewDialog.tsx","components/Pages/Payments/WalletsTable/EditDialog.tsx","components/Pages/Payments/WalletsTable/index.tsx","components/Pages/Payments/WalletsTable/utilsTable.ts","components/Pages/Payments/index.tsx","components/Pages/Orders/OrdersTable/index.tsx","components/Pages/Orders/OrdersTable/utilsTable.ts","components/Pages/Orders/index.tsx","components/Pages/Finances/index.tsx","utils/getCardNumber.ts","components/Pages/Cards/CardsTable/NewDialog.tsx","components/Pages/Cards/CardsTable/EditDialog.tsx","components/Pages/Cards/CardsTable/utilsTable.ts","store/ducks/auth/state.ts","components/Pages/Cards/CardsTable/index.tsx","components/Pages/Cards/index.tsx","components/Pages/Terminals/TerminalsTable/index.tsx","components/Pages/Terminals/TerminalsTable/utilsTable.ts","components/Pages/Terminals/index.tsx","components/Pages/Terminals/Terminal.tsx","constants/ROUTES.ts","utils/isAuthorized.ts","App.tsx","store/ducks/auth/reducer.ts","store/ducks/manage/state.ts","store/ducks/manage/reducer.ts","store/ducks/owner/state.ts","store/ducks/owner/reducer.ts","store/rootReducer.ts","utils/errorHandler.ts","api/constants.ts","api/auth.ts","store/ducks/auth/saga.ts","plugins/axios.ts","api/manage.ts","store/ducks/manage/saga.ts","api/owner.ts","store/ducks/owner/saga.ts","store/sagas.ts","store/index.ts","theme.ts","index.tsx"],"names":["ManageActionsTypes","Input","control","name","defaultValue","type","label","error","helperText","required","fullWidth","maxLength","min","max","autoComplete","autoFocus","render","field","TextField","variant","margin","inputProps","value","memo","Dialog","open","handleClose","title","form","children","onClose","DialogTitle","IconButton","onClick","Close","DialogContent","dividers","DialogActions","Button","color","AuthActionsTypes","fetchShops","payload","FETCH_SHOPS","setShops","SET_SHOPS","refreshKey","KEY_REFRESH","getAccountType","SettingsDialog","user","dispatch","useDispatch","defaultValues","email","oldPassword","newPassword","useForm","handleSubmit","watch","reset","useState","errors","setErrors","useEffect","id","onSubmit","length","prev","password","CHANGE_PASSWORD","test","trim","action","CHANGE_NAME_EMAIL","changeNameWithEmail","history","createBrowserHistory","BREAKPOINTS","OwnerActionsTypes","setAuthStatus","SET_STATUS","selectUser","state","manage","selectShops","shops","useStyles","makeStyles","theme","toolbar","paddingRight","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","display","flexGrow","login","Navbar","handleDrawerOpen","route","s","useSelector","dialogOpen","setDialogOpen","menu","setMenu","handleMenuClose","handleLogout","LOGOUT","push","FETCH_USER","access","findIndex","role","AppBar","position","className","clsx","Toolbar","edge","Typography","noWrap","window","innerWidth","event","currentTarget","ExitToApp","Menu","anchorEl","keepMounted","Boolean","MenuItem","AccountCircle","MENU_ADMIN","path","icon","Dashboard","People","List","Receipt","Payment","LocalAtm","AttachMoney","MENU_MODERATOR","MENU_PARTNER","toolbarIcon","alignItems","justifyContent","padding","mixins","logo","maxWidth","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","content","height","overflow","container","paddingTop","paddingBottom","link","Sidebar","handleDrawerClose","routeName","menuItems","Drawer","classes","paper","src","Logo","alt","ChevronLeft","Divider","map","item","i","to","ListItem","button","selected","ListItemIcon","ListItemText","primary","root","appBarSpacer","DefaultLayout","setOpen","Container","flexDirection","marginTop","LayoutAuth","component","Error","code","message","useHistory","size","cookies","Cookies","selectStatus","auth","status","avatar","backgroundColor","palette","main","submit","spinner","Auth","AuthStatus","get","location","href","Avatar","Lock","LOGIN","disabled","CircularProgress","wrapper","Loading","depositContext","flex","Card","text","Paper","gutterBottom","getPrice","toString","replace","AdminHome","Grid","xs","md","lg","borderRadius","transform","success","green","A400","processing","yellow","red","getStatus","Status","data","Tooltip","placement","cell","pointer","cursor","coin","TableRow","row","onRowClick","e","hover","columns","column","TableCell","boxShadow","tableHeader","paddingLeft","search","getSearchLabel","TableWrapper","headers","rows","currentPage","setCurrentPage","searchBy","rowsPerPage","setRowsPerPage","page","setPage","searchText","setSearchText","rowsCopy","setRowsCopy","results","filter","find","col","toLowerCase","includes","onChange","target","TableContainer","Table","TableHead","TableBody","slice","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","NewDialog","siteURL","match","ADD_SHOP","setPartners","SET_PARTNERS","setCards","SET_CARDS","EditDialogForm","shop","failURL","successURL","webhookURL","isLink","handleVerification","newStatus","VERIFY_STATUS","extraSettings","setExtraSettings","EDIT_SHOP","verifyStatus","startIcon","VerifiedUser","FormControlLabel","Switch","checked","Collapse","in","RadioGroup","Radio","Delete","confirm","DELETE_SHOP","style","EditDialog","selectShop","stats","setStats","period","setPeriod","handlePickStats","innerText","dense","Refresh","publicKey","webhookSecretKey","aria-controls","aria-haspopup","Equalizer","getDate","Date","toLocaleDateString","SitesTable","partnerId","createDate","openNew","setOpenNew","editID","setEditID","Add","undefined","currencies","PayoutDialog","balance","currency","setCurrency","amount","wallet","validate","Number","select","option","PartnerHome","payoutOpen","setPayoutOpen","Link","Home","ADD_PARTNER","selectPartners","owner","partners","selectCards","cards","selectOrders","orders","PartnersTable","commission","FETCH_PARTNERS","Partners","PartnerPage","params","partner","selectPartner","description","marginBottom","sm","EDIT_PARTNER","DELETE_PARTNER","PowerSettingsNew","ButtonGroup","Clear","Check","getHeadersAndRows","items","now","ip","PaymentsTable","address","WalletsTable","Payments","OrdersTable","payerEmail","payerCardNumber","FETCH_ORDERS","Orders","Finances","textAlign","light","getCardNumber","join","substr","cardNumber","mm","yy","cvv","ADD_CARD","card","selectCard","comment","dayTransactions","monthTransactions","daySum","monthSum","DELETE_CARD","parseExpirationDate","CardsTable","FETCH_CARDS","Cards","TerminalsTable","visitors","payments","clients","newTerminal","setNewTerminal","handleNewTerminal","console","log","Terminals","flag","ROUTES","layout","LayoutDefault","exact","countryCode","svg","isAuthorized","App","Layout","props","from","initAuth","NEVER","authReducer","produce","draft","AUTHORIZING","set","expires","UNAUTHORIZED","SET_TOKEN","AUTHORIZED","initManage","manageReducer","SET_USER","SET_SHOP","splice","LOADING","SET_KEY","key","Object","keys","terminals","ownerReducer","SET_ORDERS","rootReducer","combineReducers","errorHandler","response","alert","API_URL","API_AUTH","axios","post","token","doLogin","authSaga","values","call","put","ERROR","takeEvery","axiosDefault","Authorization","API_MANAGE","changePassword","fetchUser","addShop","editShop","deleteShop","manageSaga","all","API_OWNER","list","invoices","fetchPartners","addPartner","editPartner","deletePartner","fetchCards","addCard","deleteCard","fetchOrders","setVerifyStatus","ownerSaga","rootSaga","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","createMuiTheme","typography","fontFamily","dark","contrastText","secondary","background","default","overrides","MuiButton","textTransform","fontSize","outlinedPrimary","borderColor","containedSecondary","MuiFilledInput","underline","borderBottomWidth","input","MuiDialogActions","MuiDialogTitle","ruRU","ReactDOM","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.da90fba4.chunk.js","sourcesContent":["import { Action } from \"redux\";\n\nimport { IPartner } from \"../owner/state\";\nimport { IShop, IUser } from \"./state\";\n\nexport enum ManageActionsTypes {\n  CHANGE_NAME_EMAIL = \"manage/CHANGE_NAME_EMAIL\",\n  CHANGE_PASSWORD = \"manage/CHANGE_PASSWORD\",\n\n  SET_USER = \"manage/SET_USER\",\n  FETCH_USER = \"manage/FETCH_USER\",\n\n  SET_SHOPS = \"manage/SET_SHOPS\",\n  SET_SHOP = \"manage/SET_SHOP\",\n  FETCH_SHOPS = \"manage/FETCH_SHOPS\",\n  ADD_SHOP = \"manage/ADD_SHOP\",\n  EDIT_SHOP = \"manage/EDIT_SHOP\",\n  DELETE_SHOP = \"manage/DELETE_SHOP\",\n\n  KEY_REFRESH = \"manage/KEY_REFRESH\",\n  SET_KEY = \"manage/SET_KEY\",\n}\n\n// ACTIONS TYPES\nexport interface IChangeNameWithEmail extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.CHANGE_NAME_EMAIL;\n  payload: { name: IUser[\"name\"]; email: IUser[\"email\"] };\n}\nexport interface IChangePassword extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.CHANGE_PASSWORD;\n  payload: { oldPassword: string; newPassword: string };\n}\n\nexport interface IFetchUser extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.FETCH_USER;\n}\nexport interface ISetUser extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.SET_USER;\n  payload: IUser;\n}\n\nexport interface IFetchShops extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.FETCH_SHOPS;\n  payload: { partnerId?: IPartner[\"id\"]; page: number };\n}\nexport interface ISetShops extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.SET_SHOPS;\n  payload: IShop[];\n}\nexport interface ISetShop extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.SET_SHOP;\n  payload: IShop;\n}\nexport interface IAddShop extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.ADD_SHOP;\n  payload: { name: IShop[\"name\"]; siteURL: IShop[\"siteURL\"] };\n}\n\nexport interface IEditShop extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.EDIT_SHOP;\n  payload: {\n    id: IShop[\"id\"];\n    name: IShop[\"name\"];\n    failURL: IShop[\"failURL\"];\n    successURL: IShop[\"successURL\"];\n    webhookURL: IShop[\"webhookURL\"];\n  };\n}\nexport interface IDeleteShop extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.DELETE_SHOP;\n  payload: IShop[\"id\"];\n}\n\nexport interface IRefreshKey extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.KEY_REFRESH;\n  payload: { id: IShop[\"id\"]; value: \"publicKey\" | \"webhookSecretKey\" };\n}\nexport interface ISetKey extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.SET_KEY;\n  payload: { id: IShop[\"id\"]; [key: string]: any };\n}\n\n// ACTIONS\nexport const changeNameWithEmail = (payload: IChangeNameWithEmail[\"payload\"]): IChangeNameWithEmail => ({\n  type: ManageActionsTypes.CHANGE_NAME_EMAIL,\n  payload,\n});\nexport const changePassword = (payload: IChangePassword[\"payload\"]): IChangePassword => ({\n  type: ManageActionsTypes.CHANGE_PASSWORD,\n  payload,\n});\n\nexport const fetchUser = (): IFetchUser => ({\n  type: ManageActionsTypes.FETCH_USER,\n});\nexport const setUser = (payload: IUser): ISetUser => ({\n  type: ManageActionsTypes.SET_USER,\n  payload,\n});\n\nexport const fetchShops = (payload: IFetchShops[\"payload\"]): IFetchShops => ({\n  type: ManageActionsTypes.FETCH_SHOPS,\n  payload,\n});\nexport const setShops = (payload: ISetShops[\"payload\"]): ISetShops => ({\n  type: ManageActionsTypes.SET_SHOPS,\n  payload,\n});\nexport const setShop = (payload: ISetShop[\"payload\"]): ISetShop => ({\n  type: ManageActionsTypes.SET_SHOP,\n  payload,\n});\nexport const addShop = (payload: IAddShop[\"payload\"]): IAddShop => ({\n  type: ManageActionsTypes.ADD_SHOP,\n  payload,\n});\nexport const editShop = (payload: IEditShop[\"payload\"]): IEditShop => ({\n  type: ManageActionsTypes.EDIT_SHOP,\n  payload,\n});\nexport const deleteShop = (payload: IDeleteShop[\"payload\"]): IDeleteShop => ({\n  type: ManageActionsTypes.DELETE_SHOP,\n  payload,\n});\n\nexport const refreshKey = (payload: IRefreshKey[\"payload\"]): IRefreshKey => ({\n  type: ManageActionsTypes.KEY_REFRESH,\n  payload,\n});\nexport const setKey = (payload: ISetKey[\"payload\"]): ISetKey => ({\n  type: ManageActionsTypes.SET_KEY,\n  payload,\n});\n\nexport type ManageActions =\n  | IChangeNameWithEmail\n  | IChangePassword\n  | IFetchUser\n  | ISetUser\n  | IFetchShops\n  | ISetShops\n  | ISetShop\n  | IAddShop\n  | IEditShop\n  | IDeleteShop\n  | IRefreshKey\n  | ISetKey;\n","import { FC, memo } from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport { Control } from \"react-hook-form/dist/types/form\";\nimport { TextField } from \"@material-ui/core\";\n\ninterface Props {\n  control: Control<any>;\n  name: string;\n  defaultValue?: string | number;\n  type?: string;\n  label?: string;\n  error?: any;\n  variant?: string;\n  margin?: string;\n  helperText?: any;\n  required?: boolean;\n  fullWidth?: boolean;\n  maxLength?: number;\n  min?: number;\n  max?: number;\n  autoComplete?: string;\n  autoFocus?: boolean;\n}\n\nconst Input: FC<Props> = ({\n  control,\n  name,\n  defaultValue = \"\",\n  type = \"text\",\n  label,\n  error,\n  helperText,\n  required,\n  fullWidth = true,\n  maxLength,\n  min,\n  max,\n  autoComplete,\n  autoFocus,\n}) => {\n  return (\n    <Controller\n      name={name}\n      control={control}\n      defaultValue={defaultValue}\n      render={({ field }) => (\n        <TextField\n          label={label}\n          type={type}\n          variant=\"outlined\"\n          margin=\"normal\"\n          error={error}\n          required={required}\n          helperText={helperText}\n          autoComplete={autoComplete}\n          autoFocus={autoFocus}\n          fullWidth={fullWidth}\n          inputProps={{\n            maxLength,\n            min,\n            max,\n          }}\n          {...field}\n          // убирает warning в консоле\n          value={field.value || \"\"}\n        />\n      )}\n    />\n  );\n};\n\nexport default memo(Input);\n","import { FC, memo } from \"react\";\n\nimport { Dialog as MuiDialog, DialogContent, DialogActions, DialogTitle, IconButton, Button } from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\n\ninterface Props {\n  open: boolean;\n  handleClose: () => void;\n  title?: any;\n  form?: string;\n  children: any;\n}\n\nconst Dialog: FC<Props> = ({ open, handleClose, title, form, children }) => {\n  return (\n    <MuiDialog onClose={handleClose} open={open}>\n      {title && (\n        <DialogTitle>\n          {title}\n          <IconButton onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n      )}\n      <DialogContent dividers>{children}</DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"default\">\n          Закрыть\n        </Button>\n        {form && (\n          <Button type=\"submit\" form={form} color=\"primary\">\n            Сохранить\n          </Button>\n        )}\n      </DialogActions>\n    </MuiDialog>\n  );\n};\n\nexport default memo(Dialog);\n","import { Action } from \"redux\";\nimport { ILogin, IAuth } from \"./state\";\n\nexport enum AuthActionsTypes {\n  LOGIN = \"auth/LOGIN\",\n  LOGOUT = \"auth/LOGOUT\",\n  SET_STATUS = \"auth/SET_STATUS\",\n  SET_TOKEN = \"auth/SET_TOKEN\",\n}\n\n// ACTIONS TYPES\nexport interface ILoginAction extends Action<AuthActionsTypes> {\n  type: AuthActionsTypes.LOGIN;\n  payload: ILogin;\n}\nexport interface ILogoutAction extends Action<AuthActionsTypes> {\n  type: AuthActionsTypes.LOGOUT;\n}\n\nexport interface IAuthStatus extends Action<AuthActionsTypes> {\n  type: AuthActionsTypes.SET_STATUS;\n  payload: IAuth[\"status\"];\n}\ninterface IAuthToken extends Action<AuthActionsTypes> {\n  type: AuthActionsTypes.SET_TOKEN;\n  payload: string;\n}\n\n// ACTIONS\nexport const login = (payload: ILoginAction[\"payload\"]): ILoginAction => ({\n  type: AuthActionsTypes.LOGIN,\n  payload,\n});\nexport const logout = (): ILogoutAction => ({\n  type: AuthActionsTypes.LOGOUT,\n});\n\nexport const setAuthStatus = (payload: IAuthStatus[\"payload\"]): IAuthStatus => ({\n  type: AuthActionsTypes.SET_STATUS,\n  payload,\n});\nexport const setAuthToken = (payload: IAuthToken[\"payload\"]): IAuthToken => ({\n  type: AuthActionsTypes.SET_TOKEN,\n  payload,\n});\n\nexport type AuthActions = ILoginAction | ILogoutAction | IAuthStatus | IAuthToken;\n","import { FC, ReactElement, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n\nimport Input from \"components/UI/Fields/Input\";\nimport Dialog from \"components/UI/Dialog\";\n\nimport { IManage } from \"store/ducks/manage/state\";\nimport { changeNameWithEmail, changePassword } from \"store/ducks/manage/actionCreators\";\n\ninterface Props {\n  open: boolean;\n  handleClose: () => void;\n  user: IManage[\"user\"];\n}\n\ninterface IDefaultValues {\n  name: string;\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n}\n\nexport const getAccountType = (type: number): string => {\n  switch (type) {\n    case 1:\n      return \"Партнер\";\n    case 2:\n      return \"Модератор\";\n    case 3:\n      return \"Владелец\";\n    default:\n      return \"\";\n  }\n};\n\nexport const SettingsDialog: FC<Props> = ({ open, handleClose, user }): ReactElement => {\n  const dispatch = useDispatch();\n\n  const defaultValues: IDefaultValues = {\n    name: user.name,\n    email: user.email,\n    oldPassword: \"\",\n    newPassword: \"\",\n  };\n  const { control, handleSubmit, watch, reset } = useForm<IDefaultValues>({\n    defaultValues,\n  });\n\n  const [errors, setErrors] = useState<any>({});\n\n  const name = watch(\"name\");\n  const email = watch(\"email\");\n  const oldPassword = watch(\"oldPassword\");\n  const newPassword = watch(\"newPassword\");\n\n  const onSubmit = () => {\n    setErrors({});\n    // проверка на пароль должна быть выше\n\n    if (oldPassword) {\n      // если длина пароля менее 8 или более 50 символов\n      if (oldPassword.length < 8 || oldPassword.length > 50) {\n        setErrors((prev: any) => ({\n          ...prev,\n          password: \"Минимальная длина пароля 8 символов, максимальная 50\",\n        }));\n        return;\n      }\n\n      // если пароли не совпадают\n      if (oldPassword !== newPassword) {\n        setErrors((prev: any) => ({\n          ...prev,\n          password: \"Пароли должны совпадать\",\n        }));\n        return;\n      }\n\n      dispatch(changePassword({ oldPassword, newPassword }));\n      reset({\n        oldPassword: \"\",\n        newPassword: \"\",\n      });\n    }\n\n    // если поля изменились\n    if (name !== defaultValues.name || email !== defaultValues.email) {\n      // если имя соджержит менее 3 символов и в строке присутствуют числа\n      if (name.length < 3 || /\\d/.test(name.trim())) {\n        setErrors((prev: any) => ({\n          ...prev,\n          name: \"Имя не должно содержать цифры и должно быть не менее 3 буквенных символов\",\n        }));\n      }\n\n      // если поле пустое или не соответствует паттерну email@example.com\n      if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) {\n        setErrors((prev: any) => ({\n          ...prev,\n          email: \"Неверный формат почты\",\n        }));\n        return;\n      }\n\n      const action = dispatch(changeNameWithEmail({ name, email }));\n      // ресет, чтобы при открытии диалогового данные были актуальными\n      reset({\n        name: action.payload.name,\n        email: action.payload.email,\n      });\n    }\n\n    setErrors({});\n    handleClose();\n  };\n\n  // подстановка асинхронных данных пользователя в поля формы\n  useEffect(() => {\n    reset(user);\n  }, [reset, user]);\n\n  return (\n    <Dialog\n      handleClose={handleClose}\n      open={open}\n      title={`Аккаунт типа ${getAccountType(user.type)}`}\n      form=\"accountForm\">\n      <form id=\"accountForm\" onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          control={control}\n          name=\"name\"\n          label=\"Имя\"\n          type=\"text\"\n          defaultValue={user.name}\n          error={!!errors.name}\n          helperText={errors?.name}\n          autoFocus\n        />\n        <Input\n          control={control}\n          name=\"email\"\n          label=\"Email\"\n          type=\"text\"\n          defaultValue={user.email}\n          error={!!errors.email}\n          helperText={errors?.email}\n        />\n        <Input\n          control={control}\n          name=\"oldPassword\"\n          label=\"Новый пароль\"\n          type=\"password\"\n          error={!!errors.password}\n          helperText={errors?.password}\n        />\n        <Input\n          control={control}\n          name=\"newPassword\"\n          label=\"Повтор нового пароля\"\n          type=\"password\"\n          error={!!errors.password}\n          helperText={errors?.password}\n        />\n      </form>\n    </Dialog>\n  );\n};\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","interface IBreakpoint {\n  [key: string]: number;\n}\n\nexport const BREAKPOINTS: IBreakpoint = {\n  lg: 1100,\n  md: 960,\n  sm: 768,\n  xs: 560,\n};\n","import { Action } from \"redux\";\nimport { IShop } from \"../manage/state\";\nimport { ICard, IOrder, IPartner } from \"./state\";\n\nexport enum OwnerActionsTypes {\n  FETCH_PARTNERS = \"owner/FETCH_PARTNERS\",\n  SET_PARTNERS = \"owner/SET_PARTNERS\",\n  ADD_PARTNER = \"owner/ADD_PARTNER\",\n  EDIT_PARTNER = \"owner/EDIT_PARTNER\",\n  DELETE_PARTNER = \"owner/DELETE_PARTNER\",\n\n  FETCH_CARDS = \"owner/FETCH_CARDS\",\n  // FETCH_CARD = \"owner/FETCH_CARD\",\n  SET_CARDS = \"owner/SET_CARDS\",\n  ADD_CARD = \"owner/ADD_CARD\",\n  DELETE_CARD = \"owner/DELETE_CARD\",\n\n  FETCH_ORDERS = \"owner/FETCH_ORDERS\",\n  SET_ORDERS = \"owner/SET_ORDERS\",\n\n  VERIFY_STATUS = \"owner/VERIFY_STATUS\",\n}\n\n// ACTIONS TYPES\nexport interface IFetchPartners extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.FETCH_PARTNERS;\n}\nexport interface ISetPartners extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.SET_PARTNERS;\n  payload: IPartner[];\n}\nexport interface IAddPartner extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.ADD_PARTNER;\n  payload: {\n    name: IPartner[\"name\"];\n    email: IPartner[\"email\"];\n    password: IPartner[\"password\"];\n  };\n}\nexport interface IEditPartner extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.EDIT_PARTNER;\n  payload: {\n    id: IPartner[\"id\"];\n    email?: IPartner[\"email\"];\n    password?: IPartner[\"password\"];\n    description?: IPartner[\"description\"];\n    commission: IPartner[\"commission\"];\n  };\n}\nexport interface IDeletePartner extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.DELETE_PARTNER;\n  payload: IPartner[\"id\"];\n}\n\nexport interface IFetchCards extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.FETCH_CARDS;\n}\n// export interface IFetchCard extends Action<OwnerActionsTypes> {\n//   type: OwnerActionsTypes.FETCH_CARD;\n//   payload: ICard[\"id\"];\n// }\nexport interface ISetCards extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.SET_CARDS;\n  payload: ICard[];\n}\nexport interface IAddCard extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.ADD_CARD;\n  payload: { cardNumber: string; mm: string; yy: string; cvv: string };\n}\nexport interface IDeleteCard extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.DELETE_CARD;\n  payload: ICard[\"id\"];\n}\n\nexport interface IFetchOrders extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.FETCH_ORDERS;\n  payload: { page: number };\n}\nexport interface ISetOrders extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.SET_ORDERS;\n  payload: IOrder[];\n}\n\nexport interface ISetVerifyStatus extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.VERIFY_STATUS;\n  payload: { id: IShop[\"id\"]; newStatus: IShop[\"verifyStatus\"] };\n}\n\n// ACTIONS\nexport const fetchPartners = (): IFetchPartners => ({\n  type: OwnerActionsTypes.FETCH_PARTNERS,\n});\nexport const setPartners = (payload: IPartner[]): ISetPartners => ({\n  type: OwnerActionsTypes.SET_PARTNERS,\n  payload,\n});\nexport const addPartner = (payload: IAddPartner[\"payload\"]): IAddPartner => ({\n  type: OwnerActionsTypes.ADD_PARTNER,\n  payload,\n});\nexport const editPartner = (payload: IEditPartner[\"payload\"]): IEditPartner => ({\n  type: OwnerActionsTypes.EDIT_PARTNER,\n  payload,\n});\nexport const deletePartner = (payload: IDeletePartner[\"payload\"]): IDeletePartner => ({\n  type: OwnerActionsTypes.DELETE_PARTNER,\n  payload,\n});\n\nexport const fetchCards = (): IFetchCards => ({\n  type: OwnerActionsTypes.FETCH_CARDS,\n});\n// export const fetchCard = (payload: IFetchCard[\"payload\"]): IFetchCard => ({\n//   type: OwnerActionsTypes.FETCH_CARD,\n//   payload,\n// });\nexport const setCards = (payload: ICard[]): ISetCards => ({\n  type: OwnerActionsTypes.SET_CARDS,\n  payload,\n});\nexport const addCard = (payload: IAddCard[\"payload\"]): IAddCard => ({\n  type: OwnerActionsTypes.ADD_CARD,\n  payload,\n});\nexport const deleteCard = (payload: IDeleteCard[\"payload\"]): IDeleteCard => ({\n  type: OwnerActionsTypes.DELETE_CARD,\n  payload,\n});\n\nexport const fetchOrders = (payload: IFetchOrders[\"payload\"]): IFetchOrders => ({\n  type: OwnerActionsTypes.FETCH_ORDERS,\n  payload,\n});\nexport const setOrders = (payload: IOrder[]): ISetOrders => ({\n  type: OwnerActionsTypes.SET_ORDERS,\n  payload,\n});\n\nexport const setVerifyStatus = (payload: ISetVerifyStatus[\"payload\"]): ISetVerifyStatus => ({\n  type: OwnerActionsTypes.VERIFY_STATUS,\n  payload,\n});\n\nexport type OwnerActions =\n  | IFetchPartners\n  | ISetPartners\n  | IAddPartner\n  | IEditPartner\n  | IDeletePartner\n  | IFetchCards\n  // | IFetchCard\n  | ISetCards\n  | IAddCard\n  | IDeleteCard\n  | IFetchOrders\n  | ISetOrders\n  | ISetVerifyStatus;\n","import { RootState } from \"store/rootReducer\";\nimport { IManage, IShop, Status } from \"./state\";\n\nexport const selectUser = (state: RootState): IManage[\"user\"] => state.manage.user;\nexport const selectShops = (state: RootState): IShop[] => state.manage.user.shops;\nexport const selectShop = (state: RootState, id: number): IShop | undefined =>\n  state.manage.user.shops.find(shop => shop.id === id);\nexport const selectStatus = (state: RootState): Status => state.manage.status;\n","import { FC, ReactElement, memo, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport clsx from \"clsx\";\n\nimport { makeStyles, AppBar, Toolbar, Typography, IconButton, Menu, MenuItem, Button } from \"@material-ui/core\";\nimport { Menu as MenuIcon, AccountCircle, ExitToApp } from \"@material-ui/icons\";\nimport { SettingsDialog } from \"./SettingsDialog\";\n\nimport { history } from \"utils/history\";\nimport { BREAKPOINTS } from \"constants/BREAKPOINTS\";\nimport { IRoute } from \"constants/ROUTES\";\n\nimport { logout } from \"store/ducks/auth/actionCreators\";\nimport { selectUser } from \"store/ducks/manage/selectors\";\nimport { fetchUser } from \"store/ducks/manage/actionCreators\";\n\ninterface Props {\n  open: boolean;\n  handleDrawerOpen: () => void;\n  route?: IRoute;\n}\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    paddingRight: 24,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  login: {\n    marginLeft: \"auto\",\n  },\n}));\n\nconst Navbar: FC<Props> = ({ open, handleDrawerOpen, route }): ReactElement => {\n  const s = useStyles();\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [menu, setMenu] = useState<null | HTMLElement>(null);\n\n  const handleMenuOpen = (event: React.MouseEvent<HTMLButtonElement>) => setMenu(event.currentTarget);\n  const handleMenuClose = () => setMenu(null);\n\n  const handleDialogOpen = () => {\n    handleMenuClose();\n    setDialogOpen(true);\n  };\n  const handleDialogClose = () => {\n    handleMenuClose();\n    setDialogOpen(false);\n  };\n\n  const handleLogout = () => {\n    handleMenuClose();\n    dispatch(logout());\n    history.push(\"/auth\");\n  };\n\n  useEffect(() => {\n    if (user.id < 0) dispatch(fetchUser());\n  }, [dispatch, user]);\n\n  // Проверка на доступ юзера к роуту при его смене\n  useEffect(() => {\n    if (route?.access) {\n      route.access.findIndex(role => role === user.type) < 0 && history.push(\"/404\");\n    }\n  }, [route, user.type]);\n\n  return (\n    <AppBar position=\"absolute\" className={clsx(s.appBar, open && s.appBarShift)}>\n      <Toolbar className={s.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          onClick={handleDrawerOpen}\n          className={clsx(s.menuButton, open && s.menuButtonHidden)}>\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap className={s.title}>\n          {window.innerWidth > BREAKPOINTS.lg ? route?.name : !open ? route?.name : \"\"}\n        </Typography>\n        {user.email ? (\n          <Button onClick={handleMenuOpen} color=\"inherit\">\n            {user.email}\n          </Button>\n        ) : (\n          <IconButton edge=\"start\" color=\"inherit\" onClick={handleLogout}>\n            <ExitToApp />\n          </IconButton>\n        )}\n        <Menu id=\"simple-menu\" anchorEl={menu} keepMounted open={Boolean(menu)} onClose={handleMenuClose}>\n          <MenuItem onClick={handleDialogOpen}>\n            <AccountCircle />   Аккаунт\n          </MenuItem>\n          <MenuItem onClick={handleLogout}>\n            <ExitToApp />   Выход\n          </MenuItem>\n        </Menu>\n      </Toolbar>\n\n      <SettingsDialog open={dialogOpen} handleClose={handleDialogClose} user={user} />\n    </AppBar>\n  );\n};\n\nexport default memo(Navbar);\n","export default __webpack_public_path__ + \"static/media/logo.aeea5895.svg\";","import { Dashboard, People, Payment, Receipt, List, AttachMoney, LocalAtm } from \"@material-ui/icons\";\n\nexport interface menuItem {\n  title: string;\n  path: string;\n  icon: any;\n}\n\nexport const MENU_ADMIN: menuItem[] = [\n  {\n    title: \"Главная\",\n    path: \"/\",\n    icon: Dashboard,\n  },\n  {\n    title: \"Партнеры\",\n    path: \"/partners\",\n    icon: People,\n  },\n  {\n    title: \"Список заказов\",\n    path: \"/orders\",\n    icon: List,\n  },\n  {\n    title: \"Выплаты\",\n    path: \"/payments\",\n    icon: Receipt,\n  },\n  {\n    title: \"Пулл карт\",\n    path: \"/cards\",\n    icon: Payment,\n  },\n  {\n    title: \"Терминалы\",\n    path: \"/terminals\",\n    icon: LocalAtm,\n  },\n  {\n    title: \"Учет финансов\",\n    path: \"/finances\",\n    icon: AttachMoney,\n  },\n];\n\nexport const MENU_MODERATOR: menuItem[] = [\n  {\n    title: \"Главная\",\n    path: \"/\",\n    icon: Dashboard,\n  },\n  {\n    title: \"Партнеры\",\n    path: \"/partners\",\n    icon: People,\n  },\n  {\n    title: \"Выплаты\",\n    path: \"/payments\",\n    icon: Receipt,\n  },\n];\n\nexport const MENU_PARTNER: menuItem[] = [\n  {\n    title: \"Главная\",\n    path: \"/\",\n    icon: Dashboard,\n  },\n  {\n    title: \"Выплаты\",\n    path: \"/payments\",\n    icon: Receipt,\n  },\n];\n","import { FC, memo, ReactElement } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport clsx from \"clsx\";\n\nimport { makeStyles, Drawer, List, Divider, IconButton, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { ChevronLeft } from \"@material-ui/icons\";\nimport Logo from \"assets/img/logo.svg\";\n\nimport { selectUser } from \"store/ducks/manage/selectors\";\n\nimport { menuItem, MENU_ADMIN, MENU_MODERATOR, MENU_PARTNER } from \"./constants\";\n\ninterface Props {\n  open: boolean;\n  handleDrawerClose: () => void;\n  routeName?: string;\n}\n\nconst useStyles = makeStyles(theme => ({\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  logo: {\n    maxWidth: \"160px\",\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: 240,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  link: {\n    color: \"inherit\",\n  },\n}));\n\nconst Sidebar: FC<Props> = ({ open, handleDrawerClose, routeName }): ReactElement => {\n  const s = useStyles();\n  const user = useSelector(selectUser);\n  const menuItems =\n    user.type === 3 ? MENU_ADMIN : user.type === 2 ? MENU_MODERATOR : user.type === 1 ? MENU_PARTNER : [];\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: clsx(s.drawerPaper, !open && s.drawerPaperClose),\n      }}\n      open={open}>\n      <div className={s.toolbarIcon}>\n        <img className={s.logo} src={Logo} alt=\"logo\" />\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeft />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        {menuItems.map((item: menuItem, i: number) => (\n          <Link to={item.path} className={s.link} key={i}>\n            <ListItem button selected={routeName === item.title}>\n              <ListItemIcon>\n                <item.icon />\n              </ListItemIcon>\n              <ListItemText primary={item.title} />\n            </ListItem>\n          </Link>\n        ))}\n      </List>\n    </Drawer>\n  );\n};\n\nexport default memo(Sidebar);\n","import { FC, ReactElement, useState } from \"react\";\n\nimport { makeStyles, Container } from \"@material-ui/core\";\n\nimport Navbar from \"./Navbar\";\nimport Sidebar from \"./Sidebar\";\n\nimport { IRoute } from \"constants/ROUTES\";\nimport { BREAKPOINTS } from \"constants/BREAKPOINTS\";\n\ninterface Props {\n  route?: IRoute;\n  children?: any;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst DefaultLayout: FC = ({ route, children }: Props): ReactElement => {\n  const s = useStyles();\n  const [open, setOpen] = useState<boolean>(window.innerWidth > BREAKPOINTS.lg);\n\n  const handleDrawerOpen = () => setOpen(true);\n  const handleDrawerClose = () => setOpen(false);\n\n  return (\n    <div className={s.root}>\n      <Navbar open={open} handleDrawerOpen={handleDrawerOpen} route={route} />\n      <Sidebar open={open} handleDrawerClose={handleDrawerClose} routeName={route?.name} />\n\n      <main className={s.content}>\n        <div className={s.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={s.container}>\n          {children}\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nexport default DefaultLayout;\n","import { FC, ReactElement } from \"react\";\n\nimport { makeStyles, Container } from \"@material-ui/core\";\n\nimport { IRoute } from \"constants/ROUTES\";\n\ninterface Props {\n  route?: IRoute;\n  children?: any;\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(8),\n  },\n}));\n\nconst LayoutAuth: FC = ({ children }: Props): ReactElement => {\n  const s = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={s.paper}>{children}</div>\n    </Container>\n  );\n};\n\nexport default LayoutAuth;\n","import { FC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Button } from \"@material-ui/core\";\n\ninterface Props {\n  code: number;\n  message?: string;\n}\n\nconst Error: FC<Props> = ({ code, message }) => {\n  const history = useHistory();\n\n  const handleBack = () => history.push(\"/\");\n\n  return (\n    <>\n      <h1>Ошибка {code}</h1>\n      <p>{message}</p>\n      <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={handleBack}>\n        На главную\n      </Button>\n    </>\n  );\n};\n\nexport default Error;\n","import Cookies from \"universal-cookie\";\n\nexport const cookies = new Cookies();\n","import { RootState } from \"store/rootReducer\";\nimport { Status } from \"./state\";\n\nexport const selectStatus = (state: RootState): Status => state.auth.status;\n","import { FC, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { cookies } from \"plugins/cookies\";\n\nimport { makeStyles, Avatar, Button, Typography, CircularProgress } from \"@material-ui/core\";\nimport { Lock } from \"@material-ui/icons\";\nimport Input from \"components/UI/Fields/Input\";\n\nimport { login } from \"store/ducks/auth/actionCreators\";\nimport { selectStatus } from \"store/ducks/auth/selectors\";\n\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  spinner: {\n    color: \"white\",\n  },\n}));\n\nconst Auth: FC = () => {\n  const s = useStyles();\n  const dispatch = useDispatch();\n  const AuthStatus = useSelector(selectStatus);\n\n  const { control, handleSubmit, watch } = useForm();\n\n  const [errors, setErrors] = useState<any>({});\n\n  const email = watch(\"email\");\n  const password = watch(\"password\");\n\n  const onSubmit = (): void => {\n    // если поле пустое или не соответствует паттерну email@example.com\n    if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) {\n      setErrors((prev: any) => ({\n        ...prev,\n        email: \"Неверный формат почты\",\n      }));\n      return;\n    }\n\n    if (!password) {\n      setErrors((prev: any) => ({\n        ...prev,\n        password: \"Необходимо ввести пароль\",\n      }));\n      return;\n    }\n\n    if (password.length < 8 || password.length > 50) {\n      setErrors((prev: any) => ({\n        ...prev,\n        password: \"Минимальная длина пароля 8 символов, максимальная 50\",\n      }));\n      return;\n    }\n\n    dispatch(login({ email, password }));\n  };\n\n  if (cookies.get(\"token\")) {\n    // history.push() не всегда срабатывает\n    window.location.href = \"/\";\n    return <></>;\n  }\n\n  return (\n    <>\n      <Avatar className={s.avatar}>\n        <Lock />\n      </Avatar>\n      <Typography variant=\"h5\">Авторизация</Typography>\n      <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          control={control}\n          name=\"email\"\n          label=\"Email\"\n          type=\"text\"\n          autoComplete=\"email\"\n          error={!!errors.email}\n          helperText={errors?.email}\n          autoFocus\n        />\n        <Input\n          control={control}\n          name=\"password\"\n          label=\"Пароль\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          error={!!errors.password}\n          helperText={errors?.password}\n          autoFocus\n        />\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={s.submit}\n          disabled={AuthStatus === \"AUTHORIZING\"}>\n          {AuthStatus === \"AUTHORIZING\" ? <CircularProgress size={20} className={s.spinner} /> : \"Войти\"}\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default Auth;\n","import { FC } from \"react\";\n\nimport { makeStyles, CircularProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  wrapper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"67vh\",\n  },\n});\n\nexport const Loading: FC = () => {\n  const s = useStyles();\n\n  return (\n    <div className={s.wrapper}>\n      <CircularProgress size={64} />\n    </div>\n  );\n};\n","import { FC, memo } from \"react\";\n\nimport { makeStyles, Paper, Typography } from \"@material-ui/core\";\n\ninterface Props {\n  title: string;\n  text: string;\n  action?: any;\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n  depositContext: {\n    flex: 1,\n  },\n}));\n\nconst Card: FC<Props> = ({ title, text, action }) => {\n  const s = useStyles();\n\n  return (\n    <Paper className={s.paper}>\n      <Typography component=\"h2\" variant=\"h6\" color=\"primary\">\n        {title}\n      </Typography>\n      <Typography component=\"p\" variant=\"h4\" gutterBottom>\n        {text}\n      </Typography>\n      {action}\n    </Paper>\n  );\n};\n\nexport default memo(Card);\n","export const getPrice = (value: string | number = \"\") => `${value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} ₽`;\n","import { FC } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport Card from \"components/UI/Card\";\n\nimport { getPrice } from \"utils/getPrice\";\n\nexport const AdminHome: FC = () => {\n  return (\n    <>\n      <Grid item xs={12} md={6} lg={3}>\n        <Card title=\"Поступления за день\" text={getPrice(19600)} />\n      </Grid>\n      <Grid item xs={12} md={6} lg={3}>\n        <Card title=\"К выплате\" text={getPrice(9300)} />\n      </Grid>\n      <Grid item xs={12} md={6} lg={3}>\n        <Card title=\"Партнеры\" text=\"68\" />\n      </Grid>\n      <Grid item xs={12} md={6} lg={3}>\n        <Card title=\"Выставлено счетов\" text=\"196\" />\n      </Grid>\n    </>\n  );\n};\n","import { FC } from \"react\";\nimport clsx from \"clsx\";\n\nimport { makeStyles, Tooltip } from \"@material-ui/core\";\nimport { green, red, yellow } from \"@material-ui/core/colors\";\n\nimport { IShop } from \"store/ducks/manage/state\";\n\ninterface Props {\n  data: IShop[\"verifyStatus\"];\n}\n\nconst useStyles = makeStyles(theme => ({\n  status: {\n    marginLeft: theme.spacing(1),\n    width: theme.spacing(1),\n    height: theme.spacing(1),\n    backgroundColor: theme.palette.text.disabled,\n    borderRadius: \"100%\",\n    \"&:hover\": {\n      transform: \"scale(1.25)\",\n    },\n  },\n  success: {\n    backgroundColor: green.A400,\n  },\n  processing: {\n    backgroundColor: yellow[600],\n  },\n  error: {\n    backgroundColor: red.A400,\n  },\n}));\n\nconst getStatus = (status: Props[\"data\"]): string => {\n  switch (status) {\n    case 1:\n      return \"Идет верификация\";\n    case 2:\n      return \"Верифицирован\";\n    case 3:\n      return \"Неверифицирован\";\n    default:\n      return \"Статус отсутствует\";\n  }\n};\n\nexport const Status: FC<Props> = ({ data }) => {\n  const s = useStyles();\n\n  return (\n    <Tooltip title={getStatus(data)} placement=\"right\">\n      <div\n        className={clsx(s.status, {\n          [s.processing]: data === 1,\n          [s.success]: data === 2,\n          [s.error]: data === 3,\n        })}\n      />\n    </Tooltip>\n  );\n};\n","import { FC, memo } from \"react\";\nimport clsx from \"clsx\";\n\nimport { makeStyles, TableCell, TableRow as MuiTableRow } from \"@material-ui/core\";\nimport { Status } from \"components/UI/Status\";\n\nimport { ITableRow } from \"./types\";\n\ninterface Props {\n  row: ITableRow;\n  id: string | number | undefined;\n  onRowClick?: any | undefined;\n}\n\nconst useStyles = makeStyles(theme => ({\n  cell: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  pointer: {\n    cursor: \"pointer\",\n  },\n  coin: {\n    maxWidth: theme.spacing(3),\n  },\n}));\n\nconst TableRow: FC<Props> = ({ row, id, onRowClick }) => {\n  const s = useStyles();\n\n  return (\n    <MuiTableRow onClick={e => onRowClick && onRowClick(e, id)} key={id} hover={Boolean(onRowClick)}>\n      {row.columns.map((column, i) => (\n        <TableCell\n          className={clsx({\n            [s.pointer]: Boolean(onRowClick),\n          })}\n          key={i}>\n          {column?.status ? (\n            <div className={s.cell}>{<Status data={column.status} />}</div>\n          ) : column?.coin ? (\n            <img className={s.coin} src={`/img/coins/${column.coin}.svg`} alt={column.coin} title={column.coin} />\n          ) : (\n            column.content\n          )}\n        </TableCell>\n      ))}\n    </MuiTableRow>\n  );\n};\n\nexport default memo(TableRow);\n","import { FC, memo, ReactElement, ChangeEvent, useState, useEffect } from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\n\nimport { ITableHeader } from \"./types\";\nimport { ITableRow } from \"./types\";\nimport {\n  Paper,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow as MuiTableRow,\n  TableHead,\n  TableCell,\n  TablePagination,\n  Typography,\n} from \"@material-ui/core\";\nimport TableRow from \"./Row\";\n\ninterface Props {\n  title?: any;\n  button?: ReactElement;\n  rows: ITableRow[];\n  headers: ITableHeader[];\n  currentPage?: number;\n  setCurrentPage?: (page: number) => void;\n  searchBy?: string;\n  onRowClick?: (e: any, id: number) => void | undefined;\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    overflowX: \"auto\",\n    boxShadow: \"none\",\n  },\n  tableHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  title: {\n    marginRight: \"auto\",\n  },\n  search: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst getSearchLabel = (field: Props[\"searchBy\"]) => {\n  switch (field) {\n    case \"name\":\n      return \"имени\";\n    default:\n      break;\n  }\n};\n\nconst TableWrapper: FC<Props> = ({\n  title,\n  button,\n  headers,\n  rows,\n  currentPage = 0,\n  setCurrentPage,\n  searchBy,\n  onRowClick,\n}) => {\n  const s = useStyles();\n\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [page, setPage] = useState(currentPage);\n  const [searchText, setSearchText] = useState(\"\");\n  const [rowsCopy, setRowsCopy] = useState<ITableRow[]>([]);\n\n  const handleChangePage = (e: any, newPage: number) => {\n    setPage(newPage);\n    setCurrentPage && setCurrentPage(newPage);\n  };\n  const handleChangeRowsPerPage = (e: ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(e.target.value, 10));\n    setPage(0);\n    setCurrentPage && setCurrentPage(0);\n  };\n\n  const handleSearch = (e: any) => setSearchText(e.target.value.toLowerCase());\n\n  useEffect(() => {\n    if (searchText.length) {\n      const results = rows.filter(row =>\n        row.columns.find(col => col.searchBy && col.searchBy.toLowerCase().includes(searchText)),\n      );\n      setRowsCopy(results);\n    } else {\n      setRowsCopy(rows);\n    }\n  }, [searchText, rows]);\n\n  return (\n    <>\n      {(title || button) && (\n        <div className={s.tableHeader}>\n          <Typography variant=\"h6\" className={s.title}>\n            {title}\n          </Typography>\n          {searchBy && (\n            <TextField\n              className={s.search}\n              variant=\"outlined\"\n              size=\"small\"\n              name=\"searchBy\"\n              label={`Поиск по ${getSearchLabel(searchBy)}`}\n              onChange={handleSearch}\n            />\n          )}\n          {button}\n        </div>\n      )}\n      <Paper className={s.container}>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <MuiTableRow>\n                {headers.map((column, i) => (\n                  <TableCell key={i}>{column.name}</TableCell>\n                ))}\n              </MuiTableRow>\n            </TableHead>\n\n            <TableBody>\n              {rowsCopy && rowsCopy.length > 0 ? (\n                rowsCopy\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, i) => (\n                    <TableRow\n                      row={row}\n                      id={row.columns.find(col => typeof col.content === \"number\")?.content}\n                      onRowClick={onRowClick}\n                      key={i}\n                    />\n                  ))\n              ) : rows?.length ? (\n                <MuiTableRow>\n                  <TableCell colSpan={100}>Ничего не найдено</TableCell>\n                </MuiTableRow>\n              ) : (\n                <MuiTableRow>\n                  <TableCell colSpan={100}>Данные загружаются или отсутствуют</TableCell>\n                </MuiTableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </>\n  );\n};\n\nexport default memo(TableWrapper);\n","import { FC, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n\nimport Dialog from \"components/UI/Dialog\";\nimport Input from \"components/UI/Fields/Input\";\n\nimport { addShop } from \"store/ducks/manage/actionCreators\";\n\ninterface Props {\n  open: boolean;\n  handleClose: () => void;\n}\n\ninterface IDefaultValues {\n  name: string;\n  siteURL: string;\n}\n\nexport const NewDialog: FC<Props> = ({ open, handleClose }) => {\n  const dispatch = useDispatch();\n\n  const defaultValues: IDefaultValues = {\n    name: \"\",\n    siteURL: \"\",\n  };\n  const { control, handleSubmit, watch } = useForm<IDefaultValues>({\n    defaultValues,\n  });\n\n  const [errors, setErrors] = useState<any>({});\n\n  const name = watch(\"name\");\n  const siteURL = watch(\"siteURL\");\n\n  const onSubmit = () => {\n    setErrors({});\n\n    if (name.length < 3) {\n      setErrors((prev: any) => ({\n        ...prev,\n        name: \"Имя должно содержать не менее 3 буквенных символов\",\n      }));\n    }\n\n    if (\n      !siteURL.match(\n        /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_.~#?&//=]*)?/gi,\n      )\n    ) {\n      setErrors((prev: any) => ({\n        ...prev,\n        siteURL: \"Неверный формат ссылки\",\n      }));\n      return;\n    }\n\n    dispatch(addShop({ name, siteURL }));\n    setErrors({});\n    handleClose();\n  };\n\n  return (\n    <Dialog open={open} handleClose={handleClose} title=\"Добавление терминала\" form=\"addShop\">\n      <form id=\"addShop\" onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          control={control}\n          name=\"name\"\n          label=\"Имя\"\n          type=\"text\"\n          defaultValue={defaultValues.name}\n          error={!!errors.name}\n          helperText={errors?.name}\n          autoFocus\n        />\n        <Input\n          control={control}\n          name=\"siteURL\"\n          label=\"Ссылка на сайт\"\n          type=\"text\"\n          defaultValue={defaultValues.siteURL}\n          error={!!errors.siteURL}\n          helperText={errors?.siteURL}\n        />\n      </form>\n    </Dialog>\n  );\n};\n","import { FC, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n\nimport { Button, Grid, FormControlLabel, Switch, Radio, RadioGroup, Collapse } from \"@material-ui/core\";\nimport { Delete, VerifiedUser } from \"@material-ui/icons\";\nimport Input from \"components/UI/Fields/Input\";\n\nimport { editShop, deleteShop } from \"store/ducks/manage/actionCreators\";\nimport { selectUser } from \"store/ducks/manage/selectors\";\nimport { setVerifyStatus } from \"store/ducks/owner/actionCreators\";\n\ninterface Props {\n  id: number | null;\n  shop: any;\n  form: string;\n  handleClose: () => void;\n}\n\ninterface IDefaultValues {\n  name: string;\n  failURL: string;\n  successURL: string;\n  webhookURL: string;\n}\n\nexport const EditDialogForm: FC<Props> = ({ id, shop, form, handleClose }) => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  const defaultValues: IDefaultValues = {\n    name: \"\",\n    failURL: \"\",\n    successURL: \"\",\n    webhookURL: \"\",\n  };\n  const { control, handleSubmit, watch, reset } = useForm<IDefaultValues>({\n    defaultValues,\n  });\n\n  const [errors, setErrors] = useState<any>({});\n\n  const name = watch(\"name\");\n  const failURL = watch(\"failURL\");\n  const successURL = watch(\"successURL\");\n  const webhookURL = watch(\"webhookURL\");\n\n  const isLink = (field: string, value: string): boolean => {\n    if (\n      !value.match(\n        /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_.~#?&//=]*)?/gi,\n      )\n    ) {\n      setErrors((prev: any) => ({\n        ...prev,\n        [field]: \"Неверный формат ссылки\",\n      }));\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const onSubmit = () => {\n    setErrors({});\n\n    if (name.length < 3) {\n      setErrors((prev: any) => ({\n        ...prev,\n        name: \"Имя должно содержать не менее 3 буквенных символов\",\n      }));\n    }\n\n    isLink(\"failURL\", failURL);\n    isLink(\"successURL\", successURL);\n\n    // если прошла последняя проверка, отправляем запрос\n    if (id && isLink(\"webhookURL\", webhookURL)) {\n      dispatch(editShop({ id, name, failURL, successURL, webhookURL }));\n      setErrors({});\n      handleClose();\n    }\n  };\n\n  const handleDelete = () => {\n    if (id && window.confirm(`Вы действительно хотите удалить сайт ${name}?`)) {\n      handleClose();\n      dispatch(deleteShop(id));\n    }\n  };\n\n  const handleVerification = (newStatus: 1 | 2 | 3) => {\n    if (id) {\n      dispatch(setVerifyStatus({ id, newStatus }));\n      handleClose();\n    }\n  };\n\n  const [extraSettings, setExtraSettings] = useState(false);\n\n  const handleToggleExtraSettings = () => setExtraSettings(prev => !prev);\n\n  // подстановка данных терминала в поля формы\n  useEffect(() => {\n    shop &&\n      reset({\n        name: shop.name,\n        failURL: shop.failURL,\n        successURL: shop.successURL,\n        webhookURL: shop.webhookURL,\n      });\n  }, [reset, shop]);\n\n  return (\n    <form id={form} onSubmit={handleSubmit(onSubmit)}>\n      {user.type === 2 ||\n        (user.type === 3 &&\n          (shop?.verifyStatus === 2 ? (\n            <Button variant=\"outlined\" startIcon={<VerifiedUser />} onClick={() => handleVerification(3)} fullWidth>\n              Снять верификацию\n            </Button>\n          ) : (\n            <Button variant=\"outlined\" startIcon={<VerifiedUser />} onClick={() => handleVerification(2)} fullWidth>\n              Верифицировать\n            </Button>\n          )))}\n      <Input\n        control={control}\n        name=\"successURL\"\n        label=\"Успешная оплата\"\n        type=\"text\"\n        defaultValue={defaultValues.successURL}\n        error={!!errors.successURL}\n        helperText={errors?.successURL}\n        autoFocus\n      />\n      <Input\n        control={control}\n        name=\"failURL\"\n        label=\"Неуспешная оплата\"\n        type=\"text\"\n        defaultValue={defaultValues.failURL}\n        error={!!errors.failURL}\n        helperText={errors?.failURL}\n        required\n      />\n      <Input\n        control={control}\n        name=\"webhookURL\"\n        label=\"Ссылка на вебхук\"\n        type=\"text\"\n        defaultValue={defaultValues.webhookURL}\n        error={!!errors.webhookURL}\n        helperText={errors?.webhookURL}\n      />\n      <Input\n        control={control}\n        name=\"name\"\n        label=\"Имя\"\n        type=\"text\"\n        defaultValue={defaultValues.name}\n        error={!!errors.name}\n        helperText={errors?.name}\n        required\n      />\n\n      {user.type === 3 && (\n        <>\n          <FormControlLabel\n            control={<Switch checked={extraSettings} onChange={handleToggleExtraSettings} />}\n            label=\"Расширенные настройки\"\n          />\n          <Collapse in={extraSettings}>\n            <Grid container alignItems=\"center\" spacing={1}>\n              <Grid xs={6} item>\n                <Input\n                  control={control}\n                  name=\"amountmin\"\n                  label=\"Минимальная сумма\"\n                  type=\"number\"\n                  // defaultValue={defaultValues.successURL}\n                  // error={!!errors.successURL}\n                  // helperText={errors?.successURL}\n                />\n              </Grid>\n              <Grid xs={6} item>\n                <Input\n                  control={control}\n                  name=\"amountmax\"\n                  label=\"Максимальная сумма\"\n                  type=\"number\"\n                  // defaultValue={defaultValues.webhookURL}\n                  // error={!!errors.webhookURL}\n                  // helperText={errors?.webhookURL}\n                />\n              </Grid>\n              <Grid xs={12} item>\n                <Input\n                  control={control}\n                  name=\"amountday\"\n                  label=\"Суточный лимит оборота\"\n                  type=\"number\"\n                  // defaultValue={defaultValues.successURL}\n                  // error={!!errors.successURL}\n                  // helperText={errors?.successURL}\n                />\n              </Grid>\n              <Grid item>\n                <RadioGroup name=\"commission\">\n                  <FormControlLabel value=\"partner\" control={<Radio />} label=\"Партнер\" />\n                  <FormControlLabel value=\"buyer\" control={<Radio />} label=\"Покупатель\" />\n                </RadioGroup>\n              </Grid>\n            </Grid>\n          </Collapse>\n        </>\n      )}\n\n      <Button\n        variant=\"outlined\"\n        color=\"secondary\"\n        startIcon={<Delete />}\n        onClick={handleDelete}\n        style={{ marginTop: \"1rem\" }}\n        fullWidth>\n        Удалить сайт\n      </Button>\n    </form>\n  );\n};\n","import { FC, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { List, ListItem, Button, Menu, MenuItem } from \"@material-ui/core\";\nimport { Refresh, Equalizer } from \"@material-ui/icons\";\nimport Dialog from \"components/UI/Dialog\";\nimport { Status } from \"components/UI/Status\";\nimport { EditDialogForm } from \"./EditDialogForm\";\n\nimport { getPrice } from \"utils/getPrice\";\n\nimport { RootState } from \"store/rootReducer\";\nimport { refreshKey } from \"store/ducks/manage/actionCreators\";\nimport { selectShop } from \"store/ducks/manage/selectors\";\n\ninterface Props {\n  id: number | null;\n  handleClose: () => void;\n}\n\nexport const EditDialog: FC<Props> = ({ id, handleClose }) => {\n  const dispatch = useDispatch();\n  const shop = useSelector((state: RootState) => id && (selectShop(state, id) as any));\n\n  const [stats, setStats] = useState<null | HTMLElement>(null);\n  const [period, setPeriod] = useState(\"за день\");\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => setStats(event.currentTarget);\n  const handlePickStats = (e: any) => {\n    e.currentTarget.innerText && setPeriod(e.currentTarget.innerText);\n    setStats(null);\n  };\n\n  const refreshPublicKey = () => id && dispatch(refreshKey({ id, value: \"publicKey\" }));\n  const refreshSecretKey = () => id && dispatch(refreshKey({ id, value: \"webhookSecretKey\" }));\n\n  return (\n    <Dialog\n      open={Boolean(id)}\n      handleClose={handleClose}\n      title={\n        <>\n          Редактирование сайта (id: {id})\n          <Status data={shop?.verifyStatus} />\n        </>\n      }\n      form=\"editSite\">\n      <List dense>\n        <Button startIcon={<Refresh />} title=\"Обновить\" onClick={refreshPublicKey}>\n          Публичный ключ\n        </Button>\n        {shop?.publicKey}\n        <Button startIcon={<Refresh />} title=\"Обновить\" onClick={refreshSecretKey}>\n          Секретный ключ\n        </Button>\n        {shop?.webhookSecretKey}\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} startIcon={<Equalizer />}>\n          Статистика {period}\n        </Button>\n        <Menu anchorEl={stats} keepMounted open={Boolean(stats)} onClose={handlePickStats}>\n          <MenuItem onClick={handlePickStats}>день</MenuItem>\n          <MenuItem onClick={handlePickStats}>неделю</MenuItem>\n          <MenuItem onClick={handlePickStats}>месяц</MenuItem>\n        </Menu>\n        <ListItem>Всего выставлено счетов: 3000</ListItem>\n        <ListItem>Из них оплачено всего: 1000</ListItem>\n        <ListItem>Входящий оборот: {getPrice(29400)}</ListItem>\n      </List>\n\n      <EditDialogForm id={id} shop={shop} form=\"editSite\" handleClose={handleClose} />\n    </Dialog>\n  );\n};\n","export const getDate = (value: number) => new Date(value * 1000).toLocaleDateString();\n","import { FC, ReactElement, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Paper, Button } from \"@material-ui/core\";\nimport { Add as AddIcon } from \"@material-ui/icons\";\nimport Table from \"components/UI/TableWrapper\";\nimport { NewDialog } from \"./NewDialog\";\nimport { EditDialog } from \"./EditDialog\";\n\nimport { getHeaders, getRows } from \"./utilsTable\";\n\nimport { fetchShops } from \"store/ducks/manage/actionCreators\";\nimport { selectShops, selectUser } from \"store/ducks/manage/selectors\";\nimport { IPartner } from \"store/ducks/owner/state\";\n\ninterface Props {\n  partnerId?: IPartner[\"id\"];\n}\n\nexport const SitesTable: FC<Props> = ({ partnerId }): ReactElement => {\n  const dispatch = useDispatch();\n  const shops = useSelector(selectShops);\n  const user = useSelector(selectUser);\n\n  const headers = getHeaders();\n  const rows = getRows(shops || []);\n\n  const [page, setPage] = useState(0);\n  const [openNew, setOpenNew] = useState<boolean>(false);\n  const [editID, setEditID] = useState<number | null>(null);\n\n  const handleNewOpen = () => setOpenNew(true);\n  const handleNewClose = () => setOpenNew(false);\n\n  const onRowClick = (e: any, id: number) => setEditID(id);\n  const handleEditClose = () => setEditID(null);\n\n  useEffect(() => {\n    if (partnerId) {\n      dispatch(fetchShops({ partnerId, page }));\n    } else {\n      if (shops && !shops.length) {\n        dispatch(fetchShops({ page }));\n      }\n    }\n  }, [dispatch, partnerId, page, shops]);\n\n  return (\n    <Paper>\n      <Table\n        headers={headers}\n        rows={rows}\n        title=\"Список сайтов\"\n        button={\n          user.type === 1 ? (\n            <Button variant=\"outlined\" color=\"primary\" startIcon={<AddIcon />} onClick={handleNewOpen}>\n              Добавить\n            </Button>\n          ) : undefined\n        }\n        onRowClick={onRowClick}\n        currentPage={page}\n        setCurrentPage={setPage}\n      />\n\n      {user.type === 1 && <NewDialog open={openNew} handleClose={handleNewClose} />}\n      <EditDialog id={editID} handleClose={handleEditClose} />\n    </Paper>\n  );\n};\n","import { getDate } from \"utils/getDate\";\nimport { ITableHeader, ITableRow } from \"components/UI/TableWrapper/types\";\nimport { IShop } from \"store/ducks/manage/state\";\n\nexport const getHeaders = (): ITableHeader[] => [\n  { name: \"\" },\n  { name: \"id\" },\n  { name: \"Имя\" },\n  { name: \"Ссылка\" },\n  { name: \"Cоздан\" },\n];\n\nexport const getRows = (items: IShop[]): ITableRow[] => {\n  return items.map(({ id, name, siteURL, createDate, verifyStatus }: IShop) => ({\n    columns: [\n      {\n        status: verifyStatus,\n      },\n      {\n        content: id,\n      },\n      {\n        content: name,\n      },\n      {\n        content: siteURL,\n      },\n      {\n        content: getDate(createDate),\n      },\n    ],\n  }));\n};\n","import { FC, ChangeEvent, useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n// @ts-ignore\nimport { validate } from \"wallet-address-validator\";\n\nimport { Grid, TextField, MenuItem } from \"@material-ui/core\";\n\nimport Dialog from \"components/UI/Dialog\";\nimport Input from \"components/UI/Fields/Input\";\n\n// import { addPartner } from \"store/ducks/owner/actionCreators\";\n\ninterface Props {\n  open: boolean;\n  handleClose: () => void;\n  balance: number;\n}\n\ninterface IDefaultValues {\n  amount: string;\n  wallet: string;\n  coin: string;\n}\n\nconst currencies = [\n  {\n    value: \"BTC\",\n    label: \"฿\",\n  },\n  {\n    value: \"USDT\",\n    label: \"₮\",\n  },\n  {\n    value: \"ETH\",\n    label: \"⧫\",\n  },\n];\n\nexport const PayoutDialog: FC<Props> = ({ open, handleClose, balance }) => {\n  // const dispatch = useDispatch();\n  const [currency, setCurrency] = useState(\"BTC\");\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => setCurrency(e.target.value);\n\n  const defaultValues: IDefaultValues = {\n    amount: \"\",\n    wallet: \"\",\n    coin: \"\",\n  };\n  const { control, handleSubmit, watch } = useForm<IDefaultValues>({\n    defaultValues,\n  });\n\n  const [errors, setErrors] = useState<any>({});\n  const wallet = watch(\"wallet\");\n  const amount = watch(\"amount\");\n\n  const onSubmit = () => {\n    setErrors({});\n\n    if (currency === \"USDT\") {\n      if (!wallet.length) {\n        setErrors((prev: any) => ({\n          ...prev,\n          wallet: \"Неверный формат кошелька\",\n        }));\n        return;\n      }\n    } else {\n      if (!validate(wallet, currency)) {\n        setErrors((prev: any) => ({\n          ...prev,\n          wallet: \"Неверный формат кошелька\",\n        }));\n        return;\n      }\n    }\n\n    if (Number(amount) < 0.001) {\n      setErrors((prev: any) => ({\n        ...prev,\n        amount: `Минимальный вывод от 0.001 ${currency}`,\n      }));\n      return;\n    }\n\n    if (Number(amount) > balance) {\n      setErrors((prev: any) => ({\n        ...prev,\n        amount: \"Сумма не может превышать баланс\",\n      }));\n      return;\n    }\n\n    if (window.confirm(`Вы действительно хотите создать заявку?`)) {\n      // dispatch(addPartner({ email, name, password }));\n      setErrors({});\n      handleClose();\n    }\n  };\n\n  return (\n    <Dialog open={open} handleClose={handleClose} title=\"Заявка на вывод средств\" form=\"payout\">\n      <form id=\"payout\" onSubmit={handleSubmit(onSubmit)}>\n        {/* TODO: выпадающий список прикрепленных кошельков/карт */}\n        <Input\n          control={control}\n          name=\"wallet\"\n          label=\"Кошелек\"\n          type=\"number\"\n          maxLength={16}\n          defaultValue={defaultValues.wallet}\n          error={!!errors.wallet}\n          helperText={errors?.wallet}\n          required\n        />\n        <Grid container spacing={1}>\n          <Grid item xs={12} md={6}>\n            <Input\n              control={control}\n              name=\"amount\"\n              label=\"Сумма\"\n              type=\"number\"\n              defaultValue={defaultValues.amount}\n              error={!!errors.amount}\n              helperText={errors?.amount}\n              required\n              autoFocus\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              label=\"Монета\"\n              value={currency}\n              onChange={handleChange}\n              variant=\"outlined\"\n              style={{ marginTop: 16 }}\n              select\n              required\n              fullWidth>\n              {currencies.map(option => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label} ({option.value})\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n        </Grid>\n      </form>\n    </Dialog>\n  );\n};\n","import { FC, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Grid, Link } from \"@material-ui/core\";\nimport Card from \"components/UI/Card\";\nimport { SitesTable } from \"../SitesTable\";\nimport { PayoutDialog } from \"components/Pages/Payments/PayoutDialog\";\n\nimport { getPrice } from \"utils/getPrice\";\nimport { selectUser } from \"store/ducks/manage/selectors\";\n\nexport const PartnerHome: FC = () => {\n  const user = useSelector(selectUser);\n\n  const [payoutOpen, setPayoutOpen] = useState(false);\n  const handlePayoutClose = () => setPayoutOpen(false);\n  const handlePayoutOpen = () => setPayoutOpen(true);\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6} lg={3}>\n        <Card\n          title=\"Баланс\"\n          text={getPrice(user.balance)}\n          action={\n            <Link href=\"#\" onClick={handlePayoutOpen}>\n              Вывести\n            </Link>\n          }\n        />\n      </Grid>\n      <Grid item xs={12} md={6} lg={3}>\n        <Card title=\"Количество транзакций\" text=\"46\" />\n      </Grid>\n      <Grid item xs={12} md={6} lg={3}>\n        <Card title=\"Дневной оборот\" text={getPrice(10000)} />\n      </Grid>\n      <Grid item xs={12} md={6} lg={3}>\n        <Card title=\"Годовой оборот\" text={getPrice(200000)} />\n      </Grid>\n\n      <Grid item xs={12}>\n        <SitesTable />\n      </Grid>\n\n      <PayoutDialog open={payoutOpen} handleClose={handlePayoutClose} balance={user.balance} />\n    </Grid>\n  );\n};\n","import { FC } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { Loading } from \"components/UI/Loading\";\nimport { AdminHome } from \"./AdminHome\";\nimport { PartnerHome } from \"./PartnerHome\";\n\nimport { selectUser } from \"store/ducks/manage/selectors\";\n\nconst Home: FC = () => {\n  const user = useSelector(selectUser);\n\n  return (\n    <Grid container spacing={3}>\n      {user.type ? (\n        user.type === 3 ? (\n          <AdminHome />\n        ) : user.type === 2 ? (\n          <div>Moderator home page</div>\n        ) : (\n          <PartnerHome />\n        )\n      ) : (\n        <Loading />\n      )}\n    </Grid>\n  );\n};\n\nexport default Home;\n","import { FC, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n\nimport Dialog from \"components/UI/Dialog\";\nimport Input from \"components/UI/Fields/Input\";\n\nimport { addPartner } from \"store/ducks/owner/actionCreators\";\n\ninterface Props {\n  open: boolean;\n  handleClose: () => void;\n}\n\ninterface IDefaultValues {\n  email: string;\n  name: string;\n  password: string;\n}\n\nexport const NewDialog: FC<Props> = ({ open, handleClose }) => {\n  const dispatch = useDispatch();\n\n  const defaultValues: IDefaultValues = {\n    email: \"\",\n    name: \"\",\n    password: \"\",\n  };\n  const { control, handleSubmit, watch } = useForm<IDefaultValues>({\n    defaultValues,\n  });\n\n  const [errors, setErrors] = useState<any>({});\n\n  const email = watch(\"email\");\n  const name = watch(\"name\");\n  const password = watch(\"password\");\n\n  const onSubmit = () => {\n    setErrors({});\n\n    // если поле пустое или не соответствует паттерну email@example.com\n    if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) {\n      setErrors((prev: any) => ({\n        ...prev,\n        email: \"Неверный формат почты\",\n      }));\n      return;\n    }\n\n    if (name.length < 3) {\n      setErrors((prev: any) => ({\n        ...prev,\n        name: \"Имя должно содержать не менее 3 буквенных символов\",\n      }));\n    }\n\n    if (!password) {\n      setErrors((prev: any) => ({\n        ...prev,\n        password: \"Необходимо ввести пароль\",\n      }));\n      return;\n    }\n\n    if (password.length < 8 || password.length > 50) {\n      setErrors((prev: any) => ({\n        ...prev,\n        password: \"Минимальная длина пароля 8 символов, максимальная 50\",\n      }));\n      return;\n    }\n\n    dispatch(addPartner({ email, name, password }));\n    setErrors({});\n    handleClose();\n  };\n\n  return (\n    <Dialog open={open} handleClose={handleClose} title=\"Регистрация партнера\" form=\"addPartner\">\n      <form id=\"addPartner\" onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          control={control}\n          name=\"email\"\n          label=\"Email\"\n          type=\"text\"\n          defaultValue={defaultValues.email}\n          error={!!errors.email}\n          helperText={errors?.email}\n          required\n          autoFocus\n        />\n        <Input\n          control={control}\n          name=\"name\"\n          label=\"Имя\"\n          type=\"text\"\n          defaultValue={defaultValues.name}\n          error={!!errors.name}\n          helperText={errors?.name}\n          required\n        />\n        <Input\n          control={control}\n          name=\"password\"\n          label=\"Пароль\"\n          type=\"password\"\n          defaultValue={defaultValues.password}\n          error={!!errors.password}\n          helperText={errors?.password}\n          required\n        />\n      </form>\n    </Dialog>\n  );\n};\n","import { RootState } from \"store/rootReducer\";\nimport { ICard, IOrder, IPartner } from \"./state\";\n\nexport const selectPartners = (state: RootState): IPartner[] => state.owner.partners;\nexport const selectPartner = (state: RootState, id: number): IPartner | undefined =>\n  state.owner.partners.find(partner => partner.id === id);\n\nexport const selectCards = (state: RootState): ICard[] => state.owner.cards;\nexport const selectCard = (state: RootState, id: number): ICard | undefined =>\n  state.owner.cards.find(card => card.id === id);\n\nexport const selectOrders = (state: RootState): IOrder[] => state.owner.orders;\n","import { FC, ReactElement, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Button, Paper } from \"@material-ui/core\";\nimport { Add as AddIcon } from \"@material-ui/icons\";\nimport Table from \"components/UI/TableWrapper\";\nimport { NewDialog } from \"./NewDialog\";\n\nimport { getHeaders, getRows } from \"./utilsTable\";\nimport { selectPartners } from \"store/ducks/owner/selectors\";\nimport { fetchPartners } from \"store/ducks/owner/actionCreators\";\n\nexport const PartnersTable: FC = (): ReactElement => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const partners = useSelector(selectPartners);\n\n  const headers = getHeaders();\n  const rows = getRows(partners);\n\n  const [openNew, setOpenNew] = useState<boolean>(false);\n\n  const handleNewOpen = () => setOpenNew(true);\n  const handleNewClose = () => setOpenNew(false);\n\n  const onRowClick = (e: any, id: number) => history.push(`/partners/${id}`);\n\n  useEffect(() => {\n    dispatch(fetchPartners());\n  }, [dispatch]);\n\n  return (\n    <Paper>\n      <Table\n        headers={headers}\n        rows={rows}\n        title=\"Список партнеров\"\n        button={\n          <Button variant=\"outlined\" color=\"primary\" startIcon={<AddIcon />} onClick={handleNewOpen}>\n            Добавить\n          </Button>\n        }\n        onRowClick={onRowClick}\n        searchBy=\"name\"\n      />\n\n      <NewDialog open={openNew} handleClose={handleNewClose} />\n    </Paper>\n  );\n};\n","import { getDate } from \"utils/getDate\";\nimport { ITableHeader, ITableRow } from \"components/UI/TableWrapper/types\";\nimport { IPartner } from \"store/ducks/owner/state\";\n\nexport const getHeaders = (): ITableHeader[] => [\n  { name: \"id\" },\n  { name: \"Имя\" },\n  { name: \"Email\" },\n  { name: \"Комиссия\" },\n  { name: \"Баланс\" },\n  { name: \"Дата создания\" },\n  { name: \"Комментарий\" },\n];\n\nexport const getRows = (items: IPartner[]): ITableRow[] => {\n  return items.map(({ id, name, email, commission, balance, createDate }: IPartner | any) => ({\n    columns: [\n      {\n        content: id,\n      },\n      {\n        searchBy: name,\n        content: name,\n      },\n      {\n        content: email,\n      },\n      {\n        content: commission || \"2%\",\n      },\n      {\n        content: balance,\n      },\n      {\n        content: getDate(createDate),\n      },\n      {\n        content: \"Это комментарий к партнеру\",\n      },\n    ],\n  }));\n};\n","import { FC } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { PartnersTable } from \"./PartnersTable\";\n\nconst Partners: FC = () => {\n  return (\n    <Grid item xs={12}>\n      <PartnersTable />\n    </Grid>\n  );\n};\n\nexport default Partners;\n","import { FC, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Location, History } from \"history\";\nimport { useForm } from \"react-hook-form\";\n\nimport { Button, Grid, Menu, MenuItem, List, ListItem, Typography } from \"@material-ui/core\";\nimport { Delete, Equalizer, PowerSettingsNew } from \"@material-ui/icons\";\nimport Input from \"components/UI/Fields/Input\";\nimport { SitesTable } from \"components/Pages/Home/SitesTable\";\n\nimport { getPrice } from \"utils/getPrice\";\n\nimport { RootState } from \"store/rootReducer\";\nimport { IPartner } from \"store/ducks/owner/state\";\nimport { deletePartner, editPartner } from \"store/ducks/owner/actionCreators\";\nimport { selectPartner } from \"store/ducks/owner/selectors\";\n\ninterface RouteProps<P> {\n  match: { params: P };\n  location: Location;\n  history: History;\n}\n\ninterface Props {\n  id: IPartner[\"id\"];\n}\n\ninterface IDefaultValues {\n  email: string;\n  password: string;\n  description: string;\n  commission: number;\n}\n\nconst PartnerPage: FC<RouteProps<Props>> = ({ match }) => {\n  const { id } = match.params;\n  const dispatch = useDispatch();\n  const partner = useSelector((state: RootState) => selectPartner(state, Number(id)) as any);\n\n  const defaultValues: IDefaultValues = {\n    email: partner?.email,\n    password: \"\",\n    description: partner?.description,\n    commission: partner?.commission,\n  };\n  const { control, watch, reset } = useForm<IDefaultValues>({\n    defaultValues,\n  });\n\n  const [errors, setErrors] = useState<any>({});\n  const email = watch(\"email\");\n  const password = watch(\"password\");\n  const description = watch(\"description\");\n  const commission = watch(\"commission\");\n\n  const handleSubmit = () => {\n    setErrors({});\n    if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) {\n      setErrors((prev: any) => ({\n        ...prev,\n        email: \"Неверный формат почты\",\n      }));\n      return;\n    }\n\n    if (description.length > 128) {\n      setErrors((prev: any) => ({\n        ...prev,\n        description: \"Описание не может превышать 128 символов\",\n      }));\n      return;\n    }\n\n    if (Number(commission) > 100) {\n      setErrors((prev: any) => ({\n        ...prev,\n        commission: \"Минимум 5%, максимум 100%\",\n      }));\n      return;\n    }\n\n    const action = dispatch(editPartner({ id, email, password, description, commission }));\n\n    reset({\n      email: action.payload.email,\n      password: \"\",\n      description: action.payload.description,\n      commission: action.payload.commission,\n    });\n  };\n\n  const [stats, setStats] = useState<null | HTMLElement>(null);\n  const [period, setPeriod] = useState(\"день\");\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => setStats(event.currentTarget);\n  const handlePickStats = (e: any) => {\n    e.currentTarget.innerText && setPeriod(e.currentTarget.innerText);\n    setStats(null);\n  };\n\n  const handleDelete = () => {\n    if (window.confirm(`Вы действительно хотите удалить аккаунт \"${partner?.name}\"?`)) {\n      dispatch(deletePartner(id));\n    }\n  };\n\n  return (\n    <Grid>\n      <Typography variant=\"h4\" gutterBottom>\n        {partner?.name} (id: {partner?.id})\n      </Typography>\n\n      <Grid container>\n        <Grid item xs={12} md={6} lg={8}>\n          <Button onClick={handleClick} startIcon={<Equalizer />}>\n            Статистика за {period}\n          </Button>\n          <List dense>\n            <ListItem>Всего терминалов: 3</ListItem>\n            <ListItem>Новых терминалов: 1</ListItem>\n            <ListItem>Всего выплат: {getPrice(100)}</ListItem>\n          </List>\n          <Menu anchorEl={stats} keepMounted open={Boolean(stats)} onClose={handlePickStats}>\n            <MenuItem onClick={handlePickStats}>день</MenuItem>\n            <MenuItem onClick={handlePickStats}>неделю</MenuItem>\n            <MenuItem onClick={handlePickStats}>месяц</MenuItem>\n          </Menu>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <form id=\"editPartner\" style={{ marginBottom: 28 }}>\n            <Grid container>\n              <Grid item>\n                <Input\n                  control={control}\n                  name=\"email\"\n                  label=\"Email\"\n                  type=\"email\"\n                  defaultValue={defaultValues.email}\n                  error={!!errors.email}\n                  helperText={errors?.email}\n                  required\n                  autoFocus\n                />\n                <Input\n                  control={control}\n                  name=\"webhookURL\"\n                  label=\"Новый пароль\"\n                  type=\"password\"\n                  defaultValue={defaultValues.password}\n                  error={!!errors.password}\n                  helperText={errors?.password}\n                />\n              </Grid>\n              <Grid container spacing={1}>\n                <Grid item xs={12} sm={8}>\n                  <Input\n                    control={control}\n                    name=\"description\"\n                    label=\"Комментарий\"\n                    type=\"text\"\n                    defaultValue={defaultValues.description}\n                    error={!!errors.description}\n                    helperText={errors?.description}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                  <Input\n                    control={control}\n                    name=\"commission\"\n                    label=\"Комиссия, %\"\n                    type=\"number\"\n                    min={5}\n                    max={100}\n                    defaultValue={defaultValues.commission}\n                    error={!!errors.commission}\n                    helperText={errors?.commission}\n                    required\n                  />\n                </Grid>\n              </Grid>\n\n              <Button color=\"primary\" onClick={handleSubmit} fullWidth>\n                Сохранить\n              </Button>\n            </Grid>\n\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  startIcon={<Delete />}\n                  onClick={handleDelete}\n                  fullWidth\n                  style={{ marginTop: \"1rem\" }}>\n                  Удалить аккаунт\n                </Button>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  startIcon={<PowerSettingsNew />}\n                  // onClick={handleClose}\n                  fullWidth\n                  style={{ marginTop: \"1rem\" }}>\n                  Выключить\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n      </Grid>\n\n      <SitesTable partnerId={partner?.id} />\n    </Grid>\n  );\n};\n\nexport default PartnerPage;\n","import { FC } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n\nimport { Button, ButtonGroup } from \"@material-ui/core\";\nimport { Clear, Check } from \"@material-ui/icons\";\nimport Dialog from \"components/UI/Dialog\";\n\n// import { RootState } from \"store/rootReducer\";\n// import { deletePartner } from \"store/ducks/owner/actionCreators\";\n// import { selectPartner } from \"store/ducks/owner/selectors\";\n\ninterface Props {\n  id: number | null;\n  handleClose: () => void;\n}\n\nexport const EditDialog: FC<Props> = ({ id, handleClose }) => {\n  // const dispatch = useDispatch();\n  // const payment = useSelector((state: RootState) => id && selectPartner(state, id) as any);\n\n  const handleDelete = () => {\n    if (id && window.confirm(`Вы действительно хотите отклонить выплату?`)) {\n      handleClose();\n      // dispatch(deletePartner(id));\n    }\n  };\n\n  return (\n    <Dialog open={Boolean(id)} handleClose={handleClose} title={`Выплата для \"test\" (id: 1)`}>\n      <ButtonGroup fullWidth>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          startIcon={<Clear />}\n          onClick={handleDelete}\n          style={{ marginTop: \"1rem\" }}>\n          Отклонить\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          startIcon={<Check />}\n          onClick={handleClose}\n          style={{ marginTop: \"1rem\" }}>\n          Подтвердить\n        </Button>\n      </ButtonGroup>\n    </Dialog>\n  );\n};\n","import { getDate } from \"utils/getDate\";\nimport { ITableHeader, ITableRow } from \"components/UI/TableWrapper/types\";\n// import { IPartner } from \"store/ducks/owner/state\";\n\nexport const getHeadersAndRows = (type?: string) => {\n  const items =\n    type === \"requests\"\n      ? [\n          {\n            id: 1,\n            amount: 1000,\n            createDate: Date.now() / 1000,\n            ip: \"Ожидает подтверждения\",\n          },\n        ]\n      : [\n          {\n            id: 1,\n            name: \"test\",\n            amount: 1000,\n            createDate: Date.now() / 1000,\n            ip: \"Ожидает подтверждения\",\n          },\n        ];\n\n  const headers: ITableHeader[] =\n    type === \"requests\"\n      ? [{ name: \"id\" }, { name: \"Сумма (₽)\" }, { name: \"Дата создания\" }, { name: \"Статус\" }]\n      : [\n          { name: \"id\" },\n          { name: \"Пользователь\" },\n          { name: \"Сумма (₽)\" },\n          { name: \"Дата создания\" },\n          { name: \"Статус\" },\n        ];\n\n  const rows: ITableRow[] = items.map(({ id, name, amount, createDate, ip }: any) =>\n    type === \"requests\"\n      ? {\n          columns: [\n            {\n              content: id,\n            },\n            {\n              content: amount,\n            },\n            {\n              content: getDate(createDate),\n            },\n            {\n              content: ip,\n            },\n          ],\n        }\n      : {\n          columns: [\n            {\n              content: id,\n            },\n            {\n              content: name,\n            },\n            {\n              content: amount,\n            },\n            {\n              content: getDate(createDate),\n            },\n            {\n              content: ip,\n            },\n          ],\n        },\n  );\n\n  return { headers, rows };\n};\n","import { FC, ReactElement, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n\nimport { Paper } from \"@material-ui/core\";\nimport Table from \"components/UI/TableWrapper\";\nimport { EditDialog } from \"./EditDialog\";\n\nimport { getHeadersAndRows } from \"./utilsTable\";\n// import { selectPartners } from \"store/ducks/owner/selectors\";\n// import { fetchPartners } from \"store/ducks/owner/actionCreators\";\n\ninterface Props {\n  type: string;\n}\n\nexport const PaymentsTable: FC<Props> = ({ type }): ReactElement => {\n  // const dispatch = useDispatch();\n  // const payments = useSelector();\n\n  let pagesAndRows;\n\n  if (type === \"regular\") {\n    pagesAndRows = getHeadersAndRows();\n  } else if (type === \"current\") {\n    pagesAndRows = getHeadersAndRows();\n  } else {\n    pagesAndRows = getHeadersAndRows(\"requests\");\n  }\n\n  const { headers, rows } = pagesAndRows;\n  const [editID, setEditID] = useState<number | null>(null);\n\n  const onRowClick = (e: any, id: number) => setEditID(id);\n  const handleEditClose = () => setEditID(null);\n\n  // useEffect(() => {\n  //   dispatch(fetchPartners());\n  // }, [dispatch]);\n\n  return (\n    <Paper>\n      <Table\n        headers={headers}\n        rows={rows}\n        title={\n          type === \"regular\" ? \"Плановые выплаты\" : type === \"current\" ? \"Текущие выплаты\" : \"Заявки на вывод средств\"\n        }\n        onRowClick={onRowClick}\n      />\n\n      <EditDialog id={editID} handleClose={handleEditClose} />\n    </Paper>\n  );\n};\n","import { FC, ChangeEvent, useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n// @ts-ignore\nimport { validate } from \"wallet-address-validator\";\n\nimport { TextField, MenuItem } from \"@material-ui/core\";\n\nimport Dialog from \"components/UI/Dialog\";\nimport Input from \"components/UI/Fields/Input\";\n\n// import { addPartner } from \"store/ducks/owner/actionCreators\";\n\ninterface Props {\n  open: boolean;\n  handleClose: () => void;\n  balance: number;\n}\n\ninterface IDefaultValues {\n  wallet: string;\n  coin: string;\n}\n\nconst currencies = [\n  {\n    value: \"BTC\",\n    label: \"฿\",\n  },\n  {\n    value: \"USDT\",\n    label: \"₮\",\n  },\n  {\n    value: \"ETH\",\n    label: \"⧫\",\n  },\n];\n\nexport const NewDialog: FC<Props> = ({ open, handleClose, balance }) => {\n  // const dispatch = useDispatch();\n  const [currency, setCurrency] = useState(\"BTC\");\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => setCurrency(e.target.value);\n\n  const defaultValues: IDefaultValues = {\n    wallet: \"\",\n    coin: \"\",\n  };\n  const { control, handleSubmit, watch } = useForm<IDefaultValues>({\n    defaultValues,\n  });\n\n  const [errors, setErrors] = useState<any>({});\n  const wallet = watch(\"wallet\");\n\n  const onSubmit = () => {\n    setErrors({});\n\n    if (currency === \"USDT\") {\n      if (!wallet.length) {\n        setErrors((prev: any) => ({\n          ...prev,\n          wallet: \"Неверный формат кошелька\",\n        }));\n        return;\n      }\n    } else {\n      if (!validate(wallet, currency)) {\n        setErrors((prev: any) => ({\n          ...prev,\n          wallet: \"Неверный формат кошелька\",\n        }));\n        return;\n      }\n    }\n\n    // dispatch(addPartner({ email, name, password }));\n    setErrors({});\n    handleClose();\n  };\n\n  return (\n    <Dialog open={open} handleClose={handleClose} title=\"Добавить кошелек\" form=\"newWallet\">\n      <form id=\"newWallet\" onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          control={control}\n          name=\"wallet\"\n          label=\"Кошелек\"\n          type=\"number\"\n          maxLength={16}\n          defaultValue={defaultValues.wallet}\n          error={!!errors.wallet}\n          helperText={errors?.wallet}\n          required\n        />\n        <TextField\n          label=\"Монета\"\n          value={currency}\n          onChange={handleChange}\n          variant=\"outlined\"\n          style={{ marginTop: 16 }}\n          select\n          required\n          fullWidth>\n          {currencies.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label} ({option.value})\n            </MenuItem>\n          ))}\n        </TextField>\n      </form>\n    </Dialog>\n  );\n};\n","import { FC, ChangeEvent, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n\nimport { Button, TextField, MenuItem } from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport Dialog from \"components/UI/Dialog\";\nimport Input from \"components/UI/Fields/Input\";\n\n// import { getPrice } from \"utils/getPrice\";\n\n// import { RootState } from \"store/rootReducer\";\n// import { deletePartner } from \"store/ducks/owner/actionCreators\";\n// import { selectPartner } from \"store/ducks/owner/selectors\";\n\ninterface Props {\n  id: number | null;\n  handleClose: () => void;\n}\n\ninterface IDefaultValues {\n  name: string;\n  address: string;\n}\n\nconst currencies = [\n  {\n    value: \"BTC\",\n    label: \"฿\",\n  },\n  {\n    value: \"USDT\",\n    label: \"₮\",\n  },\n  {\n    value: \"ETH\",\n    label: \"⧫\",\n  },\n];\n\nexport const EditDialog: FC<Props> = ({ id, handleClose }) => {\n  // const dispatch = useDispatch();\n  // const wallet = useSelector((state: RootState) => id && (selectPartner(state, id) as any));\n  const wallet = {\n    id: 1,\n    name: \"Основной\",\n    address: \"3FZbgi29cpjq2GjdwV8eyHuJJnkLtktZc5\",\n    coin: \"/img/coins/btn.svg\",\n  };\n\n  const [currency, setCurrency] = useState(\"BTC\");\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => setCurrency(e.target.value);\n\n  const defaultValues: IDefaultValues = {\n    name: wallet.name,\n    address: wallet.address,\n  };\n  const { control, handleSubmit, watch } = useForm<IDefaultValues>({\n    defaultValues,\n  });\n\n  const [errors, setErrors] = useState<any>({});\n\n  const name = watch(\"name\");\n  // const address = watch(\"address\");\n\n  const onSubmit = () => {\n    setErrors({});\n\n    if (name.length < 3) {\n      setErrors((prev: any) => ({\n        ...prev,\n        name: \"Имя должно содержать не менее 3 буквенных символов\",\n      }));\n    }\n\n    setErrors({});\n    handleClose();\n  };\n\n  const handleDelete = () => {\n    if (id && window.confirm(`Вы действительно хотите открепить кошелек \"${wallet.name}\"?`)) {\n      handleClose();\n      // dispatch(deletePartner(id));\n    }\n  };\n\n  return (\n    <Dialog open={Boolean(id)} handleClose={handleClose} title={`${wallet.name} (id: ${wallet.id})`} form=\"editWallet\">\n      <form id=\"editWallet\" onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          control={control}\n          name=\"name\"\n          label=\"Имя\"\n          type=\"text\"\n          defaultValue={defaultValues.name}\n          error={!!errors.name}\n          helperText={errors?.name}\n        />\n        <Input\n          control={control}\n          name=\"address\"\n          label=\"Кошелек\"\n          type=\"number\"\n          defaultValue={defaultValues.address}\n          error={!!errors.address}\n          helperText={errors?.address}\n        />\n        <TextField\n          label=\"Монета\"\n          value={currency}\n          onChange={handleChange}\n          variant=\"outlined\"\n          style={{ marginTop: 16 }}\n          select\n          required\n          fullWidth>\n          {currencies.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label} ({option.value})\n            </MenuItem>\n          ))}\n        </TextField>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          startIcon={<Delete />}\n          onClick={handleDelete}\n          style={{ marginTop: \"1rem\" }}\n          fullWidth>\n          Открепить кошелек\n        </Button>\n      </form>\n    </Dialog>\n  );\n};\n","import { FC, ReactElement, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n\nimport { Paper, Button } from \"@material-ui/core\";\nimport { Add as AddIcon } from \"@material-ui/icons\";\nimport Table from \"components/UI/TableWrapper\";\nimport { NewDialog } from \"./NewDialog\";\nimport { EditDialog } from \"./EditDialog\";\n\nimport { getHeaders, getRows } from \"./utilsTable\";\n// import { selectOrders } from \"store/ducks/owner/selectors\";\n// import { fetchOrders } from \"store/ducks/owner/actionCreators\";\n\nexport const WalletsTable: FC = (): ReactElement => {\n  // const dispatch = useDispatch();\n  // const wallets = useSelector(selectOrders);\n  const wallets = [\n    {\n      id: 1,\n      name: \"Основной\",\n    },\n  ];\n\n  const headers = getHeaders();\n  const rows = getRows(wallets);\n\n  const [page, setPage] = useState(0);\n  const [openNew, setOpenNew] = useState<boolean>(false);\n  const [editID, setEditID] = useState<number | null>(null);\n\n  const handleNewOpen = () => setOpenNew(true);\n  const handleNewClose = () => setOpenNew(false);\n\n  const onRowClick = (e: any, id: number) => setEditID(id);\n  const handleEditClose = () => setEditID(null);\n\n  // useEffect(() => {\n  //   dispatch(fetchOrders({ page }));\n  // }, [dispatch, page]);\n\n  return (\n    <Paper>\n      <Table\n        headers={headers}\n        rows={rows}\n        title=\"Список кошельков\"\n        currentPage={page}\n        setCurrentPage={setPage}\n        button={\n          <Button variant=\"outlined\" color=\"primary\" startIcon={<AddIcon />} onClick={handleNewOpen}>\n            Добавить\n          </Button>\n        }\n        onRowClick={onRowClick}\n      />\n\n      <NewDialog balance={700} open={openNew} handleClose={handleNewClose} />\n      <EditDialog id={editID} handleClose={handleEditClose} />\n    </Paper>\n  );\n};\n","import { ITableHeader, ITableRow } from \"components/UI/TableWrapper/types\";\n\nexport const getHeaders = (): ITableHeader[] => [\n  { name: \"id\" },\n  { name: \"Имя\" },\n  { name: \"Адрес\" },\n  { name: \"Монета\" },\n];\n\nexport const getRows = (items: any[]): ITableRow[] => {\n  return items.map(({ id, name, address, coin }: any) => ({\n    columns: [\n      {\n        content: id,\n      },\n      {\n        content: name,\n      },\n      {\n        content: address || \"3FZbgi29cpjq2GjdwV8eyHuJJnkLtktZc5\",\n      },\n      {\n        coin: coin || \"BTC\",\n      },\n    ],\n  }));\n};\n","import { FC, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Grid, Link } from \"@material-ui/core\";\nimport Card from \"components/UI/Card\";\nimport { PayoutDialog } from \"./PayoutDialog\";\nimport { PaymentsTable } from \"./PaymentsTable\";\nimport { WalletsTable } from \"./WalletsTable\";\n\nimport { getPrice } from \"utils/getPrice\";\nimport { selectUser } from \"store/ducks/manage/selectors\";\n\nconst Payments: FC = () => {\n  const user = useSelector(selectUser);\n\n  const [payoutOpen, setPayoutOpen] = useState(false);\n  const handlePayoutClose = () => setPayoutOpen(false);\n  const handlePayoutOpen = () => setPayoutOpen(true);\n\n  return (\n    <Grid container spacing={3}>\n      {user.type === 3 && (\n        <>\n          <Grid item xs={12} md={6} lg={4}>\n            <Card\n              title=\"Баланс\"\n              text={getPrice(user.balance)}\n              action={\n                <Link href=\"#\" onClick={handlePayoutOpen}>\n                  Вывести\n                </Link>\n              }\n            />\n          </Grid>\n          <Grid item xs={12} md={6} lg={4}>\n            <Card title=\"Платежи на карту\" text={getPrice(4300)} />\n          </Grid>\n          <Grid item xs={12} md={6} lg={4}>\n            <Card title=\"Платежи на баланс\" text={getPrice(1700)} />\n          </Grid>\n        </>\n      )}\n\n      {user.type === 2 || user.type === 3 ? (\n        <>\n          <Grid item xs={12}>\n            <PaymentsTable type=\"regular\" />\n          </Grid>\n          <Grid item xs={12}>\n            <PaymentsTable type=\"current\" />\n          </Grid>\n        </>\n      ) : (\n        <>\n          <Grid item xs={12}>\n            <WalletsTable />\n          </Grid>\n          <Grid item xs={12}>\n            <PaymentsTable type=\"requests\" />\n          </Grid>\n        </>\n      )}\n\n      <PayoutDialog open={payoutOpen} handleClose={handlePayoutClose} balance={user.balance} />\n    </Grid>\n  );\n};\n\nexport default Payments;\n","import { FC, ReactElement, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Paper } from \"@material-ui/core\";\nimport Table from \"components/UI/TableWrapper\";\n// import { EditDialog } from \"./EditDialog\";\n\nimport { getHeaders, getRows } from \"./utilsTable\";\nimport { selectOrders } from \"store/ducks/owner/selectors\";\nimport { fetchOrders } from \"store/ducks/owner/actionCreators\";\n\nexport const OrdersTable: FC = (): ReactElement => {\n  const dispatch = useDispatch();\n  const orders = useSelector(selectOrders);\n\n  const headers = getHeaders();\n  const rows = getRows(orders);\n\n  const [page, setPage] = useState(0);\n  // const [editID, setEditID] = useState<number | null>(null);\n\n  // const onRowClick = (e: any, id: number) => setEditID(id);\n  // const handleEditClose = () => setEditID(null);\n\n  useEffect(() => {\n    dispatch(fetchOrders({ page }));\n  }, [dispatch, page]);\n\n  return (\n    <Paper>\n      <Table\n        headers={headers}\n        rows={rows}\n        title=\"Список заказов\"\n        currentPage={page}\n        setCurrentPage={setPage} /* onRowClick={onRowClick} */\n      />\n\n      {/* <EditDialog id={editID} handleClose={handleEditClose} /> */}\n    </Paper>\n  );\n};\n","import { getDate } from \"utils/getDate\";\nimport { ITableHeader, ITableRow } from \"components/UI/TableWrapper/types\";\nimport { IOrder } from \"store/ducks/owner/state\";\n\nexport const getHeaders = (): ITableHeader[] => [\n  { name: \"\" },\n  { name: \"id\" },\n  { name: \"Пользователь\" },\n  { name: \"Дата\" },\n  { name: \"Сумма (₽)\" },\n  { name: \"Почта покупателя\" },\n  { name: \"Карта покупателя\" },\n];\n\nexport const getRows = (items: any[]): ITableRow[] => {\n  return items.map(({ id, status, shop, createDate, amount, payerEmail, payerCardNumber }: IOrder) => ({\n    columns: [\n      {\n        status,\n      },\n      {\n        content: id,\n      },\n      {\n        content: shop.user.name,\n      },\n      {\n        content: getDate(createDate),\n      },\n      {\n        content: amount,\n      },\n      {\n        content: payerEmail || \"Отсутствует\",\n      },\n      {\n        content: payerCardNumber || \"Отсутствует\",\n      },\n    ],\n  }));\n};\n","import { FC } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { OrdersTable } from \"./OrdersTable\";\n\nconst Orders: FC = () => {\n  return (\n    <Grid item xs={12}>\n      <OrdersTable />\n    </Grid>\n  );\n};\n\nexport default Orders;\n","import { FC } from \"react\";\n\nimport { Divider, List, ListItem, ListItemText } from \"@material-ui/core\";\n\nimport { getPrice } from \"utils/getPrice\";\n\nconst items = [\n  {\n    title: \"Количество выплат\",\n    text: 1000000,\n  },\n  {\n    title: \"Ежегодный оборот средств\",\n    text: 1000000,\n  },\n  {\n    title: \"Количество выплат\",\n    text: 1000000,\n  },\n  {\n    title: \"Ежегодный оборот средств\",\n    text: 1000000,\n  },\n  {\n    title: \"Количество выплат\",\n    text: 1000000,\n  },\n  {\n    title: \"Ежегодный оборот средств\",\n    text: 1000000,\n  },\n  {\n    title: \"Количество выплат\",\n    text: 1000000,\n  },\n  {\n    title: \"Ежегодный оборот средств\",\n    text: 1000000,\n  },\n  {\n    title: \"Количество выплат\",\n    text: 1000000,\n  },\n  {\n    title: \"Ежегодный оборот средств\",\n    text: 1000000,\n  },\n];\n\nconst Finances: FC = () => {\n  return (\n    <div>\n      <List>\n        {items.map(({ title, text }, i) => (\n          <>\n            <ListItem key={i}>\n              <ListItemText primary={title} />\n              <ListItemText primary={getPrice(text)} style={{ textAlign: \"right\" }} />\n            </ListItem>\n            <Divider light />\n          </>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Finances;\n","export const getCardNumber = (value: string = \"\") =>\n  value\n    .replace(/\\s/g, \"\")\n    .match(/.{1,4}/g)\n    ?.join(\" \")\n    .substr(0, 19) || \"\";\n","import { FC, useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport Dialog from \"components/UI/Dialog\";\nimport Input from \"components/UI/Fields/Input\";\n\nimport { getCardNumber } from \"utils/getCardNumber\";\nimport { addCard } from \"store/ducks/owner/actionCreators\";\n\ninterface Props {\n  open: boolean;\n  handleClose: () => void;\n}\n\ninterface IDefaultValues {\n  cardNumber: string;\n  mm: string;\n  yy: string;\n  cvv: string;\n}\n\nexport const NewDialog: FC<Props> = ({ open, handleClose }) => {\n  const dispatch = useDispatch();\n\n  const defaultValues: IDefaultValues = {\n    cardNumber: \"\",\n    mm: \"\",\n    yy: \"\",\n    cvv: \"\",\n  };\n  const { control, handleSubmit, watch, reset } = useForm<IDefaultValues>({\n    defaultValues,\n  });\n\n  const [errors, setErrors] = useState<any>({});\n\n  const cardNumber = watch(\"cardNumber\");\n  const mm = watch(\"mm\");\n  const yy = watch(\"yy\");\n  const cvv = watch(\"cvv\");\n\n  useEffect((): any => {\n    reset({\n      cardNumber: getCardNumber(cardNumber),\n    });\n  }, [reset, cardNumber]);\n\n  const onSubmit = () => {\n    setErrors({});\n\n    if (cardNumber.trim().length < 16) {\n      setErrors((prev: any) => ({\n        ...prev,\n        cardNumber: \"Номер карты содержит не менее 16 символов\",\n      }));\n    }\n\n    if (mm.length !== 2 || Number(mm) > 12) {\n      setErrors((prev: any) => ({\n        ...prev,\n        mm: \"Неверно указан месяц истечения\",\n      }));\n    }\n    if (yy.length !== 2) {\n      setErrors((prev: any) => ({\n        ...prev,\n        yy: \"Неверно указан год истечения\",\n      }));\n    }\n    if (cvv.length !== 3) {\n      setErrors((prev: any) => ({\n        ...prev,\n        cvv: \"CVV карты содержит 3 символа\",\n      }));\n      return;\n    }\n\n    dispatch(addCard({ cardNumber: cardNumber.trim(), mm, yy, cvv }));\n    setErrors({});\n    handleClose();\n  };\n\n  return (\n    <Dialog open={open} handleClose={handleClose} title=\"Добавление карты\" form=\"addCard\">\n      <form id=\"addCard\" onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          control={control}\n          name=\"cardNumber\"\n          label=\"Номер\"\n          type=\"text\"\n          defaultValue={defaultValues.cardNumber}\n          error={!!errors.cardNumber}\n          helperText={errors?.cardNumber}\n          maxLength={20}\n          required\n          autoFocus\n        />\n        <Grid container spacing={1}>\n          <Grid xs={4} item>\n            <Input\n              control={control}\n              name=\"mm\"\n              label=\"Месяц\"\n              type=\"text\"\n              defaultValue={defaultValues.mm}\n              error={!!errors.mm}\n              helperText={errors?.mm}\n              maxLength={2}\n              required\n            />\n          </Grid>\n          <Grid xs={4} item>\n            <Input\n              control={control}\n              name=\"yy\"\n              label=\"Год\"\n              type=\"text\"\n              defaultValue={defaultValues.yy}\n              error={!!errors.yy}\n              helperText={errors?.yy}\n              maxLength={2}\n              required\n            />\n          </Grid>\n          <Grid xs={4} item>\n            <Input\n              control={control}\n              name=\"cvv\"\n              label=\"CVV\"\n              type=\"text\"\n              defaultValue={defaultValues.cvv}\n              error={!!errors.cvv}\n              helperText={errors?.cvv}\n              maxLength={3}\n              required\n            />\n          </Grid>\n        </Grid>\n        <Input\n          control={control}\n          name=\"comment\"\n          label=\"Комментарий\"\n          type=\"text\"\n          // defaultValue={defaultValues.comment}\n          // error={!!errors.comment}\n          // helperText={errors?.comment}\n        />\n      </form>\n    </Dialog>\n  );\n};\n","import { FC, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n\nimport { Button, Grid, Menu, MenuItem, List, ListItem } from \"@material-ui/core\";\nimport { Delete, Equalizer } from \"@material-ui/icons\";\nimport Dialog from \"components/UI/Dialog\";\nimport Input from \"components/UI/Fields/Input\";\n\nimport { getCardNumber } from \"utils/getCardNumber\";\nimport { RootState } from \"store/rootReducer\";\nimport { deleteCard } from \"store/ducks/owner/actionCreators\";\nimport { selectCard } from \"store/ducks/owner/selectors\";\n\ninterface Props {\n  id: number | null;\n  handleClose: () => void;\n}\n\ninterface IDefaultValues {\n  cardNumber: string;\n  comment: string;\n}\n\nexport const EditDialog: FC<Props> = ({ id, handleClose }) => {\n  const dispatch = useDispatch();\n  const card = useSelector((state: RootState) => id && (selectCard(state, id) as any));\n\n  const defaultValues: IDefaultValues = {\n    cardNumber: card?.cardNumber,\n    comment: \"\",\n  };\n  const { control, watch, handleSubmit, reset } = useForm<IDefaultValues>({\n    defaultValues,\n  });\n\n  const [errors, setErrors] = useState<any>({});\n\n  const cardNumber = watch(\"cardNumber\");\n  // const comment = watch(\"comment\");\n\n  useEffect((): any => {\n    reset({\n      cardNumber: getCardNumber(cardNumber),\n    });\n  }, [reset, cardNumber]);\n\n  const onSubmit = () => {\n    setErrors({});\n\n    if (cardNumber.trim().length < 16) {\n      setErrors((prev: any) => ({\n        ...prev,\n        cardNumber: \"Номер карты содержит не менее 16 символов\",\n      }));\n      return;\n    }\n\n    // dispatch(editCard({ cardNumber: cardNumber.trim(), mm, yy }));\n    setErrors({});\n    handleClose();\n  };\n\n  const [stats, setStats] = useState<null | HTMLElement>(null);\n  const [period, setPeriod] = useState(\"за день\");\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => setStats(event.currentTarget);\n  const handlePickStats = (e: any) => {\n    e.currentTarget.innerText && setPeriod(e.currentTarget.innerText);\n    setStats(null);\n  };\n\n  const handleDelete = () => {\n    if (id && window.confirm(`Вы действительно хотите открепить карту?`)) {\n      handleClose();\n      dispatch(deleteCard(id));\n    }\n  };\n\n  // подстановка асинхронных данных в поля формы\n  useEffect(() => {\n    card &&\n      reset({\n        cardNumber: card?.cardNumber,\n        // comment: card.comment\n      });\n  }, [reset, card]);\n\n  return (\n    <Dialog\n      open={Boolean(id)}\n      handleClose={handleClose}\n      title={`${card?.cardNumber} (id: ${card?.id})`}\n      form=\"editCard\">\n      <Button onClick={handleClick} startIcon={<Equalizer />}>\n        Статистика {period}\n      </Button>\n      <Grid item xs={12}>\n        <List dense>\n          <ListItem>Транзакций: {period === \"за день\" ? card?.dayTransactions : card?.monthTransactions}</ListItem>\n          <ListItem>Сумма: {period === \"за день\" ? card?.daySum : card?.monthSum}</ListItem>\n        </List>\n      </Grid>\n      <Menu anchorEl={stats} keepMounted open={Boolean(stats)} onClose={handlePickStats}>\n        <MenuItem onClick={handlePickStats}>день</MenuItem>\n        <MenuItem onClick={handlePickStats}>неделю</MenuItem>\n        <MenuItem onClick={handlePickStats}>месяц</MenuItem>\n      </Menu>\n      <form id=\"editCard\" onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          control={control}\n          name=\"number\"\n          label=\"Номер\"\n          type=\"text\"\n          defaultValue={defaultValues.cardNumber}\n          error={!!errors.cardNumber}\n          helperText={errors?.cardNumber}\n          required\n          autoFocus\n        />\n        <Input\n          control={control}\n          name=\"comment\"\n          label=\"Комментарий\"\n          type=\"text\"\n          defaultValue={defaultValues.comment}\n          error={!!errors.comment}\n          helperText={errors?.comment}\n        />\n      </form>\n      <Button\n        variant=\"outlined\"\n        color=\"secondary\"\n        startIcon={<Delete />}\n        onClick={handleDelete}\n        style={{ marginTop: \"1rem\" }}>\n        Открепить карту\n      </Button>\n    </Dialog>\n  );\n};\n","import { ITableHeader, ITableRow } from \"components/UI/TableWrapper/types\";\nimport { ICard } from \"store/ducks/owner/state\";\nimport { getCardNumber } from \"utils/getCardNumber\";\n\nfunction parseExpirationDate(mm: number, yy: number): string {\n  return mm < 10 ? `0${mm}/${yy}` : `${mm}/${yy}`;\n}\n\nexport const getHeaders = (): ITableHeader[] => [\n  { name: \"id\" },\n  { name: \"Описание\" },\n  { name: \"Валюта\" },\n  { name: \"Номер\" },\n  { name: \"Истекает\" },\n  { name: \"Комментарий\" },\n];\n\nexport const getRows = (items: ICard[] | any): ITableRow[] => {\n  return items.map(({ id, name, currency, cardNumber, mm, yy, comment }: ICard | any) => ({\n    columns: [\n      {\n        content: id,\n      },\n      {\n        content: name || \"VISA\",\n      },\n      {\n        content: currency || \"RUB\",\n      },\n      {\n        content: getCardNumber(cardNumber),\n      },\n      {\n        content: parseExpirationDate(mm, yy),\n      },\n      {\n        content: comment || \"Это комментарий к карте\",\n      },\n    ],\n  }));\n};\n","export enum Status {\n  AUTHORIZING = \"AUTHORIZING\",\n  AUTHORIZED = \"AUTHORIZED\",\n  UNAUTHORIZED = \"UNAUTHORIZED\",\n  ERROR = \"ERROR\",\n  NEVER = \"NEVER\",\n}\n\nexport interface ILogin {\n  email: string;\n  password: string;\n}\n\nexport interface IStatus {\n  status: Status;\n}\n\nexport type IAuth = ILogin & IStatus;\n","import { FC, ReactElement, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Button, Paper } from \"@material-ui/core\";\nimport { Add as AddIcon } from \"@material-ui/icons\";\nimport Table from \"components/UI/TableWrapper\";\nimport { NewDialog } from \"./NewDialog\";\nimport { EditDialog } from \"./EditDialog\";\n\nimport { getHeaders, getRows } from \"./utilsTable\";\nimport { selectCards } from \"store/ducks/owner/selectors\";\nimport { fetchCards } from \"store/ducks/owner/actionCreators\";\n\nexport const CardsTable: FC = (): ReactElement => {\n  const dispatch = useDispatch();\n  const cards = useSelector(selectCards);\n\n  const headers = getHeaders();\n  const rows = getRows(cards);\n\n  const [openNew, setOpenNew] = useState<boolean>(false);\n  const [editID, setEditID] = useState<number | null>(null);\n\n  const handleNewOpen = () => setOpenNew(true);\n  const handleNewClose = () => setOpenNew(false);\n\n  const onRowClick = (e: any, id: number) => setEditID(id);\n  const handleEditClose = () => setEditID(null);\n\n  useEffect(() => {\n    dispatch(fetchCards());\n  }, [dispatch]);\n\n  return (\n    <Paper>\n      <Table\n        headers={headers}\n        rows={rows}\n        title=\"Список карт\"\n        button={\n          <Button variant=\"outlined\" color=\"primary\" startIcon={<AddIcon />} onClick={handleNewOpen}>\n            Добавить\n          </Button>\n        }\n        onRowClick={onRowClick}\n      />\n\n      <NewDialog open={openNew} handleClose={handleNewClose} />\n      <EditDialog id={editID} handleClose={handleEditClose} />\n    </Paper>\n  );\n};\n","import { FC } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { CardsTable } from \"./CardsTable\";\n\nconst Cards: FC = () => {\n  return (\n    <Grid item xs={12}>\n      <CardsTable />\n    </Grid>\n  );\n};\n\nexport default Cards;\n","import { FC, ReactElement, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n\nimport { Button, Paper, Menu, MenuItem } from \"@material-ui/core\";\nimport { Add as AddIcon } from \"@material-ui/icons\";\nimport Table from \"components/UI/TableWrapper\";\n// import { NewDialog } from \"./NewDialog\";\n\nimport { getHeaders, getRows } from \"./utilsTable\";\n// import { selectPartners } from \"store/ducks/owner/selectors\";\n// import { fetchPartners } from \"store/ducks/owner/actionCreators\";\n\nexport const TerminalsTable: FC = (): ReactElement => {\n  // const dispatch = useDispatch();\n  const history = useHistory();\n  // const terminals = useSelector(selectPartners);\n  const terminals = [\n    {\n      id: 1,\n      status: 2,\n      name: \"СКБ банк\",\n    },\n  ];\n\n  const headers = getHeaders();\n  const rows = getRows(terminals);\n\n  const [stats, setStats] = useState<null | HTMLElement>(null);\n  const [newTerminal, setNewTerminal] = useState<boolean>(false);\n\n  const onRowClick = (e: any, id: number) => history.push(`/terminals/${id}`);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => setStats(event.currentTarget);\n  const handleNewTerminal = (e: any) => {\n    e.currentTarget.innerText && setNewTerminal(e.currentTarget.innerText);\n    console.log(newTerminal);\n    setStats(null);\n  };\n\n  // useEffect(() => {\n  //   dispatch(fetchPartners());\n  // }, [dispatch]);\n\n  return (\n    <Paper>\n      <Table\n        headers={headers}\n        rows={rows}\n        title=\"Список терминалов\"\n        button={\n          <>\n            <Button variant=\"outlined\" color=\"primary\" startIcon={<AddIcon />} onClick={handleClick}>\n              Добавить\n            </Button>\n            <Menu anchorEl={stats} keepMounted open={Boolean(stats)} onClose={handleNewTerminal}>\n              {/* TODO: .map() */}\n              <MenuItem onClick={handleNewTerminal}>СКБ банк</MenuItem>\n              <MenuItem onClick={handleNewTerminal}>СКБ банк</MenuItem>\n            </Menu>\n          </>\n        }\n        onRowClick={onRowClick}\n      />\n\n      {/* <NewDialog open={openNew} handleClose={handleNewClose} /> */}\n    </Paper>\n  );\n};\n","import { ITableHeader, ITableRow } from \"components/UI/TableWrapper/types\";\nimport { ITerminal } from \"store/ducks/owner/state\";\n\nexport const getHeaders = (): ITableHeader[] => [\n  { name: \"\" },\n  { name: \"id\" },\n  { name: \"Наименование\" },\n  { name: \"Посетителей\" },\n  { name: \"Количество оплат\" },\n  { name: \"Количество клиентов\" },\n];\n\nexport const getRows = (items: ITerminal[] | any): ITableRow[] => {\n  return items.map(({ id, status, name, visitors, payments, clients }: ITerminal | any) => ({\n    columns: [\n      {\n        status,\n      },\n      {\n        content: id,\n      },\n      {\n        content: name,\n      },\n      {\n        content: visitors || \"39\",\n      },\n      {\n        content: payments || \"148\",\n      },\n      {\n        content: clients || \"24\",\n      },\n    ],\n  }));\n};\n","import { FC } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { TerminalsTable } from \"./TerminalsTable\";\n\nconst Terminals: FC = () => {\n  return (\n    <Grid item xs={12}>\n      <TerminalsTable />\n    </Grid>\n  );\n};\n\nexport default Terminals;\n","import { FC, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\nimport { Location, History } from \"history\";\n// import { useForm } from \"react-hook-form\";\n// @ts-ignore\nimport ReactCountryFlag from \"react-country-flag\";\n\nimport { makeStyles, Button, Grid, Menu, MenuItem, List, ListItem, Typography } from \"@material-ui/core\";\nimport { Delete, Equalizer } from \"@material-ui/icons\";\n// import Input from \"components/UI/Fields/Input\";\n// import { SitesTable } from \"components/Pages/Home/SitesTable\";\n\n// import { RootState } from \"store/rootReducer\";\nimport { ITerminal } from \"store/ducks/owner/state\";\n// import { deletePartner, editPartner } from \"store/ducks/owner/actionCreators\";\n// import { selectPartner } from \"store/ducks/owner/selectors\";\n\ninterface RouteProps<P> {\n  match: { params: P };\n  location: Location;\n  history: History;\n}\n\ninterface Props {\n  id: ITerminal[\"id\"];\n}\n\n// interface IDefaultValues {\n//   email: string;\n//   password: string;\n//   description: string;\n//   commission: number;\n// }\n\nconst useStyles = makeStyles(theme => ({\n  flag: {\n    margin: theme.spacing(0, 0.5, 0, 2),\n  },\n}));\n\nconst PartnerPage: FC<RouteProps<Props>> = ({ match }) => {\n  // const { id } = match.params;\n  const s = useStyles();\n  // const dispatch = useDispatch();\n  // const partner = useSelector((state: RootState) => selectPartner(state, Number(id)) as any);\n\n  // const defaultValues: IDefaultValues = {\n  //   email: partner?.email,\n  //   password: \"\",\n  //   description: partner?.description,\n  //   commission: partner?.commission,\n  // };\n  // const { control, watch, reset } = useForm<IDefaultValues>({\n  //   defaultValues,\n  // });\n\n  // const [errors, setErrors] = useState<any>({});\n  // const email = watch(\"email\");\n  // const password = watch(\"password\");\n  // const description = watch(\"description\");\n  // const commission = watch(\"commission\");\n\n  // const handleSubmit = () => {\n  //   setErrors({});\n  //   if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) {\n  //     setErrors((prev: any) => ({\n  //       ...prev,\n  //       email: \"Неверный формат почты\",\n  //     }));\n  //     return;\n  //   }\n\n  //   if (description.length > 128) {\n  //     setErrors((prev: any) => ({\n  //       ...prev,\n  //       description: \"Описание не может превышать 128 символов\",\n  //     }));\n  //     return;\n  //   }\n\n  //   if (Number(commission) > 100) {\n  //     setErrors((prev: any) => ({\n  //       ...prev,\n  //       commission: \"Минимум 5%, максимум 100%\",\n  //     }));\n  //     return;\n  //   }\n\n  //   const action = dispatch(editPartner({ id, email, password, description, commission }));\n\n  //   reset({\n  //     email: action.payload.email,\n  //     password: \"\",\n  //     description: action.payload.description,\n  //     commission: action.payload.commission,\n  //   });\n  // };\n\n  const [stats, setStats] = useState<null | HTMLElement>(null);\n  const [period, setPeriod] = useState(\"день\");\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => setStats(event.currentTarget);\n  const handlePickStats = (e: any) => {\n    e.currentTarget.innerText && setPeriod(e.currentTarget.innerText);\n    setStats(null);\n  };\n\n  const handleDelete = () => {\n    if (window.confirm(`Вы действительно хотите отключить терминал \"${\"СКБ банк\"}\"?`)) {\n      // dispatch(deletePartner(id));\n    }\n  };\n\n  return (\n    <Grid>\n      <Typography variant=\"h4\" gutterBottom>\n        {/* {terminal?.name} (id: {terminal?.id}) */}\n        СКБ банк (id: {1})\n      </Typography>\n\n      <Grid item xs={12} md={6} lg={4}>\n        <Grid container>\n          <Grid item xs={12} md={6} lg={8}>\n            <Button onClick={handleClick} startIcon={<Equalizer />}>\n              Статистика за {period}\n            </Button>\n            <List dense>\n              <ListItem>Посетителей: 39</ListItem>\n              <ListItem>Клиентов: 24</ListItem>\n              <ListItem>Количетсво оплат: 148</ListItem>\n              <ListItem>\n                Страна / валюта:\n                <ReactCountryFlag className={s.flag} countryCode={\"RU\"} svg title={\"RU\"} /> / ₽\n              </ListItem>\n            </List>\n            <Menu anchorEl={stats} keepMounted open={Boolean(stats)} onClose={handlePickStats}>\n              <MenuItem onClick={handlePickStats}>день</MenuItem>\n              <MenuItem onClick={handlePickStats}>неделю</MenuItem>\n              <MenuItem onClick={handlePickStats}>месяц</MenuItem>\n            </Menu>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6}>\n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              startIcon={<Delete />}\n              onClick={handleDelete}\n              fullWidth\n              style={{ marginTop: \"1rem\" }}>\n              Отключить\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default PartnerPage;\n","import { FC } from \"react\";\n\nimport LayoutDefault from \"components/Layout\";\n\nimport Home from \"components/Pages/Home\";\nimport Partners from \"components/Pages/Partners\";\nimport PartnerPage from \"components/Pages/Partners/Partner\";\nimport Payments from \"components/Pages/Payments\";\nimport Orders from \"components/Pages/Orders\";\nimport Finances from \"components/Pages/Finances\";\nimport Cards from \"components/Pages/Cards\";\nimport Terminals from \"components/Pages/Terminals\";\nimport TerminalPage from \"components/Pages/Terminals/Terminal\";\n\nexport interface IRoute {\n  name: string;\n  component: FC<any>;\n  path: string;\n  layout: FC<{ route?: IRoute; children?: any }>;\n  exact?: boolean;\n  /** Типы ролей, которым разрешен данный роут */\n  access?: number[];\n}\n\nexport const ROUTES: IRoute[] = [\n  {\n    name: \"Главная\",\n    component: Home,\n    path: \"/\",\n    layout: LayoutDefault,\n    exact: true,\n  },\n  {\n    name: \"Партнеры\",\n    component: Partners,\n    path: \"/partners\",\n    layout: LayoutDefault,\n    access: [2, 3],\n    exact: true,\n  },\n  {\n    name: \"Страница партнера\",\n    component: PartnerPage,\n    path: \"/partners/:id\",\n    layout: LayoutDefault,\n    access: [2, 3],\n  },\n  {\n    name: \"Заказы\",\n    component: Orders,\n    path: \"/orders\",\n    layout: LayoutDefault,\n    access: [3],\n  },\n  {\n    name: \"Выплаты\",\n    component: Payments,\n    path: \"/payments\",\n    layout: LayoutDefault,\n  },\n  {\n    name: \"Учет финансов\",\n    component: Finances,\n    path: \"/finances\",\n    layout: LayoutDefault,\n    access: [3],\n  },\n  {\n    name: \"Пулл карт\",\n    component: Cards,\n    path: \"/cards\",\n    layout: LayoutDefault,\n    access: [3],\n  },\n  {\n    name: \"Терминалы\",\n    component: Terminals,\n    path: \"/terminals\",\n    layout: LayoutDefault,\n    access: [3],\n    exact: true,\n  },\n  {\n    name: \"Страница терминала\",\n    component: TerminalPage,\n    path: \"/terminals/:id\",\n    layout: LayoutDefault,\n    access: [3],\n  },\n];\n","import { cookies } from \"plugins/cookies\";\n\nexport const isAuthorized = Boolean(cookies.get(\"token\"));\n","import { Router, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport LayoutDefault from \"components/Layout\";\nimport LayoutAuth from \"components/Layout/Auth\";\nimport ErrorPage from \"components/Pages/Error\";\nimport AuthPage from \"components/Pages/Auth\";\n\nimport { ROUTES, IRoute } from \"constants/ROUTES\";\n\nimport { isAuthorized } from \"utils/isAuthorized\";\nimport { history } from \"utils/history\";\n\nexport const App = () => {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route path=\"/auth\">\n          <LayoutAuth>\n            <AuthPage />\n          </LayoutAuth>\n        </Route>\n\n        <Route path=\"/404\">\n          <LayoutDefault>\n            <ErrorPage code={404} message=\"Запрашиваемая страница не найдена.\" />\n          </LayoutDefault>\n        </Route>\n\n        {ROUTES.map((route: IRoute) => (\n          <Route\n            exact={route.exact}\n            path={route.path}\n            key={`route_${route.path}`}\n            render={props =>\n              isAuthorized ? (\n                <route.layout route={route}>\n                  <route.component {...props} />\n                </route.layout>\n              ) : (\n                <Redirect to=\"/auth\" />\n              )\n            }\n          />\n        ))}\n\n        <Redirect from=\"*\" to=\"/404\" />\n      </Switch>\n    </Router>\n  );\n};\n","import produce, { Draft } from \"immer\";\nimport { cookies } from \"plugins/cookies\";\n\nimport { AuthActions, AuthActionsTypes } from \"./actionCreators\";\nimport { Status, IAuth } from \"./state\";\n\nconst initAuth: IAuth = {\n  email: \"\",\n  password: \"\",\n  status: Status.NEVER,\n};\n\nconst authReducer = produce((draft: Draft<IAuth>, action: AuthActions) => {\n  switch (action.type) {\n    case AuthActionsTypes.LOGIN:\n      draft.status = Status.AUTHORIZING;\n      break;\n\n    case AuthActionsTypes.LOGOUT:\n      cookies.set(\"token\", \"\", { path: \"/\", expires: new Date(Date.now() - 1000) });\n      draft.email = initAuth.email;\n      draft.password = initAuth.password;\n      draft.status = Status.UNAUTHORIZED;\n      break;\n\n    case AuthActionsTypes.SET_STATUS:\n      draft.status = action.payload;\n      break;\n\n    case AuthActionsTypes.SET_TOKEN:\n      cookies.set(\"token\", action.payload, { path: \"/\", expires: new Date(Date.now() + 1000 * 60 * 60 * 24 * 30) });\n      draft.status = Status.AUTHORIZED;\n      break;\n\n    default:\n      break;\n  }\n}, initAuth);\n\nexport default authReducer;\n","export enum Status {\n  LOADED = \"LOADED\",\n  LOADING = \"LOADING\",\n  ERROR = \"ERROR\",\n  NEVER = \"NEVER\",\n}\n\nexport type ICoin = \"BTC\" | \"ETH\" | \"USDT\";\n\nexport interface IShop {\n  id: number;\n  name: string;\n  siteURL: string;\n  successURL: string;\n  failURL: string;\n  webhookURL: string;\n  createDate: number;\n  publicKey?: string;\n  webhookSecretKey?: string;\n  verifyStatus: 1 | 2 | 3;\n}\n\nexport interface IUser {\n  id: number;\n  name: string;\n  email: string;\n  type: 1 | 2 | 3;\n  balance: number;\n  shops: IShop[];\n}\nexport interface IManage {\n  status: Status;\n  user: IUser;\n}\n","import produce, { Draft } from \"immer\";\nimport { ManageActions, ManageActionsTypes } from \"./actionCreators\";\nimport { IManage, IShop, Status } from \"./state\";\n\nconst initManage: IManage = {\n  status: Status[\"NEVER\"],\n  user: {\n    id: -1,\n    name: \"\",\n    email: \"\",\n    type: 1,\n    balance: 0,\n    shops: [],\n  },\n};\n\nconst manageReducer = produce((draft: Draft<IManage>, action: ManageActions) => {\n  switch (action.type) {\n    case ManageActionsTypes.CHANGE_NAME_EMAIL:\n      draft.user = {\n        ...draft.user,\n        name: action.payload.name,\n        email: action.payload.email,\n      };\n      break;\n\n    case ManageActionsTypes.SET_USER:\n      draft.user = action.payload;\n      break;\n\n    case ManageActionsTypes.SET_SHOPS:\n      draft.user.shops = action.payload;\n      break;\n    case ManageActionsTypes.SET_SHOP:\n      draft.user.shops.splice(\n        draft.user.shops.findIndex(shop => shop.id === action.payload.id),\n        1,\n      );\n      draft.user.shops = [...draft.user.shops, action.payload];\n      break;\n    case ManageActionsTypes.ADD_SHOP:\n      draft.status = Status.LOADING;\n      break;\n    case ManageActionsTypes.DELETE_SHOP:\n      draft.user.shops.splice(\n        draft.user.shops.findIndex(shop => shop.id === action.payload),\n        1,\n      );\n      break;\n\n    case ManageActionsTypes.SET_KEY:\n      let shop: IShop | any = draft.user.shops[draft.user.shops.findIndex(shop => shop.id === action.payload.id)];\n\n      if (shop) {\n        const key = Object.keys(action.payload)[1];\n        shop[key] = action.payload[key];\n      }\n      break;\n\n    default:\n      break;\n  }\n}, initManage);\n\nexport default manageReducer;\n","import { IShop, IUser } from \"../manage/state\";\n\nexport enum Status {\n  LOADED = \"LOADED\",\n  LOADING = \"LOADING\",\n  ERROR = \"ERROR\",\n  NEVER = \"NEVER\",\n}\n\nexport interface IPartner {\n  id: number;\n  name: string;\n  email: string;\n  password: string;\n  type: number;\n  balance: number;\n  createDate: number;\n  ip: string;\n  description: string;\n  commission: number;\n  removed: boolean;\n}\n\nexport interface ICard {\n  id: number;\n  monthTransactions: number;\n  dayTransactions: number;\n  cardNumber: string;\n  mm: string;\n  yy: string;\n  daySum: number;\n  monthSum: number;\n}\n\ninterface IShopWIthUser extends IShop {\n  user: IUser;\n}\n\nexport interface IOrder {\n  id: number;\n  v4Id: string;\n  status: 1 | 2 | 3;\n  amount: number;\n  createDate: number;\n  payerEmail: string;\n  requiredEmail: boolean;\n  payerCardNumber: string | null;\n  payerIP: string;\n  payerCardHolderName: string | null;\n  targetCardNumber: string;\n  payload: string;\n  design: 1 | 2 | 3;\n  desc: string;\n  shop: IShopWIthUser;\n}\n\nexport interface ITerminal {\n  id: number;\n  status: 1 | 2 | 3;\n}\n\nexport interface IOwner {\n  status: Status;\n  partners: IPartner[];\n  cards: ICard[];\n  orders: IOrder[];\n  terminals: ITerminal[];\n}\n","import produce, { Draft } from \"immer\";\nimport { OwnerActions, OwnerActionsTypes } from \"./actionCreators\";\nimport { IOwner, Status } from \"./state\";\n\nconst initManage: IOwner = {\n  status: Status[\"NEVER\"],\n  partners: [],\n  cards: [],\n  orders: [],\n  terminals: [],\n};\n\nconst ownerReducer = produce((draft: Draft<IOwner>, action: OwnerActions) => {\n  switch (action.type) {\n    case OwnerActionsTypes.SET_PARTNERS:\n      draft.partners = action.payload;\n      break;\n    case OwnerActionsTypes.ADD_PARTNER:\n      draft.status = Status.LOADING;\n      break;\n    case OwnerActionsTypes.DELETE_PARTNER:\n      const partner = draft.partners.findIndex(partner => partner.id === action.payload);\n      partner && draft.partners.splice(partner, 1);\n      break;\n\n    case OwnerActionsTypes.SET_CARDS:\n      draft.cards = action.payload;\n      break;\n    case OwnerActionsTypes.ADD_CARD:\n      draft.status = Status.LOADING;\n      break;\n    case OwnerActionsTypes.DELETE_CARD:\n      const card = draft.cards.findIndex(card => card.id === action.payload);\n      card && draft.cards.splice(card, 1);\n      break;\n\n    case OwnerActionsTypes.SET_ORDERS:\n      draft.orders = action.payload;\n      break;\n\n    default:\n      break;\n  }\n}, initManage);\n\nexport default ownerReducer;\n","import { combineReducers } from \"redux\";\n\nimport { IAuth } from \"./ducks/auth/state\";\nimport { IManage } from \"./ducks/manage/state\";\nimport { IOwner } from \"./ducks/owner/state\";\n\nimport authReducer from \"./ducks/auth/reducer\";\nimport manageReducer from \"./ducks/manage/reducer\";\nimport ownerReducer from \"./ducks/owner/reducer\";\n\nexport interface RootState {\n  auth: IAuth;\n  manage: IManage;\n  owner: IOwner;\n}\n\nexport const rootReducer = combineReducers<RootState>({\n  auth: authReducer,\n  manage: manageReducer,\n  owner: ownerReducer,\n});\n","export const errorHandler = (e: Error | any): void => {\n  console.log(\"Error\", e.response?.data?.error?.code);\n  if (e.response?.data.error) alert(e.response.data.error.message);\n};\n","export const API_URL = \"https://api.maxpay.me\";\n","import axios from \"axios\";\n\nimport { API_URL } from \"./constants\";\n\nimport { ILogin } from \"store/ducks/auth/state\";\n\nexport const API_AUTH = {\n  async login(payload: ILogin): Promise<{ token: string }> {\n    const { email, password } = payload;\n\n    const response = await axios.post(`${API_URL}/auth/login`, { email, password });\n    return response.data.token;\n  },\n};\n","import { SagaIterator } from \"redux-saga\";\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport { errorHandler } from \"utils/errorHandler\";\n\nimport { API_AUTH } from \"api/auth\";\nimport { setAuthStatus, AuthActionsTypes, ILoginAction, setAuthToken } from \"./actionCreators\";\nimport { Status } from \"./state\";\n\nexport function* doLogin({ payload: values }: ILoginAction): any {\n  try {\n    const token = yield call(API_AUTH.login, values);\n    yield put(setAuthToken(token));\n  } catch (e) {\n    yield put(setAuthStatus(Status.ERROR));\n\n    if (e.response) {\n      const code = e.response.data.error.code;\n\n      if (code === 4007 || code === 4009) {\n        alert(\"Неверный логин или пароль\");\n      } else if (code === 4001) {\n        alert(\"Необходимо ввести пароль\");\n      } else if (code === 4003) {\n        alert(\"Минимальная длина пароля 8 символов, максимальная 50\");\n      }\n    } else {\n      errorHandler(e);\n    }\n  }\n}\n\nexport function* authSaga(): SagaIterator {\n  yield takeEvery(AuthActionsTypes.LOGIN, doLogin);\n}\n","import axiosDefault from \"axios\";\nimport { cookies } from \"plugins/cookies\";\n\nconst token: string | null = cookies.get(\"token\");\n\nconst axios = axiosDefault.create({\n  headers: {\n    Authorization: token,\n  },\n});\n\nexport default axios;\n","import axios from \"plugins/axios\";\n\nimport { API_URL } from \"./constants\";\n\nimport {\n  IAddShop,\n  IChangeNameWithEmail,\n  IChangePassword,\n  IDeleteShop,\n  IEditShop,\n  IFetchShops,\n  IRefreshKey,\n} from \"store/ducks/manage/actionCreators\";\nimport { IManage, IShop } from \"store/ducks/manage/state\";\n\nexport const API_MANAGE = {\n  async changeNameWithEmail({\n    name,\n    email,\n  }: IChangeNameWithEmail[\"payload\"]): Promise<{\n    success: boolean;\n    user: {\n      id: number;\n      name: string;\n      email: string;\n      balance: number;\n      createDate: number;\n    };\n  }> {\n    const response = await axios.post(`${API_URL}/manage/editProfile`, { name, email });\n    return response.data.user;\n  },\n  async changePassword({ oldPassword, newPassword }: IChangePassword[\"payload\"]): Promise<{}> {\n    const response = await axios.post(`${API_URL}/manage/editProfile`, { oldPassword, newPassword });\n    return response.data.user;\n  },\n\n  async fetchUser(): Promise<IManage[\"user\"]> {\n    const response = await axios.get(`${API_URL}/manage/getUserInfo`);\n    return response.data.user;\n  },\n  async fetchShops(payload: IFetchShops[\"payload\"]): Promise<IShop[]> {\n    let params = `?page=${payload.page}`;\n\n    if (payload?.partnerId) {\n      params = `?partnerId=${payload.partnerId}&page=${payload.page}`;\n    }\n\n    const response = await axios.get(`${API_URL}/manage/getShopsList${params}`);\n    return response.data.shops;\n  },\n  async addShop({ name, siteURL }: IAddShop[\"payload\"]): Promise<IShop> {\n    const response = await axios.post(`${API_URL}/manage/addShop`, { name, siteURL });\n    return response.data.shop;\n  },\n  async editShop({ id, name, failURL, successURL, webhookURL }: IEditShop[\"payload\"]): Promise<IShop> {\n    const response = await axios.post(`${API_URL}/manage/editShop`, {\n      id,\n      name,\n      failURL,\n      successURL,\n      webhookURL,\n    });\n    return response.data.shop;\n  },\n  async deleteShop(id: IDeleteShop[\"payload\"]): Promise<{ success: boolean }> {\n    const response = await axios.post(`${API_URL}/manage/removeShop`, { id });\n    return response.data.success;\n  },\n\n  async refreshKey({ id, value }: IRefreshKey[\"payload\"]): Promise<any> {\n    const response = await axios.post(`${API_URL}/manage/updateShopKeys`, { id, value });\n    return {\n      id,\n      [value]: response.data[value],\n    };\n  },\n};\n","import { SagaIterator } from \"redux-saga\";\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport { cookies } from \"plugins/cookies\";\n\nimport { history } from \"utils/history\";\nimport { errorHandler } from \"utils/errorHandler\";\n\nimport { API_MANAGE } from \"api/manage\";\nimport { setAuthStatus } from \"../auth/actionCreators\";\nimport { Status } from \"../auth/state\";\n\nimport {\n  ManageActionsTypes,\n  IChangeNameWithEmail,\n  IChangePassword,\n  setUser,\n  IAddShop,\n  setShops,\n  IEditShop,\n  IDeleteShop,\n  IRefreshKey,\n  setKey,\n  IFetchShops,\n} from \"./actionCreators\";\n\nexport function* changeNameWithEmail({ payload: values }: IChangeNameWithEmail): any {\n  try {\n    yield call(API_MANAGE.changeNameWithEmail, values);\n  } catch (e) {\n    errorHandler(e);\n  }\n}\n\nexport function* changePassword({ payload: values }: IChangePassword): any {\n  try {\n    yield call(API_MANAGE.changePassword, values);\n  } catch (e) {\n    if (e.response.data) {\n      const errorCode = e.response.data.error.code;\n\n      if (errorCode === 4013) {\n        alert(\"Новый пароль не был применен, так как он равен текущему\");\n      }\n    } else {\n      errorHandler(e);\n    }\n  }\n}\n\nexport function* fetchUser(): any {\n  try {\n    const data = yield call(API_MANAGE.fetchUser);\n\n    if (data) {\n      yield put(setUser(data));\n    } else {\n      yield put(setAuthStatus(Status.NEVER));\n\n      cookies.set(\"token\", \"\", { path: \"/\", expires: new Date(Date.now() - 1000) });\n      history.push(\"/auth\");\n      alert(\"Необходимо авторизироваться\");\n    }\n  } catch (e) {\n    yield put(setAuthStatus(Status.NEVER));\n\n    cookies.set(\"token\", \"\", { path: \"/\", expires: new Date(Date.now() - 1000) });\n    history.push(\"/auth\");\n    alert(\"Необходимо авторизироваться\");\n    console.log(e);\n  }\n}\n\nexport function* fetchShops({ payload: values }: IFetchShops): any {\n  try {\n    const data = yield call(API_MANAGE.fetchShops, values);\n    yield put(setShops(data));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\nexport function* addShop({ payload: values }: IAddShop): any {\n  try {\n    const data = yield all([yield call(API_MANAGE.addShop, values), yield call(API_MANAGE.fetchShops, { page: 0 })]);\n\n    yield put(setShops(data[1]));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\nexport function* editShop({ payload: values }: IEditShop): any {\n  try {\n    const data = yield all([yield call(API_MANAGE.editShop, values), yield call(API_MANAGE.fetchShops, { page: 0 })]);\n\n    yield put(setShops(data[1]));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\nexport function* deleteShop({ payload: values }: IDeleteShop): any {\n  try {\n    yield call(API_MANAGE.deleteShop, values);\n  } catch (e) {\n    errorHandler(e);\n  }\n}\n\nexport function* refreshKey({ payload: values }: IRefreshKey): any {\n  try {\n    const data = yield call(API_MANAGE.refreshKey, values);\n    const key = Object.keys(data)[1];\n\n    yield put(setKey({ id: values.id, [key]: data[key] }));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\n\nexport function* manageSaga(): SagaIterator {\n  yield takeEvery(ManageActionsTypes.CHANGE_NAME_EMAIL, changeNameWithEmail);\n  yield takeEvery(ManageActionsTypes.CHANGE_PASSWORD, changePassword);\n\n  yield takeEvery(ManageActionsTypes.FETCH_USER, fetchUser);\n\n  yield takeEvery(ManageActionsTypes.FETCH_SHOPS, fetchShops);\n  yield takeEvery(ManageActionsTypes.ADD_SHOP, addShop);\n  yield takeEvery(ManageActionsTypes.EDIT_SHOP, editShop);\n  yield takeEvery(ManageActionsTypes.DELETE_SHOP, deleteShop);\n\n  yield takeEvery(ManageActionsTypes.KEY_REFRESH, refreshKey);\n}\n","import axios from \"plugins/axios\";\n\nimport { API_URL } from \"./constants\";\n\nimport { IShop } from \"store/ducks/manage/state\";\nimport {\n  IAddCard,\n  IAddPartner,\n  IDeleteCard,\n  IDeletePartner,\n  IEditPartner,\n  IFetchOrders,\n  ISetVerifyStatus,\n} from \"store/ducks/owner/actionCreators\";\nimport { IPartner, ICard, IOrder } from \"store/ducks/owner/state\";\n\nexport const API_OWNER = {\n  async fetchPartners(): Promise<IPartner[]> {\n    const response = await axios.get(`${API_URL}/owner/getPartnersList`);\n    return response.data.list;\n  },\n  async addPartner({ email, name, password }: IAddPartner[\"payload\"]): Promise<IPartner> {\n    const response = await axios.post(`${API_URL}/owner/register`, { email, name, password });\n    return response.data.user;\n  },\n  async editPartner({ id, email, password, description, commission }: IEditPartner[\"payload\"]): Promise<IPartner> {\n    const response = await axios.post(`${API_URL}/owner/editPartner`, { id, email, password, description, commission });\n    return response.data.user;\n  },\n  async deletePartner(id: IDeletePartner[\"payload\"]): Promise<{ success: boolean }> {\n    const response = await axios.post(`${API_URL}/owner/removePartner`, { id });\n    return response.data.success;\n  },\n\n  async fetchCards(): Promise<ICard[]> {\n    const response = await axios.get(`${API_URL}/owner/getTargetsList`);\n    return response.data.list;\n  },\n  // async fetchCard(id: ICard[\"id\"]): Promise<ICard> {\n  //   const response = await axios.get(`${API_URL}/owner/getTargetById?id=${id}`);\n  //   return response.data.target;\n  // },\n  async addCard({ cardNumber, mm, yy }: IAddCard[\"payload\"]): Promise<ICard> {\n    const response = await axios.post(`${API_URL}/owner/addTarget`, { cardNumber, mm, yy });\n    return response.data.target;\n  },\n  async deleteCard(id: IDeleteCard[\"payload\"]): Promise<{ success: boolean }> {\n    const response = await axios.post(`${API_URL}/owner/removeTarget`, { id });\n    return response.data.success;\n  },\n\n  async fetchOrders(payload: IFetchOrders[\"payload\"]): Promise<IOrder[]> {\n    const { page } = payload;\n\n    const response = await axios.get(`${API_URL}/owner/getInvoices`, { params: { page } });\n    return response.data.invoices;\n  },\n\n  async setVerifyStatus({ id, newStatus }: ISetVerifyStatus[\"payload\"]): Promise<{ shop: IShop }> {\n    const response = await axios.post(`${API_URL}/owner/setVerifyStatus`, { id, newStatus });\n    return response.data.shop;\n  },\n};\n","import { SagaIterator } from \"redux-saga\";\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\n\nimport { errorHandler } from \"utils/errorHandler\";\n\nimport { API_OWNER } from \"api/owner\";\nimport {\n  OwnerActionsTypes,\n  IAddPartner,\n  IDeletePartner,\n  IAddCard,\n  IDeleteCard,\n  setPartners,\n  setCards,\n  ISetVerifyStatus,\n  IEditPartner,\n  setOrders,\n  IFetchOrders,\n} from \"./actionCreators\";\nimport { setShop } from \"../manage/actionCreators\";\n\nexport function* fetchPartners(): any {\n  try {\n    const data = yield call(API_OWNER.fetchPartners);\n    yield put(setPartners(data));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\nexport function* addPartner({ payload: values }: IAddPartner): any {\n  try {\n    const data = yield all([yield call(API_OWNER.addPartner, values), yield call(API_OWNER.fetchPartners)]);\n\n    yield put(setPartners(data[1]));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\nexport function* editPartner({ payload: values }: IEditPartner): any {\n  try {\n    const data = yield call(API_OWNER.editPartner, values);\n\n    yield put(setPartners(data));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\nexport function* deletePartner({ payload: values }: IDeletePartner): any {\n  try {\n    yield call(API_OWNER.deletePartner, values);\n  } catch (e) {\n    errorHandler(e);\n  }\n}\n\nexport function* fetchCards(): any {\n  try {\n    const data = yield call(API_OWNER.fetchCards);\n    yield put(setCards(data));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\nexport function* addCard({ payload: values }: IAddCard): any {\n  try {\n    const data = yield all([yield call(API_OWNER.addCard, values), yield call(API_OWNER.fetchCards)]);\n\n    yield put(setCards(data[1]));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\nexport function* deleteCard({ payload: values }: IDeleteCard): any {\n  try {\n    yield call(API_OWNER.deleteCard, values);\n  } catch (e) {\n    errorHandler(e);\n  }\n}\n\nexport function* fetchOrders({ payload: values }: IFetchOrders): any {\n  try {\n    const data = yield call(API_OWNER.fetchOrders, values);\n    yield put(setOrders(data));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\n\nexport function* setVerifyStatus({ payload: values }: ISetVerifyStatus): any {\n  try {\n    const data = yield call(API_OWNER.setVerifyStatus, values);\n\n    yield put(setShop(data));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\n\nexport function* ownerSaga(): SagaIterator {\n  yield takeEvery(OwnerActionsTypes.FETCH_PARTNERS, fetchPartners);\n  yield takeEvery(OwnerActionsTypes.ADD_PARTNER, addPartner);\n  yield takeEvery(OwnerActionsTypes.EDIT_PARTNER, editPartner);\n  yield takeEvery(OwnerActionsTypes.DELETE_PARTNER, deletePartner);\n\n  yield takeEvery(OwnerActionsTypes.FETCH_CARDS, fetchCards);\n  yield takeEvery(OwnerActionsTypes.ADD_CARD, addCard);\n  yield takeEvery(OwnerActionsTypes.DELETE_CARD, deleteCard);\n\n  yield takeEvery(OwnerActionsTypes.FETCH_ORDERS, fetchOrders);\n\n  yield takeEvery(OwnerActionsTypes.VERIFY_STATUS, setVerifyStatus);\n}\n","import { all } from \"redux-saga/effects\";\nimport { authSaga } from \"./ducks/auth/saga\";\nimport { manageSaga } from \"./ducks/manage/saga\";\nimport { ownerSaga } from \"./ducks/owner/saga\";\n\nexport default function* rootSaga() {\n  yield all([authSaga(), manageSaga(), ownerSaga()]);\n}\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport { rootReducer } from \"./rootReducer\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootSaga from \"./sagas\";\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = (typeof window !== \"undefined\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\nsagaMiddleware.run(rootSaga);\n","// @ts-nocheck\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\nimport { ruRU } from \"@material-ui/core/locale\";\n\nexport const theme = createMuiTheme(\n  {\n    typography: {\n      fontFamily: [\"Roboto\", \"sans-serif\"],\n    },\n    palette: {\n      primary: {\n        main: \"#007BFB\",\n        dark: \"#0068D8\",\n        contrastText: \"#fff\",\n      },\n      secondary: {\n        main: red.A400,\n      },\n      background: {\n        default: \"#fff\",\n      },\n      text: {\n        primary: \"#14171a\",\n      },\n    },\n    overrides: {\n      MuiButton: {\n        root: {\n          textTransform: \"none\",\n          fontSize: 16,\n          height: 40,\n        },\n        outlinedPrimary: {\n          borderColor: \"rgb(29, 161, 243)\",\n        },\n        containedSecondary: {},\n      },\n      MuiFilledInput: {\n        underline: {\n          \"&:after\": {\n            borderBottomWidth: \"2px\",\n          },\n          \"&:before\": {\n            borderColor: \"#000\",\n            borderBottomWidth: \"2px\",\n          },\n        },\n        input: {\n          backgroundColor: \"rgb(245, 248, 250)\",\n        },\n      },\n      MuiDialogActions: {\n        root: {\n          marginRight: 8,\n        },\n      },\n      MuiDialogTitle: {\n        root: {\n          padding: \".5rem .5rem .5rem 1.5rem\",\n          \"& h2\": {\n            display: \"flex\",\n            alignItems: \"center\",\n          },\n          \"& button\": {\n            marginLeft: \"auto\",\n          },\n        },\n      },\n    },\n  },\n  ruRU,\n);\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { ThemeProvider } from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport { App } from \"./App\";\nimport { store } from \"./store\";\nimport theme from \"./theme\";\n\nimport \"assets/styles/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}