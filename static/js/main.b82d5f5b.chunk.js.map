{"version":3,"sources":["store/ducks/manage/actionCreators.ts","components/UI/Fields/Input/index.tsx","components/UI/Dialog/index.tsx","utils/getAccountType.ts","store/ducks/auth/state.ts","store/ducks/auth/actionCreators.ts","components/Layout/Navbar/SettingsDialog.tsx","constants/BREAKPOINTS.ts","utils/isAuthorized.ts","store/ducks/owner/actionCreators.ts","store/ducks/manage/selectors.ts","components/Layout/Navbar/index.tsx","assets/img/logo.svg","components/Layout/Sidebar/constants.ts","components/Layout/Sidebar/index.tsx","components/Layout/index.tsx","components/Layout/Auth.tsx","components/Pages/Error/index.tsx","store/ducks/auth/selectors.ts","components/Pages/Auth/index.tsx","components/UI/Loading/index.tsx","components/UI/Card/index.tsx","utils/getPrice.ts","components/Pages/Home/AdminHome/index.tsx","components/UI/Status/index.tsx","components/UI/TableWrapper/Row.tsx","components/UI/TableWrapper/index.tsx","components/Pages/Home/TerminalsTable/NewDialog.tsx","components/Pages/Home/TerminalsTable/EditDialogForm.tsx","components/Pages/Home/TerminalsTable/EditDialog.tsx","components/Pages/Home/TerminalsTable/index.tsx","components/Pages/Home/TerminalsTable/utilsTable.ts","components/Pages/Home/PartnerHome/PayoutDialog.tsx","components/Pages/Home/PartnerHome/index.tsx","components/Pages/Home/index.tsx","components/Pages/Partners/PartnersTable/NewDialog.tsx","store/ducks/owner/selectors.ts","components/Pages/Partners/PartnersTable/index.tsx","components/Pages/Partners/PartnersTable/utilsTable.ts","components/Pages/Partners/index.tsx","components/Pages/Partners/Partner.tsx","components/Pages/Payments/PaymentsTable/EditDialog.tsx","components/Pages/Payments/PaymentsTable/index.tsx","components/Pages/Payments/PaymentsTable/utilsTable.ts","components/Pages/Orders/OrdersTable/index.tsx","components/Pages/Orders/OrdersTable/utilsTable.ts","components/Pages/Finances/index.tsx","components/Pages/Cards/CardsTable/NewDialog.tsx","components/Pages/Cards/CardsTable/EditDialog.tsx","components/Pages/Cards/CardsTable/utilsTable.ts","store/ducks/manage/state.ts","components/Pages/Cards/CardsTable/index.tsx","constants/ROUTES.ts","components/Pages/Orders/index.tsx","components/Pages/Payments/index.tsx","components/Pages/Cards/index.tsx","App.tsx","store/ducks/auth/reducer.ts","store/ducks/manage/reducer.ts","store/ducks/owner/state.ts","store/ducks/owner/reducer.ts","store/rootReducer.ts","utils/errorHandler.ts","plugins/axios.ts","api/constants.ts","api/auth.ts","store/ducks/auth/saga.ts","api/manage.ts","store/ducks/manage/saga.ts","api/owner.ts","store/ducks/owner/saga.ts","store/sagas.ts","store/index.ts","theme.ts","index.tsx"],"names":["ManageActionsTypes","Input","control","name","defaultValue","type","label","error","helperText","required","fullWidth","maxLength","autoComplete","autoFocus","render","field","TextField","variant","margin","inputProps","value","memo","Dialog","open","handleClose","title","form","children","onClose","DialogTitle","IconButton","onClick","Close","DialogContent","dividers","DialogActions","Button","color","getAccountType","Status","AuthActionsTypes","setShops","payload","SET_SHOPS","refreshKey","KEY_REFRESH","SettingsDialog","user","dispatch","useDispatch","defaultValues","email","oldPassword","newPassword","useForm","handleSubmit","watch","reset","useState","errors","setErrors","useEffect","id","onSubmit","length","prev","password","CHANGE_PASSWORD","test","trim","action","CHANGE_NAME_EMAIL","changeNameWithEmail","BREAKPOINTS","isAuthorized","Boolean","localStorage","getItem","OwnerActionsTypes","setAuthStatus","SET_STATUS","selectUser","state","manage","selectShops","shops","useStyles","makeStyles","theme","toolbar","paddingRight","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","display","flexGrow","login","Navbar","handleDrawerOpen","route","s","history","useHistory","useSelector","dialogOpen","setDialogOpen","menu","setMenu","handleMenuClose","handleLogout","LOGOUT","push","FETCH_USER","access","findIndex","role","AppBar","position","className","clsx","Toolbar","edge","Typography","noWrap","window","innerWidth","event","currentTarget","ExitToApp","Menu","anchorEl","keepMounted","MenuItem","AccountCircle","MENU_ADMIN","path","icon","Dashboard","People","List","Receipt","Payment","AttachMoney","MENU_MODERATOR","MENU_PARTNER","toolbarIcon","alignItems","justifyContent","padding","mixins","logo","maxWidth","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","content","height","overflow","container","paddingTop","paddingBottom","link","Sidebar","handleDrawerClose","routeName","menuItems","Drawer","classes","paper","src","Logo","alt","ChevronLeft","Divider","map","item","i","to","ListItem","button","selected","ListItemIcon","ListItemText","primary","root","appBarSpacer","DefaultLayout","setOpen","Container","flexDirection","marginTop","LayoutAuth","component","Error","code","message","size","selectStatus","auth","status","avatar","backgroundColor","palette","main","submit","spinner","Auth","AuthStatus","Avatar","Lock","noValidate","LOGIN","disabled","CircularProgress","Loading","depositContext","flex","Card","text","Paper","gutterBottom","getPrice","toString","replace","AdminHome","Grid","xs","md","lg","borderRadius","transform","success","green","A400","processing","yellow","red","data","Tooltip","placement","cell","pointer","cursor","TableRow","row","onRowClick","e","hover","columns","column","TableCell","boxShadow","tableHeader","paddingLeft","search","getSearchLabel","TableWrapper","headers","rows","searchBy","rowsPerPage","setRowsPerPage","page","setPage","searchText","setSearchText","rowsCopy","setRowsCopy","results","filter","find","col","toLowerCase","includes","onChange","target","TableContainer","Table","TableHead","TableBody","slice","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","NewDialog","siteURL","match","ADD_SHOP","EditDialogForm","shop","failURL","successURL","webhookURL","isLink","extraSettings","setExtraSettings","EDIT_SHOP","FormControlLabel","Switch","checked","Collapse","in","startIcon","Delete","confirm","DELETE_SHOP","style","EditDialog","selectShop","stats","setStats","period","setPeriod","handlePickStats","innerText","dense","Refresh","publicKey","webhookSecretKey","aria-controls","aria-haspopup","Equalizer","TerminalsTable","items","createDate","Date","toLocaleDateString","getRows","openNew","setOpenNew","editID","setEditID","Add","undefined","currencies","PayoutDialog","balance","currency","setCurrency","amount","wallet","coin","validate","Number","select","option","PartnerHome","payoutOpen","setPayoutOpen","Link","href","Home","setPartners","SET_PARTNERS","setCards","SET_CARDS","ADD_PARTNER","selectPartners","owner","partners","selectCards","cards","PartnersTable","commission","FETCH_PARTNERS","Partners","PartnerPage","params","partner","selectPartner","marginBottom","sm","DELETE_PARTNER","PowerSettingsNew","ButtonGroup","Clear","Check","PaymentsTable","ip","now","OrdersTable","description","cardNumber","mm","yy","cvv","ADD_CARD","card","selectCard","comment","dayTransactions","monthTransactions","daySum","monthSum","DELETE_CARD","parseExpirationDate","CardsTable","FETCH_CARDS","ROUTES","layout","LayoutDefault","exact","textAlign","light","App","Layout","props","from","initAuth","accessToken","NEVER","authReducer","produce","draft","AUTHORIZING","UNAUTHORIZED","removeItem","SET_TOKEN","AUTHORIZED","initManage","manageReducer","SET_USER","LOADING","index","splice","SET_KEY","key","Object","keys","ownerReducer","rootReducer","combineReducers","errorHandler","console","log","response","alert","axios","interceptors","request","use","config","API_URL","API_AUTH","post","token","doLogin","authSaga","values","call","setItem","put","ERROR","takeEvery","API_MANAGE","get","changePassword","fetchUser","fetchShops","addShop","editShop","deleteShop","manageSaga","location","reload","all","FETCH_SHOPS","API_OWNER","list","fetchPartners","addPartner","deletePartner","fetchCards","addCard","deleteCard","ownerSaga","rootSaga","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","createMuiTheme","typography","fontFamily","dark","contrastText","secondary","background","default","overrides","MuiButton","textTransform","fontSize","outlinedPrimary","borderColor","containedSecondary","MuiFilledInput","underline","borderBottomWidth","input","MuiDialogActions","MuiDialogTitle","ruRU","ReactDOM","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.b82d5f5b.chunk.js","sourcesContent":["import { Action } from \"redux\";\nimport { IShop, IUser } from \"./state\";\n\nexport enum ManageActionsTypes {\n  CHANGE_NAME_EMAIL = \"manage/CHANGE_NAME_EMAIL\",\n  CHANGE_PASSWORD = \"manage/CHANGE_PASSWORD\",\n\n  SET_USER = \"manage/SET_USER\",\n  FETCH_USER = \"manage/FETCH_USER\",\n\n  SET_SHOPS = \"manage/SET_SHOPS\",\n  FETCH_SHOPS = \"manage/FETCH_SHOPS\",\n  ADD_SHOP = \"manage/ADD_SHOP\",\n  EDIT_SHOP = \"manage/EDIT_SHOP\",\n  DELETE_SHOP = \"manage/DELETE_SHOP\",\n\n  KEY_REFRESH = \"manage/KEY_REFRESH\",\n  SET_KEY = \"manage/SET_KEY\",\n}\n\n// ACTIONS TYPES\nexport interface IChangeNameWithEmail extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.CHANGE_NAME_EMAIL;\n  payload: { name: string; email: string };\n}\nexport interface IChangePassword extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.CHANGE_PASSWORD;\n  payload: { oldPassword: string; newPassword: string };\n}\n\nexport interface IFetchUser extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.FETCH_USER;\n}\nexport interface ISetUserAction extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.SET_USER;\n  payload: IUser;\n}\n\nexport interface IFetchShops extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.FETCH_SHOPS;\n}\nexport interface ISetShops extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.SET_SHOPS;\n  payload: IShop[];\n}\nexport interface IAddShop extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.ADD_SHOP;\n  payload: { name: string; siteURL: string };\n}\n\nexport interface IEditShop extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.EDIT_SHOP;\n  payload: { id: number; name: string; failURL: string; successURL: string; webhookURL: string };\n}\nexport interface IDeleteShop extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.DELETE_SHOP;\n  payload: IShop[\"id\"];\n}\n\nexport interface IRefreshKey extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.KEY_REFRESH;\n  payload: { id: IShop[\"id\"]; value: \"publicKey\" | \"webhookSecretKey\" };\n}\nexport interface ISetKey extends Action<ManageActionsTypes> {\n  type: ManageActionsTypes.SET_KEY;\n  payload: { id: IShop[\"id\"]; [key: string]: any };\n}\n\n// ACTIONS\nexport const changeNameWithEmail = (payload: IChangeNameWithEmail[\"payload\"]): IChangeNameWithEmail => ({\n  type: ManageActionsTypes.CHANGE_NAME_EMAIL,\n  payload,\n});\nexport const changePassword = (payload: IChangePassword[\"payload\"]): IChangePassword => ({\n  type: ManageActionsTypes.CHANGE_PASSWORD,\n  payload,\n});\n\nexport const fetchUser = (): IFetchUser => ({\n  type: ManageActionsTypes.FETCH_USER,\n});\nexport const setUser = (payload: IUser): ISetUserAction => ({\n  type: ManageActionsTypes.SET_USER,\n  payload,\n});\n\nexport const fetchShops = (): IFetchShops => ({\n  type: ManageActionsTypes.FETCH_SHOPS,\n});\nexport const setShops = (payload: IShop[]): ISetShops => ({\n  type: ManageActionsTypes.SET_SHOPS,\n  payload,\n});\nexport const addShop = (payload: IAddShop[\"payload\"]): IAddShop => ({\n  type: ManageActionsTypes.ADD_SHOP,\n  payload,\n});\nexport const editShop = (payload: IEditShop[\"payload\"]): IEditShop => ({\n  type: ManageActionsTypes.EDIT_SHOP,\n  payload,\n});\nexport const deleteShop = (payload: IDeleteShop[\"payload\"]): IDeleteShop => ({\n  type: ManageActionsTypes.DELETE_SHOP,\n  payload,\n});\n\nexport const refreshKey = (payload: IRefreshKey[\"payload\"]): IRefreshKey => ({\n  type: ManageActionsTypes.KEY_REFRESH,\n  payload,\n});\nexport const setKey = (payload: ISetKey[\"payload\"]): ISetKey => ({\n  type: ManageActionsTypes.SET_KEY,\n  payload,\n});\n\nexport type ManageActions =\n  | IChangeNameWithEmail\n  | IChangePassword\n  | IFetchUser\n  | ISetUserAction\n  | IFetchShops\n  | ISetShops\n  | IAddShop\n  | IEditShop\n  | IDeleteShop\n  | IRefreshKey\n  | ISetKey;\n","import { FC, memo } from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport { Control } from \"react-hook-form/dist/types/form\";\nimport { TextField } from \"@material-ui/core\";\n\ninterface Props {\n  control: Control<any>;\n  name: string;\n  defaultValue?: string | number;\n  type?: string;\n  label?: string;\n  error?: any;\n  variant?: string;\n  margin?: string;\n  helperText?: any;\n  required?: boolean;\n  fullWidth?: boolean;\n  maxLength?: number;\n  autoComplete?: string;\n  autoFocus?: boolean;\n}\n\nconst Input: FC<Props> = ({\n  control,\n  name,\n  defaultValue = \"\",\n  type = \"text\",\n  label,\n  error,\n  helperText,\n  required,\n  fullWidth = true,\n  maxLength,\n  autoComplete,\n  autoFocus,\n}) => {\n  return (\n    <Controller\n      name={name}\n      control={control}\n      defaultValue={defaultValue}\n      render={({ field }) => (\n        <TextField\n          label={label}\n          type={type}\n          variant=\"outlined\"\n          margin=\"normal\"\n          error={error}\n          required={required}\n          helperText={helperText}\n          autoComplete={autoComplete}\n          autoFocus={autoFocus}\n          fullWidth={fullWidth}\n          inputProps={{\n            maxLength,\n          }}\n          {...field}\n          // убирает warning в консоле\n          value={field.value || \"\"}\n        />\n      )}\n    />\n  );\n};\n\nexport default memo(Input);\n","import { FC, memo } from \"react\";\n\nimport { Dialog as MuiDialog, DialogContent, DialogActions, DialogTitle, IconButton, Button } from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\n\ninterface Props {\n  open: boolean;\n  handleClose: () => void;\n  title?: any;\n  form?: string;\n  children: any;\n}\n\nconst Dialog: FC<Props> = ({ open, handleClose, title, form, children }) => {\n  return (\n    <MuiDialog onClose={handleClose} open={open}>\n      {title && (\n        <DialogTitle>\n          {title}\n          <IconButton onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n      )}\n      <DialogContent dividers>{children}</DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"default\">\n          Закрыть\n        </Button>\n        {form && (\n          <Button type=\"submit\" form={form} color=\"primary\">\n            Сохранить\n          </Button>\n        )}\n      </DialogActions>\n    </MuiDialog>\n  );\n};\n\nexport default memo(Dialog);\n","export const getAccountType = (type: number): string => {\n  switch (type) {\n    case 1:\n      return \"Партнер\";\n    case 2:\n      return \"Модератор\";\n    case 3:\n      return \"Владелец\";\n    default:\n      return \"\";\n  }\n};\n","export enum Status {\n  AUTHORIZING = \"AUTHORIZING\",\n  AUTHORIZED = \"AUTHORIZED\",\n  UNAUTHORIZED = \"UNAUTHORIZED\",\n  ERROR = \"ERROR\",\n  NEVER = \"NEVER\",\n}\n\nexport interface ILogin {\n  email: string;\n  password: string;\n}\n\nexport interface IToken {\n  accessToken: string;\n  status: Status;\n}\n\nexport type IAuth = ILogin & IToken;\n","import { Action } from \"redux\";\nimport { Status, ILogin } from \"./state\";\n\nexport enum AuthActionsTypes {\n  LOGIN = \"auth/LOGIN\",\n  LOGOUT = \"auth/LOGOUT\",\n  SET_STATUS = \"auth/SET_STATUS\",\n  SET_TOKEN = \"auth/SET_TOKEN\",\n}\n\n// ACTIONS TYPES\ninterface ILoginActionPayload extends ILogin {\n  history: any;\n}\nexport interface ILoginAction extends Action<AuthActionsTypes> {\n  type: AuthActionsTypes.LOGIN;\n  payload: ILoginActionPayload;\n}\nexport interface ILogoutAction extends Action<AuthActionsTypes> {\n  type: AuthActionsTypes.LOGOUT;\n}\n\nexport interface IAuthStatus extends Action<AuthActionsTypes> {\n  type: AuthActionsTypes.SET_STATUS;\n  payload: Status;\n}\nexport interface ISetAccessToken extends Action<AuthActionsTypes> {\n  type: AuthActionsTypes.SET_TOKEN;\n  payload: string;\n}\n\n// ACTIONS\nexport const login = (payload: ILoginActionPayload): ILoginAction => ({\n  type: AuthActionsTypes.LOGIN,\n  payload,\n});\nexport const logout = (): ILogoutAction => ({\n  type: AuthActionsTypes.LOGOUT,\n});\n\nexport const setAuthStatus = (payload: Status): IAuthStatus => ({\n  type: AuthActionsTypes.SET_STATUS,\n  payload,\n});\nexport const setAccessToken = (payload: string): ISetAccessToken => ({\n  type: AuthActionsTypes.SET_TOKEN,\n  payload,\n});\n\nexport type AuthActions = ILoginAction | ILogoutAction | IAuthStatus | ISetAccessToken;\n","import { FC, ReactElement, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n\nimport Input from \"components/UI/Fields/Input\";\nimport Dialog from \"components/UI/Dialog\";\n\nimport { getAccountType } from \"utils/getAccountType\";\nimport { IManage } from \"store/ducks/manage/state\";\nimport { changeNameWithEmail, changePassword } from \"store/ducks/manage/actionCreators\";\n\ninterface Props {\n  open: boolean;\n  handleClose: () => void;\n  user: IManage[\"user\"];\n}\n\ninterface IDefaultValues {\n  name: string;\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n}\n\nexport const SettingsDialog: FC<Props> = ({ open, handleClose, user }): ReactElement => {\n  const dispatch = useDispatch();\n\n  const defaultValues: IDefaultValues = {\n    name: user.name,\n    email: user.email,\n    oldPassword: \"\",\n    newPassword: \"\",\n  };\n  const { control, handleSubmit, watch, reset } = useForm<IDefaultValues>({\n    defaultValues,\n  });\n\n  const [errors, setErrors] = useState<any>({});\n\n  const name = watch(\"name\");\n  const email = watch(\"email\");\n  const oldPassword = watch(\"oldPassword\");\n  const newPassword = watch(\"newPassword\");\n\n  const onSubmit = () => {\n    setErrors({});\n    // проверка на пароль должна быть выше\n\n    if (oldPassword) {\n      // если длина пароля менее 8 или более 50 символов\n      if (oldPassword.length < 8 || oldPassword.length > 50) {\n        setErrors((prev: any) => ({\n          ...prev,\n          password: \"Минимальная длина пароля 8 символов, максимальная 50\",\n        }));\n        return;\n      }\n\n      // если пароли не совпадают\n      if (oldPassword !== newPassword) {\n        setErrors((prev: any) => ({\n          ...prev,\n          password: \"Пароли должны совпадать\",\n        }));\n        return;\n      }\n\n      dispatch(changePassword({ oldPassword, newPassword }));\n      reset({\n        oldPassword: \"\",\n        newPassword: \"\",\n      });\n    }\n\n    // если поля изменились\n    if (name !== defaultValues.name || email !== defaultValues.email) {\n      // если имя соджержит менее 3 символов и в строке присутствуют числа\n      if (name.length < 3 || /\\d/.test(name.trim())) {\n        setErrors((prev: any) => ({\n          ...prev,\n          name: \"Имя не должно содержать цифры и должно быть не менее 3 буквенных символов\",\n        }));\n      }\n\n      // если поле пустое или не соответствует паттерну email@example.com\n      if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) {\n        setErrors((prev: any) => ({\n          ...prev,\n          email: \"Неверный формат почты\",\n        }));\n        return;\n      }\n\n      const action = dispatch(changeNameWithEmail({ name, email }));\n      // ресет, чтобы при открытии диалогового данные были актуальными\n      reset({\n        name: action.payload.name,\n        email: action.payload.email,\n      });\n    }\n\n    setErrors({});\n    handleClose();\n  };\n\n  // подстановка асинхронных данных пользователя в поля формы\n  useEffect(() => {\n    reset(user);\n  }, [reset, user]);\n\n  return (\n    <Dialog\n      handleClose={handleClose}\n      open={open}\n      title={`Аккаунт типа ${getAccountType(user.type)}`}\n      form=\"accountForm\">\n      <form id=\"accountForm\" onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          control={control}\n          name=\"name\"\n          label=\"Имя\"\n          type=\"text\"\n          defaultValue={user.name}\n          error={!!errors.name}\n          helperText={errors?.name}\n          autoFocus\n        />\n        <Input\n          control={control}\n          name=\"email\"\n          label=\"Email\"\n          type=\"text\"\n          defaultValue={user.email}\n          error={!!errors.email}\n          helperText={errors?.email}\n        />\n        <Input\n          control={control}\n          name=\"oldPassword\"\n          label=\"Старый пароль\"\n          type=\"password\"\n          error={!!errors.password}\n          helperText={errors?.password}\n        />\n        <Input\n          control={control}\n          name=\"newPassword\"\n          label=\"Новый пароль\"\n          type=\"password\"\n          error={!!errors.password}\n          helperText={errors?.password}\n        />\n      </form>\n    </Dialog>\n  );\n};\n","interface IBreakpoint {\n  [key: string]: number;\n}\n\nexport const BREAKPOINTS: IBreakpoint = {\n  lg: 1100,\n  md: 960,\n  sm: 768,\n  xs: 560,\n};\n","export const isAuthorized = (): boolean => {\n  // TODO: проверку токена на бекенде\n  return Boolean(localStorage.getItem(\"token\"));\n};\n","import { Action } from \"redux\";\nimport { ICard, IPartner } from \"./state\";\n\nexport enum OwnerActionsTypes {\n  FETCH_PARTNERS = \"manage/FETCH_PARTNERS\",\n  SET_PARTNERS = \"manage/SET_PARTNERS\",\n  ADD_PARTNER = \"manage/ADD_PARTNER\",\n  DELETE_PARTNER = \"manage/DELETE_PARTNER\",\n\n  FETCH_CARDS = \"manage/FETCH_CARDS\",\n  SET_CARDS = \"manage/SET_CARDS\",\n  ADD_CARD = \"manage/ADD_CARD\",\n  DELETE_CARD = \"manage/DELETE_CARD\",\n}\n\n// ACTIONS TYPES\nexport interface IFetchPartners extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.FETCH_PARTNERS;\n}\nexport interface ISetPartners extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.SET_PARTNERS;\n  payload: IPartner[];\n}\nexport interface IAddPartner extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.ADD_PARTNER;\n  payload: { name: string; email: string; password: string };\n}\nexport interface IDeletePartner extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.DELETE_PARTNER;\n  payload: IPartner[\"id\"];\n}\n\nexport interface IFetchCards extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.FETCH_CARDS;\n}\nexport interface ISetCards extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.SET_CARDS;\n  payload: ICard[];\n}\nexport interface IAddCard extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.ADD_CARD;\n  payload: { cardNumber: string; mm: string; yy: string; cvv: string };\n}\nexport interface IDeleteCard extends Action<OwnerActionsTypes> {\n  type: OwnerActionsTypes.DELETE_CARD;\n  payload: ICard[\"id\"];\n}\n\n// ACTIONS\nexport const fetchPartners = (): IFetchPartners => ({\n  type: OwnerActionsTypes.FETCH_PARTNERS,\n});\nexport const setPartners = (payload: IPartner[]): ISetPartners => ({\n  type: OwnerActionsTypes.SET_PARTNERS,\n  payload,\n});\nexport const addPartner = (payload: IAddPartner[\"payload\"]): IAddPartner => ({\n  type: OwnerActionsTypes.ADD_PARTNER,\n  payload,\n});\nexport const deletePartner = (payload: IDeletePartner[\"payload\"]): IDeletePartner => ({\n  type: OwnerActionsTypes.DELETE_PARTNER,\n  payload,\n});\n\nexport const fetchCards = (): IFetchCards => ({\n  type: OwnerActionsTypes.FETCH_CARDS,\n});\nexport const setCards = (payload: ICard[]): ISetCards => ({\n  type: OwnerActionsTypes.SET_CARDS,\n  payload,\n});\nexport const addCard = (payload: IAddCard[\"payload\"]): IAddCard => ({\n  type: OwnerActionsTypes.ADD_CARD,\n  payload,\n});\nexport const deleteCard = (payload: IDeleteCard[\"payload\"]): IDeleteCard => ({\n  type: OwnerActionsTypes.DELETE_CARD,\n  payload,\n});\n\nexport type OwnerActions =\n  | IFetchPartners\n  | ISetPartners\n  | IAddPartner\n  | IDeletePartner\n  | IFetchCards\n  | ISetCards\n  | IAddCard\n  | IDeleteCard;\n","import { RootState } from \"store/rootReducer\";\nimport { IManage, IShop } from \"./state\";\n\nexport const selectUser = (state: RootState): IManage[\"user\"] => state.manage.user;\nexport const selectShops = (state: RootState): IShop[] => state.manage.user.shops;\nexport const selectShop = (state: RootState, id: number): IShop | undefined =>\n  state.manage.user.shops.find(shop => shop.id === id);\n","import { FC, ReactElement, memo, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport clsx from \"clsx\";\n\nimport { makeStyles, AppBar, Toolbar, Typography, IconButton, Menu, MenuItem, Button } from \"@material-ui/core\";\nimport { Menu as MenuIcon, AccountCircle, ExitToApp } from \"@material-ui/icons\";\nimport { SettingsDialog } from \"./SettingsDialog\";\n\nimport { BREAKPOINTS } from \"constants/BREAKPOINTS\";\nimport { IRoute } from \"constants/ROUTES\";\nimport { isAuthorized } from \"utils/isAuthorized\";\n\nimport { Status } from \"store/ducks/auth/state\";\nimport { logout, setAuthStatus } from \"store/ducks/auth/actionCreators\";\nimport { selectUser } from \"store/ducks/manage/selectors\";\nimport { fetchUser } from \"store/ducks/manage/actionCreators\";\n\ninterface Props {\n  open: boolean;\n  handleDrawerOpen: () => void;\n  route?: IRoute;\n}\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    paddingRight: 24,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  login: {\n    marginLeft: \"auto\",\n  },\n}));\n\nconst Navbar: FC<Props> = ({ open, handleDrawerOpen, route }): ReactElement => {\n  const s = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [menu, setMenu] = useState<null | HTMLElement>(null);\n\n  const handleMenuOpen = (event: React.MouseEvent<HTMLButtonElement>) => setMenu(event.currentTarget);\n  const handleMenuClose = () => setMenu(null);\n\n  const handleDialogOpen = () => {\n    handleMenuClose();\n    setDialogOpen(true);\n  };\n  const handleDialogClose = () => {\n    handleMenuClose();\n    setDialogOpen(false);\n  };\n\n  const handleLogout = () => {\n    handleMenuClose();\n    dispatch(logout());\n    history.push(\"/auth\");\n  };\n\n  useEffect(() => {\n    dispatch(fetchUser());\n  }, [dispatch]);\n\n  useEffect(() => {\n    isAuthorized() && dispatch(setAuthStatus(Status[\"AUTHORIZED\"]));\n  });\n\n  // Проверка на доступ юзера к роуту при его смене\n  useEffect(() => {\n    if (route?.access) {\n      route.access.findIndex(role => role === user.type) < 0 && history.push(\"/404\");\n    }\n  }, [route, history, user.type]);\n\n  return (\n    <AppBar position=\"absolute\" className={clsx(s.appBar, open && s.appBarShift)}>\n      <Toolbar className={s.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          onClick={handleDrawerOpen}\n          className={clsx(s.menuButton, open && s.menuButtonHidden)}>\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap className={s.title}>\n          {window.innerWidth > BREAKPOINTS.lg ? route?.name : !open ? route?.name : \"\"}\n        </Typography>\n        {user.email ? (\n          <Button onClick={handleMenuOpen} color=\"inherit\">\n            {user.email}\n          </Button>\n        ) : (\n          <IconButton edge=\"start\" color=\"inherit\" onClick={handleLogout}>\n            <ExitToApp />\n          </IconButton>\n        )}\n        <Menu id=\"simple-menu\" anchorEl={menu} keepMounted open={Boolean(menu)} onClose={handleMenuClose}>\n          <MenuItem onClick={handleDialogOpen}>\n            <AccountCircle />   Аккаунт\n          </MenuItem>\n          <MenuItem onClick={handleLogout}>\n            <ExitToApp />   Выход\n          </MenuItem>\n        </Menu>\n      </Toolbar>\n\n      <SettingsDialog open={dialogOpen} handleClose={handleDialogClose} user={user} />\n    </AppBar>\n  );\n};\n\nexport default memo(Navbar);\n","export default __webpack_public_path__ + \"static/media/logo.aeea5895.svg\";","import { Dashboard, People, Payment, Receipt, List, AttachMoney } from \"@material-ui/icons\";\n\nexport interface menuItem {\n  title: string;\n  path: string;\n  icon: any;\n}\n\nexport const MENU_ADMIN: menuItem[] = [\n  {\n    title: \"Главная\",\n    path: \"/\",\n    icon: Dashboard,\n  },\n  {\n    title: \"Партнеры\",\n    path: \"/partners\",\n    icon: People,\n  },\n  {\n    title: \"Список заказов\",\n    path: \"/orders\",\n    icon: List,\n  },\n  {\n    title: \"Выплаты\",\n    path: \"/payments\",\n    icon: Receipt,\n  },\n  {\n    title: \"Пулл карт\",\n    path: \"/cards\",\n    icon: Payment,\n  },\n  {\n    title: \"Учет финансов\",\n    path: \"/finances\",\n    icon: AttachMoney,\n  },\n];\n\nexport const MENU_MODERATOR: menuItem[] = [\n  {\n    title: \"Главная\",\n    path: \"/\",\n    icon: Dashboard,\n  },\n  {\n    title: \"Партнеры\",\n    path: \"/partners\",\n    icon: People,\n  },\n  {\n    title: \"Выплаты\",\n    path: \"/payments\",\n    icon: Receipt,\n  },\n];\n\nexport const MENU_PARTNER: menuItem[] = [\n  {\n    title: \"Главная\",\n    path: \"/\",\n    icon: Dashboard,\n  },\n];\n","import { FC, memo, ReactElement } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport clsx from \"clsx\";\n\nimport { makeStyles, Drawer, List, Divider, IconButton, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { ChevronLeft } from \"@material-ui/icons\";\nimport Logo from \"assets/img/logo.svg\";\n\nimport { selectUser } from \"store/ducks/manage/selectors\";\n\nimport { menuItem, MENU_ADMIN, MENU_MODERATOR, MENU_PARTNER } from \"./constants\";\n\ninterface Props {\n  open: boolean;\n  handleDrawerClose: () => void;\n  routeName?: string;\n}\n\nconst useStyles = makeStyles(theme => ({\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  logo: {\n    maxWidth: \"160px\",\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: 240,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  link: {\n    color: \"inherit\",\n  },\n}));\n\nconst Sidebar: FC<Props> = ({ open, handleDrawerClose, routeName }): ReactElement => {\n  const s = useStyles();\n  const user = useSelector(selectUser);\n  const menuItems =\n    user.type === 3 ? MENU_ADMIN : user.type === 2 ? MENU_MODERATOR : user.type === 1 ? MENU_PARTNER : [];\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: clsx(s.drawerPaper, !open && s.drawerPaperClose),\n      }}\n      open={open}>\n      <div className={s.toolbarIcon}>\n        <img className={s.logo} src={Logo} alt=\"logo\" />\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeft />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        {menuItems.map((item: menuItem, i: number) => (\n          <Link to={item.path} className={s.link} key={i}>\n            <ListItem button selected={routeName === item.title}>\n              <ListItemIcon>\n                <item.icon />\n              </ListItemIcon>\n              <ListItemText primary={item.title} />\n            </ListItem>\n          </Link>\n        ))}\n      </List>\n    </Drawer>\n  );\n};\n\nexport default memo(Sidebar);\n","import { FC, ReactElement, useState } from \"react\";\n\nimport { makeStyles, Container } from \"@material-ui/core\";\n\nimport Navbar from \"./Navbar\";\nimport Sidebar from \"./Sidebar\";\n\nimport { IRoute } from \"constants/ROUTES\";\nimport { BREAKPOINTS } from \"constants/BREAKPOINTS\";\n\ninterface Props {\n  route?: IRoute;\n  children?: any;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst DefaultLayout: FC = ({ route, children }: Props): ReactElement => {\n  const s = useStyles();\n  const [open, setOpen] = useState<boolean>(window.innerWidth > BREAKPOINTS.lg);\n\n  const handleDrawerOpen = () => setOpen(true);\n  const handleDrawerClose = () => setOpen(false);\n\n  return (\n    <div className={s.root}>\n      <Navbar open={open} handleDrawerOpen={handleDrawerOpen} route={route} />\n      <Sidebar open={open} handleDrawerClose={handleDrawerClose} routeName={route?.name} />\n\n      <main className={s.content}>\n        <div className={s.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={s.container}>\n          {children}\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nexport default DefaultLayout;\n","import { FC, ReactElement } from \"react\";\n\nimport { makeStyles, Container } from \"@material-ui/core\";\n\nimport { IRoute } from \"constants/ROUTES\";\n\ninterface Props {\n  route?: IRoute;\n  children?: any;\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(8),\n  },\n}));\n\nconst LayoutAuth: FC = ({ children }: Props): ReactElement => {\n  const s = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={s.paper}>{children}</div>\n    </Container>\n  );\n};\n\nexport default LayoutAuth;\n","import { FC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Button } from \"@material-ui/core\";\n\ninterface Props {\n  code: number;\n  message?: string;\n}\n\nconst Error: FC<Props> = ({ code, message }) => {\n  const history = useHistory();\n\n  const handleBack = () => history.push(\"/\");\n\n  return (\n    <>\n      <h1>Ошибка {code}</h1>\n      <p>{message}</p>\n      <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={handleBack}>\n        На главную\n      </Button>\n    </>\n  );\n};\n\nexport default Error;\n","import { RootState } from \"store/rootReducer\";\nimport { Status, IToken } from \"./state\";\n\nexport const selectAccessToken = (state: RootState): IToken[\"accessToken\"] => state.auth.accessToken;\nexport const selectStatus = (state: RootState): Status => state.auth.status;\n","import { FC, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n\nimport { makeStyles, Avatar, Button, Typography, CircularProgress } from \"@material-ui/core\";\nimport { Lock } from \"@material-ui/icons\";\n\nimport Input from \"components/UI/Fields/Input\";\n\nimport { isAuthorized } from \"utils/isAuthorized\";\nimport { login } from \"store/ducks/auth/actionCreators\";\nimport { selectStatus } from \"store/ducks/auth/selectors\";\n\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  spinner: {\n    color: \"white\",\n  },\n}));\n\nconst Auth: FC = () => {\n  const s = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const AuthStatus = useSelector(selectStatus);\n\n  const { control, handleSubmit, watch } = useForm();\n\n  const [errors, setErrors] = useState<any>({});\n\n  const email = watch(\"email\");\n  const password = watch(\"password\");\n\n  const onSubmit = (): void => {\n    // если поле пустое или не соответствует паттерну email@example.com\n    if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) {\n      setErrors((prev: any) => ({\n        ...prev,\n        email: \"Неверный формат почты\",\n      }));\n      return;\n    }\n\n    if (!password) {\n      setErrors((prev: any) => ({\n        ...prev,\n        password: \"Необходимо ввести пароль\",\n      }));\n      return;\n    }\n\n    if (password.length < 8 || password.length > 50) {\n      setErrors((prev: any) => ({\n        ...prev,\n        password: \"Минимальная длина пароля 8 символов, максимальная 50\",\n      }));\n      return;\n    }\n\n    dispatch(login({ email, password, history }));\n  };\n\n  useEffect(() => {\n    if (isAuthorized() || AuthStatus === \"AUTHORIZED\") history.push(\"/\");\n  }, [AuthStatus, history]);\n\n  return (\n    <>\n      <Avatar className={s.avatar}>\n        <Lock />\n      </Avatar>\n      <Typography variant=\"h5\">Авторизация</Typography>\n      <form className={s.form} noValidate onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          control={control}\n          name=\"email\"\n          label=\"Email\"\n          type=\"text\"\n          autoComplete=\"email\"\n          error={!!errors.email}\n          helperText={errors?.email}\n          autoFocus\n        />\n        <Input\n          control={control}\n          name=\"password\"\n          label=\"Пароль\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          error={!!errors.password}\n          helperText={errors?.password}\n          autoFocus\n        />\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={s.submit}\n          disabled={AuthStatus === \"AUTHORIZING\"}>\n          {AuthStatus === \"AUTHORIZING\" ? <CircularProgress size={20} className={s.spinner} /> : \"Войти\"}\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default Auth;\n","import { FC } from \"react\";\n\nimport { makeStyles, CircularProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  spinner: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n});\n\nexport const Loading: FC = () => {\n  const s = useStyles();\n\n  return <CircularProgress className={s.spinner} size={64} />;\n};\n","import { FC, memo } from \"react\";\n\nimport { makeStyles, Paper, Typography } from \"@material-ui/core\";\n\ninterface Props {\n  title: string;\n  text: string;\n  action?: any;\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n  depositContext: {\n    flex: 1,\n  },\n}));\n\nconst Card: FC<Props> = ({ title, text, action }) => {\n  const s = useStyles();\n\n  return (\n    <Paper className={s.paper}>\n      <Typography component=\"h2\" variant=\"h6\" color=\"primary\">\n        {title}\n      </Typography>\n      <Typography component=\"p\" variant=\"h4\" gutterBottom>\n        {text}\n      </Typography>\n      {action}\n    </Paper>\n  );\n};\n\nexport default memo(Card);\n","export const getPrice = (value: string | number = \"\") => `${value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} ₽`;\n","import { FC } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport Card from \"components/UI/Card\";\n\nimport { getPrice } from \"utils/getPrice\";\n\nexport const AdminHome: FC = () => {\n  return (\n    <>\n      <Grid item xs={12} md={6} lg={3}>\n        <Card title=\"Поступления за день\" text={getPrice(19600)} />\n      </Grid>\n      <Grid item xs={12} md={6} lg={3}>\n        <Card title=\"К выплате\" text={getPrice(9300)} />\n      </Grid>\n      <Grid item xs={12} md={6} lg={3}>\n        <Card title=\"Партнеры\" text=\"68\" />\n      </Grid>\n      <Grid item xs={12} md={6} lg={3}>\n        <Card title=\"Заказы\" text=\"196\" />\n      </Grid>\n    </>\n  );\n};\n","import { FC } from \"react\";\nimport clsx from \"clsx\";\n\nimport { makeStyles, Tooltip } from \"@material-ui/core\";\nimport { green, red, yellow } from \"@material-ui/core/colors\";\n\ninterface Props {\n  data: string;\n}\n\nconst useStyles = makeStyles(theme => ({\n  status: {\n    marginLeft: theme.spacing(1),\n    width: theme.spacing(1),\n    height: theme.spacing(1),\n    borderRadius: \"100%\",\n    \"&:hover\": {\n      transform: \"scale(1.25)\",\n    },\n  },\n  success: {\n    backgroundColor: green.A400,\n  },\n  processing: {\n    backgroundColor: yellow[600],\n  },\n  error: {\n    backgroundColor: red.A400,\n  },\n}));\n\nexport const Status: FC<Props> = ({ data }) => {\n  const s = useStyles();\n\n  return (\n    <Tooltip title={data} placement=\"right\">\n      <div\n        className={clsx(s.status, {\n          [s.success]: data === \"success\",\n          [s.processing]: data === \"processing\",\n          [s.error]: data === \"error\",\n        })}\n      />\n    </Tooltip>\n  );\n};\n","import { FC, memo } from \"react\";\nimport clsx from \"clsx\";\n\nimport { makeStyles, TableCell, TableRow as MuiTableRow } from \"@material-ui/core\";\nimport { Status } from \"components/UI/Status\";\n\nimport { ITableRow } from \"./types\";\n\ninterface Props {\n  row: ITableRow;\n  id: string | number | undefined;\n  onRowClick?: any | undefined;\n}\n\nconst useStyles = makeStyles({\n  cell: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  pointer: {\n    cursor: \"pointer\",\n  },\n});\n\nconst TableRow: FC<Props> = ({ row, id, onRowClick }) => {\n  const s = useStyles();\n\n  return (\n    <MuiTableRow onClick={e => onRowClick && onRowClick(e, id)} key={id} hover={Boolean(onRowClick)}>\n      {row.columns.map((column, i) => (\n        <TableCell\n          className={clsx({\n            [s.pointer]: Boolean(onRowClick),\n          })}\n          key={i}>\n          {column?.status ? (\n            <div className={s.cell}>\n              {<Status data={column.status} />}\n              {column.content}\n            </div>\n          ) : (\n            column.content\n          )}\n        </TableCell>\n      ))}\n    </MuiTableRow>\n  );\n};\n\nexport default memo(TableRow);\n","import { FC, memo, ReactElement, ChangeEvent, useState, useEffect } from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\n\nimport { ITableHeader } from \"./types\";\nimport { ITableRow } from \"./types\";\nimport {\n  Paper,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow as MuiTableRow,\n  TableHead,\n  TableCell,\n  TablePagination,\n  Typography,\n} from \"@material-ui/core\";\nimport TableRow from \"./Row\";\n\ninterface Props {\n  title?: any;\n  button?: ReactElement;\n  rows: ITableRow[];\n  headers: ITableHeader[];\n  searchBy?: string;\n  onRowClick?: (e: any, id: number) => void | undefined;\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    overflowX: \"auto\",\n    boxShadow: \"none\",\n  },\n  tableHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  title: {\n    marginRight: \"auto\",\n  },\n  search: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst getSearchLabel = (field: Props[\"searchBy\"]) => {\n  switch (field) {\n    case \"name\":\n      return \"имени\";\n    default:\n      break;\n  }\n};\n\nconst TableWrapper: FC<Props> = ({ title, button, headers, rows, searchBy, onRowClick }) => {\n  const s = useStyles();\n\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [page, setPage] = useState(0);\n  const [searchText, setSearchText] = useState(\"\");\n  const [rowsCopy, setRowsCopy] = useState<ITableRow[]>([]);\n\n  const handleChangePage = (e: any, newPage: number) => setPage(newPage);\n  const handleChangeRowsPerPage = (e: ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(e.target.value, 10));\n    setPage(0);\n  };\n\n  const handleSearch = (e: any) => setSearchText(e.target.value.toLowerCase());\n\n  useEffect(() => {\n    if (searchText.length) {\n      const results = rows.filter(row =>\n        row.columns.find(col => col.searchBy && col.searchBy.toLowerCase().includes(searchText)),\n      );\n      setRowsCopy(results);\n    } else {\n      setRowsCopy(rows);\n    }\n  }, [searchText, rows]);\n\n  return (\n    <>\n      {(title || button) && (\n        <div className={s.tableHeader}>\n          <Typography variant=\"h6\" className={s.title}>\n            {title}\n          </Typography>\n          {searchBy && (\n            <TextField\n              className={s.search}\n              variant=\"outlined\"\n              size=\"small\"\n              name=\"searchBy\"\n              label={`Поиск по ${getSearchLabel(searchBy)}`}\n              onChange={handleSearch}\n            />\n          )}\n          {button}\n        </div>\n      )}\n      <Paper className={s.container}>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <MuiTableRow>\n                {headers.map((column, i) => (\n                  <TableCell key={i}>{column.name}</TableCell>\n                ))}\n              </MuiTableRow>\n            </TableHead>\n\n            <TableBody>\n              {rowsCopy && rowsCopy.length > 0 ? (\n                rowsCopy\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, i) => (\n                    <TableRow\n                      row={row}\n                      id={row.columns.find(col => typeof col.content === \"number\")?.content}\n                      onRowClick={onRowClick}\n                      key={i}\n                    />\n                  ))\n              ) : rows?.length ? (\n                <MuiTableRow>\n                  <TableCell colSpan={100}>Ничего не найдено</TableCell>\n                </MuiTableRow>\n              ) : (\n                <MuiTableRow>\n                  <TableCell colSpan={100}>Данные загружаются или отсутствуют</TableCell>\n                </MuiTableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </>\n  );\n};\n\nexport default memo(TableWrapper);\n","import { FC, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n\nimport Dialog from \"components/UI/Dialog\";\nimport Input from \"components/UI/Fields/Input\";\n\nimport { addShop } from \"store/ducks/manage/actionCreators\";\n\ninterface Props {\n  open: boolean;\n  handleClose: () => void;\n}\n\ninterface IDefaultValues {\n  name: string;\n  siteURL: string;\n}\n\nexport const NewDialog: FC<Props> = ({ open, handleClose }) => {\n  const dispatch = useDispatch();\n\n  const defaultValues: IDefaultValues = {\n    name: \"\",\n    siteURL: \"\",\n  };\n  const { control, handleSubmit, watch } = useForm<IDefaultValues>({\n    defaultValues,\n  });\n\n  const [errors, setErrors] = useState<any>({});\n\n  const name = watch(\"name\");\n  const siteURL = watch(\"siteURL\");\n\n  const onSubmit = () => {\n    setErrors({});\n\n    if (name.length < 3) {\n      setErrors((prev: any) => ({\n        ...prev,\n        name: \"Имя должно содержать не менее 3 буквенных символов\",\n      }));\n    }\n\n    if (\n      !siteURL.match(\n        /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_.~#?&//=]*)?/gi,\n      )\n    ) {\n      setErrors((prev: any) => ({\n        ...prev,\n        siteURL: \"Неверный формат ссылки\",\n      }));\n      return;\n    }\n\n    dispatch(addShop({ name, siteURL }));\n    setErrors({});\n    handleClose();\n  };\n\n  return (\n    <Dialog open={open} handleClose={handleClose} title=\"Добавление терминала\" form=\"addShop\">\n      <form id=\"addShop\" onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          control={control}\n          name=\"name\"\n          label=\"Имя\"\n          type=\"text\"\n          defaultValue={defaultValues.name}\n          error={!!errors.name}\n          helperText={errors?.name}\n          autoFocus\n        />\n        <Input\n          control={control}\n          name=\"siteURL\"\n          label=\"Ссылка на сайт\"\n          type=\"text\"\n          defaultValue={defaultValues.siteURL}\n          error={!!errors.siteURL}\n          helperText={errors?.siteURL}\n        />\n      </form>\n    </Dialog>\n  );\n};\n","import { FC, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n\nimport { Button, Grid, FormControlLabel, Switch, Collapse } from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport Input from \"components/UI/Fields/Input\";\n\nimport { editShop, deleteShop } from \"store/ducks/manage/actionCreators\";\nimport { selectUser } from \"store/ducks/manage/selectors\";\n\ninterface Props {\n  id: number | null;\n  shop: any;\n  form: string;\n  handleClose: () => void;\n}\n\ninterface IDefaultValues {\n  name: string;\n  failURL: string;\n  successURL: string;\n  webhookURL: string;\n}\n\nexport const EditDialogForm: FC<Props> = ({ id, shop, form, handleClose }) => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  const defaultValues: IDefaultValues = {\n    name: \"\",\n    failURL: \"\",\n    successURL: \"\",\n    webhookURL: \"\",\n  };\n  const { control, handleSubmit, watch, reset } = useForm<IDefaultValues>({\n    defaultValues,\n  });\n\n  const [errors, setErrors] = useState<any>({});\n\n  const name = watch(\"name\");\n  const failURL = watch(\"failURL\");\n  const successURL = watch(\"successURL\");\n  const webhookURL = watch(\"webhookURL\");\n\n  const isLink = (field: string, value: string): boolean => {\n    if (\n      !value.match(\n        /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_.~#?&//=]*)?/gi,\n      )\n    ) {\n      setErrors((prev: any) => ({\n        ...prev,\n        [field]: \"Неверный формат ссылки\",\n      }));\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const onSubmit = () => {\n    setErrors({});\n\n    if (name.length < 3) {\n      setErrors((prev: any) => ({\n        ...prev,\n        name: \"Имя должно содержать не менее 3 буквенных символов\",\n      }));\n    }\n\n    isLink(\"failURL\", failURL);\n    isLink(\"successURL\", successURL);\n\n    // если прошла последняя проверка, отправляем запрос\n    if (id && isLink(\"webhookURL\", webhookURL)) {\n      dispatch(editShop({ id, name, failURL, successURL, webhookURL }));\n      setErrors({});\n      handleClose();\n    }\n  };\n\n  const handleDelete = () => {\n    if (id && window.confirm(`Вы действительно хотите удалить сайт ${name}?`)) {\n      handleClose();\n      dispatch(deleteShop(id));\n    }\n  };\n\n  const [extraSettings, setExtraSettings] = useState(false);\n\n  const handleToggleExtraSettings = () => setExtraSettings(prev => !prev);\n\n  // подстановка данных терминала в поля формы\n  useEffect(() => {\n    shop &&\n      reset({\n        name: shop.name,\n        failURL: shop.failURL,\n        successURL: shop.successURL,\n        webhookURL: shop.webhookURL,\n      });\n  }, [reset, shop]);\n\n  return (\n    <form id={form} onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        control={control}\n        name=\"successURL\"\n        label=\"Успешная оплата\"\n        type=\"text\"\n        defaultValue={defaultValues.successURL}\n        error={!!errors.successURL}\n        helperText={errors?.successURL}\n        autoFocus\n      />\n      <Input\n        control={control}\n        name=\"failURL\"\n        label=\"Неуспешная оплата\"\n        type=\"text\"\n        defaultValue={defaultValues.failURL}\n        error={!!errors.failURL}\n        helperText={errors?.failURL}\n        required\n      />\n      <Input\n        control={control}\n        name=\"webhookURL\"\n        label=\"Ссылка на вебхук\"\n        type=\"text\"\n        defaultValue={defaultValues.webhookURL}\n        error={!!errors.webhookURL}\n        helperText={errors?.webhookURL}\n      />\n      <Input\n        control={control}\n        name=\"name\"\n        label=\"Имя\"\n        type=\"text\"\n        defaultValue={defaultValues.name}\n        error={!!errors.name}\n        helperText={errors?.name}\n        required\n      />\n\n      {user.type === 3 && (\n        <>\n          <FormControlLabel\n            control={<Switch checked={extraSettings} onChange={handleToggleExtraSettings} />}\n            label=\"Расширенные настройки\"\n          />\n          <Collapse in={extraSettings}>\n            <Grid container alignItems=\"center\" spacing={1}>\n              <Grid xs={6} item>\n                <Input\n                  control={control}\n                  name=\"amountmin\"\n                  label=\"Минимальная сумма\"\n                  type=\"number\"\n                  // defaultValue={defaultValues.successURL}\n                  // error={!!errors.successURL}\n                  // helperText={errors?.successURL}\n                />\n              </Grid>\n              <Grid xs={6} item>\n                <Input\n                  control={control}\n                  name=\"amountmax\"\n                  label=\"Максимальная сумма\"\n                  type=\"number\"\n                  // defaultValue={defaultValues.webhookURL}\n                  // error={!!errors.webhookURL}\n                  // helperText={errors?.webhookURL}\n                />\n              </Grid>\n\n              <Grid xs={12} item>\n                <Input\n                  control={control}\n                  name=\"amountday\"\n                  label=\"Суточный лимит оборота\"\n                  type=\"number\"\n                  // defaultValue={defaultValues.successURL}\n                  // error={!!errors.successURL}\n                  // helperText={errors?.successURL}\n                />\n              </Grid>\n            </Grid>\n          </Collapse>\n        </>\n      )}\n      <Button\n        variant=\"outlined\"\n        color=\"secondary\"\n        startIcon={<Delete />}\n        onClick={handleDelete}\n        style={{ marginTop: \"1rem\" }}\n        fullWidth>\n        Удалить сайт\n      </Button>\n    </form>\n  );\n};\n","import { FC, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { List, ListItem, Button, Menu, MenuItem } from \"@material-ui/core\";\nimport { Refresh, Equalizer } from \"@material-ui/icons\";\nimport Dialog from \"components/UI/Dialog\";\nimport { Status } from \"components/UI/Status\";\nimport { EditDialogForm } from \"./EditDialogForm\";\n\nimport { getPrice } from \"utils/getPrice\";\n\nimport { RootState } from \"store/rootReducer\";\nimport { refreshKey } from \"store/ducks/manage/actionCreators\";\nimport { selectShop } from \"store/ducks/manage/selectors\";\n\ninterface Props {\n  id: number | null;\n  handleClose: () => void;\n}\n\nexport const EditDialog: FC<Props> = ({ id, handleClose }) => {\n  const dispatch = useDispatch();\n  const shop = useSelector((state: RootState) => id && (selectShop(state, id) as any));\n\n  const [stats, setStats] = useState<null | HTMLElement>(null);\n  const [period, setPeriod] = useState(\"за день\");\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => setStats(event.currentTarget);\n  const handlePickStats = (e: any) => {\n    e.currentTarget.innerText && setPeriod(e.currentTarget.innerText);\n    setStats(null);\n  };\n\n  const refreshPublicKey = () => id && dispatch(refreshKey({ id, value: \"publicKey\" }));\n  const refreshSecretKey = () => id && dispatch(refreshKey({ id, value: \"webhookSecretKey\" }));\n\n  return (\n    <Dialog\n      open={Boolean(id)}\n      handleClose={handleClose}\n      title={\n        <>\n          Редактирование сайта (id: {id})\n          <Status data={true ? \"success\" : shop?.status} />\n        </>\n      }\n      form=\"editSite\">\n      <List dense>\n        <Button startIcon={<Refresh />} title=\"Обновить\" onClick={refreshPublicKey}>\n          Публичный ключ\n        </Button>\n        {shop && shop.publicKey}\n        <Button startIcon={<Refresh />} title=\"Обновить\" onClick={refreshSecretKey}>\n          Секретный ключ\n        </Button>\n        {shop && shop.webhookSecretKey}\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} startIcon={<Equalizer />}>\n          Статистика {period}\n        </Button>\n        <Menu anchorEl={stats} keepMounted open={Boolean(stats)} onClose={handlePickStats}>\n          <MenuItem onClick={handlePickStats}>за день</MenuItem>\n          <MenuItem onClick={handlePickStats}>за месяц</MenuItem>\n          {/* <MenuItem onClick={handlePickStats}>за год</MenuItem> */}\n        </Menu>\n        <ListItem>Всего выставлено счетов: 3000</ListItem>\n        <ListItem>Из них оплачено всего: 1000</ListItem>\n        <ListItem>Входящий оборот: {getPrice(29400)}</ListItem>\n      </List>\n\n      <EditDialogForm id={id} shop={shop} form=\"editSite\" handleClose={handleClose} />\n    </Dialog>\n  );\n};\n","import { FC, ReactElement, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Paper, Button } from \"@material-ui/core\";\nimport { Add as AddIcon } from \"@material-ui/icons\";\nimport Table from \"components/UI/TableWrapper\";\nimport { NewDialog } from \"./NewDialog\";\nimport { EditDialog } from \"./EditDialog\";\n\nimport { getHeaders, getRows } from \"./utilsTable\";\nimport { selectShops, selectUser } from \"store/ducks/manage/selectors\";\n\nexport const TerminalsTable: FC = (): ReactElement => {\n  const shops = useSelector(selectShops);\n  const user = useSelector(selectUser);\n\n  const headers = getHeaders();\n  const rows = getRows(shops);\n\n  const [openNew, setOpenNew] = useState<boolean>(false);\n  const [editID, setEditID] = useState<number | null>(null);\n\n  const handleNewOpen = () => setOpenNew(true);\n  const handleNewClose = () => setOpenNew(false);\n\n  const onRowClick = (e: any, id: number) => setEditID(id);\n  const handleEditClose = () => setEditID(null);\n\n  return (\n    <Paper>\n      <Table\n        headers={headers}\n        rows={rows}\n        title=\"Список сайтов\"\n        button={\n          user.type === 1 ? (\n            <Button variant=\"outlined\" color=\"primary\" startIcon={<AddIcon />} onClick={handleNewOpen}>\n              Добавить\n            </Button>\n          ) : undefined\n        }\n        onRowClick={onRowClick}\n      />\n\n      {user.type === 1 && <NewDialog open={openNew} handleClose={handleNewClose} />}\n      <EditDialog id={editID} handleClose={handleEditClose} />\n    </Paper>\n  );\n};\n","import { ITableHeader, ITableRow } from \"components/UI/TableWrapper/types\";\nimport { IShop } from \"store/ducks/manage/state\";\n\nexport const getHeaders = (): ITableHeader[] => [\n  { name: \"\" },\n  { name: \"id\" },\n  { name: \"Имя\" },\n  { name: \"Ссылка\" },\n  { name: \"Cоздан\" },\n];\n\nexport const getRows = (items: IShop[]): ITableRow[] => {\n  return items.map(({ id, name, siteURL, createDate }: IShop) => ({\n    columns: [\n      {\n        status: \"success\",\n      },\n      {\n        content: id,\n      },\n      {\n        content: name,\n      },\n      {\n        content: siteURL,\n      },\n      {\n        content: new Date(createDate).toLocaleDateString(),\n      },\n    ],\n  }));\n};\n","import { FC, ChangeEvent, useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n// @ts-ignore\nimport { validate } from \"wallet-address-validator\";\n\nimport { Grid, TextField, MenuItem } from \"@material-ui/core\";\n\nimport Dialog from \"components/UI/Dialog\";\nimport Input from \"components/UI/Fields/Input\";\n\n// import { addPartner } from \"store/ducks/owner/actionCreators\";\n\ninterface Props {\n  open: boolean;\n  handleClose: () => void;\n  balance: number;\n}\n\ninterface IDefaultValues {\n  amount: string;\n  wallet: string;\n  coin: string;\n}\n\nconst currencies = [\n  {\n    value: \"BTC\",\n    label: \"฿\",\n  },\n  {\n    value: \"USDT\",\n    label: \"₮\",\n  },\n  {\n    value: \"ETH\",\n    label: \"⧫\",\n  },\n];\n\nexport const PayoutDialog: FC<Props> = ({ open, handleClose, balance }) => {\n  // const dispatch = useDispatch();\n  const [currency, setCurrency] = useState(\"BTC\");\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => setCurrency(e.target.value);\n\n  const defaultValues: IDefaultValues = {\n    amount: \"\",\n    wallet: \"\",\n    coin: \"\",\n  };\n  const { control, handleSubmit, watch } = useForm<IDefaultValues>({\n    defaultValues,\n  });\n\n  const [errors, setErrors] = useState<any>({});\n  const wallet = watch(\"wallet\");\n  const amount = watch(\"amount\");\n\n  const onSubmit = () => {\n    setErrors({});\n\n    if (currency === \"USDT\") {\n      if (!wallet.length) {\n        setErrors((prev: any) => ({\n          ...prev,\n          wallet: \"Неверный формат кошелька\",\n        }));\n        return;\n      }\n    } else {\n      if (!validate(wallet, currency)) {\n        setErrors((prev: any) => ({\n          ...prev,\n          wallet: \"Неверный формат кошелька\",\n        }));\n        return;\n      }\n    }\n\n    if (Number(amount) < 10) {\n      setErrors((prev: any) => ({\n        ...prev,\n        amount: \"Минимальный вывод от 10 ₽\",\n      }));\n      return;\n    }\n\n    if (Number(amount) > balance) {\n      setErrors((prev: any) => ({\n        ...prev,\n        amount: \"Сумма не может превышать баланс\",\n      }));\n      return;\n    }\n\n    if (window.confirm(`Вы действительно хотите создать заявку?`)) {\n      // dispatch(addPartner({ email, name, password }));\n      setErrors({});\n      handleClose();\n    }\n  };\n\n  return (\n    <Dialog open={open} handleClose={handleClose} title=\"Заявка на вывод средств\" form=\"payout\">\n      <form id=\"payout\" onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          control={control}\n          name=\"wallet\"\n          label=\"Кошелек\"\n          type=\"text\"\n          defaultValue={defaultValues.wallet}\n          error={!!errors.wallet}\n          helperText={errors?.wallet}\n          required\n        />\n        <Grid container spacing={1}>\n          <Grid item xs={12} md={6}>\n            <Input\n              control={control}\n              name=\"amount\"\n              label=\"Сумма\"\n              type=\"number\"\n              defaultValue={defaultValues.amount}\n              error={!!errors.amount}\n              helperText={errors?.amount}\n              required\n              autoFocus\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              label=\"Монета\"\n              value={currency}\n              onChange={handleChange}\n              variant=\"outlined\"\n              style={{ marginTop: 16 }}\n              select\n              required\n              fullWidth>\n              {currencies.map(option => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label} ({option.value})\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n        </Grid>\n      </form>\n    </Dialog>\n  );\n};\n","import { FC, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Grid, Link } from \"@material-ui/core\";\nimport Card from \"components/UI/Card\";\nimport { TerminalsTable } from \"../TerminalsTable\";\nimport { PayoutDialog } from \"./PayoutDialog\";\n\nimport { getPrice } from \"utils/getPrice\";\nimport { selectUser } from \"store/ducks/manage/selectors\";\n\nexport const PartnerHome: FC = () => {\n  const user = useSelector(selectUser);\n\n  const [payoutOpen, setPayoutOpen] = useState(false);\n  const handlePayoutClose = () => setPayoutOpen(false);\n  const handlePayoutOpen = () => setPayoutOpen(true);\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6} lg={3}>\n        <Card\n          title=\"Баланс\"\n          text={getPrice(user.balance)}\n          action={\n            <Link href=\"#\" onClick={handlePayoutOpen}>\n              Вывести\n            </Link>\n          }\n        />\n      </Grid>\n      <Grid item xs={12} md={6} lg={3}>\n        <Card title=\"Количество транзакций\" text=\"46\" />\n      </Grid>\n      <Grid item xs={12} md={6} lg={3}>\n        <Card title=\"Дневной оборот\" text={getPrice(10000)} />\n      </Grid>\n      <Grid item xs={12} md={6} lg={3}>\n        <Card title=\"Годовой оборот\" text={getPrice(200000)} />\n      </Grid>\n\n      <Grid item xs={12}>\n        <TerminalsTable />\n      </Grid>\n\n      <PayoutDialog open={payoutOpen} handleClose={handlePayoutClose} balance={user.balance} />\n    </Grid>\n  );\n};\n","import { FC } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { Loading } from \"components/UI/Loading\";\nimport { AdminHome } from \"./AdminHome\";\nimport { PartnerHome } from \"./PartnerHome\";\n\nimport { selectUser } from \"store/ducks/manage/selectors\";\n\nconst Home: FC = () => {\n  const user = useSelector(selectUser);\n\n  return (\n    <Grid container spacing={3}>\n      {user.type ? (\n        user.type === 3 ? (\n          <AdminHome />\n        ) : user.type === 2 ? (\n          <div>Moderator home page</div>\n        ) : (\n          <PartnerHome />\n        )\n      ) : (\n        <Loading />\n      )}\n    </Grid>\n  );\n};\n\nexport default Home;\n","import { FC, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n\nimport Dialog from \"components/UI/Dialog\";\nimport Input from \"components/UI/Fields/Input\";\n\nimport { addPartner } from \"store/ducks/owner/actionCreators\";\n\ninterface Props {\n  open: boolean;\n  handleClose: () => void;\n}\n\ninterface IDefaultValues {\n  email: string;\n  name: string;\n  password: string;\n}\n\nexport const NewDialog: FC<Props> = ({ open, handleClose }) => {\n  const dispatch = useDispatch();\n\n  const defaultValues: IDefaultValues = {\n    email: \"\",\n    name: \"\",\n    password: \"\",\n  };\n  const { control, handleSubmit, watch } = useForm<IDefaultValues>({\n    defaultValues,\n  });\n\n  const [errors, setErrors] = useState<any>({});\n\n  const email = watch(\"email\");\n  const name = watch(\"name\");\n  const password = watch(\"password\");\n\n  const onSubmit = () => {\n    setErrors({});\n\n    // если поле пустое или не соответствует паттерну email@example.com\n    if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) {\n      setErrors((prev: any) => ({\n        ...prev,\n        email: \"Неверный формат почты\",\n      }));\n      return;\n    }\n\n    if (name.length < 3) {\n      setErrors((prev: any) => ({\n        ...prev,\n        name: \"Имя должно содержать не менее 3 буквенных символов\",\n      }));\n    }\n\n    if (!password) {\n      setErrors((prev: any) => ({\n        ...prev,\n        password: \"Необходимо ввести пароль\",\n      }));\n      return;\n    }\n\n    if (password.length < 8 || password.length > 50) {\n      setErrors((prev: any) => ({\n        ...prev,\n        password: \"Минимальная длина пароля 8 символов, максимальная 50\",\n      }));\n      return;\n    }\n\n    dispatch(addPartner({ email, name, password }));\n    setErrors({});\n    handleClose();\n  };\n\n  return (\n    <Dialog open={open} handleClose={handleClose} title=\"Регистрация партнера\" form=\"addPartner\">\n      <form id=\"addPartner\" onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          control={control}\n          name=\"email\"\n          label=\"Email\"\n          type=\"text\"\n          defaultValue={defaultValues.email}\n          error={!!errors.email}\n          helperText={errors?.email}\n          required\n          autoFocus\n        />\n        <Input\n          control={control}\n          name=\"name\"\n          label=\"Имя\"\n          type=\"text\"\n          defaultValue={defaultValues.name}\n          error={!!errors.name}\n          helperText={errors?.name}\n          required\n        />\n        <Input\n          control={control}\n          name=\"password\"\n          label=\"Пароль\"\n          type=\"password\"\n          defaultValue={defaultValues.password}\n          error={!!errors.password}\n          helperText={errors?.password}\n          required\n        />\n      </form>\n    </Dialog>\n  );\n};\n","import { RootState } from \"store/rootReducer\";\nimport { ICard, IPartner } from \"./state\";\n\nexport const selectPartners = (state: RootState): IPartner[] => state.owner.partners;\nexport const selectPartner = (state: RootState, id: number): IPartner | undefined =>\n  state.owner.partners.find(partner => partner.id === id);\n\nexport const selectCards = (state: RootState): ICard[] => state.owner.cards;\nexport const selectCard = (state: RootState, id: number): ICard | undefined =>\n  state.owner.cards.find(card => card.id === id);\n","import { FC, ReactElement, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Button, Paper } from \"@material-ui/core\";\nimport { Add as AddIcon } from \"@material-ui/icons\";\nimport Table from \"components/UI/TableWrapper\";\nimport { NewDialog } from \"./NewDialog\";\n\nimport { getHeaders, getRows } from \"./utilsTable\";\nimport { selectPartners } from \"store/ducks/owner/selectors\";\nimport { fetchPartners } from \"store/ducks/owner/actionCreators\";\n\nexport const PartnersTable: FC = (): ReactElement => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const partners = useSelector(selectPartners);\n\n  const headers = getHeaders();\n  const rows = getRows(partners);\n\n  const [openNew, setOpenNew] = useState<boolean>(false);\n\n  const handleNewOpen = () => setOpenNew(true);\n  const handleNewClose = () => setOpenNew(false);\n\n  const onRowClick = (e: any, id: number) => history.push(`/partners/${id}`);\n\n  useEffect(() => {\n    dispatch(fetchPartners());\n  }, [dispatch]);\n\n  return (\n    <Paper>\n      <Table\n        headers={headers}\n        rows={rows}\n        title=\"Список партнеров\"\n        button={\n          <Button variant=\"outlined\" color=\"primary\" startIcon={<AddIcon />} onClick={handleNewOpen}>\n            Добавить\n          </Button>\n        }\n        onRowClick={onRowClick}\n        searchBy=\"name\"\n      />\n\n      <NewDialog open={openNew} handleClose={handleNewClose} />\n    </Paper>\n  );\n};\n","import { ITableHeader, ITableRow } from \"components/UI/TableWrapper/types\";\nimport { IPartner } from \"store/ducks/owner/state\";\n\nexport const getHeaders = (): ITableHeader[] => [\n  { name: \"\" },\n  { name: \"id\" },\n  { name: \"Имя\" },\n  { name: \"Email\" },\n  { name: \"Комиссия\" },\n  { name: \"Баланс\" },\n  { name: \"Дата создания\" },\n  { name: \"Комментарий\" },\n];\n\nexport const getRows = (items: IPartner[]): ITableRow[] => {\n  return items.map(({ id, name, email, commission, balance, createDate }: IPartner | any) => ({\n    columns: [\n      {\n        status: \"success\",\n      },\n      {\n        content: id,\n      },\n      {\n        searchBy: name,\n        content: name,\n      },\n      {\n        content: email,\n      },\n      {\n        content: commission || \"2%\",\n      },\n      {\n        content: balance,\n      },\n      {\n        content: new Date(createDate).toLocaleDateString(),\n      },\n      {\n        content: \"Это комментарий к партнеру\",\n      },\n    ],\n  }));\n};\n","import { FC } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { PartnersTable } from \"./PartnersTable\";\n\nconst Partners: FC = () => {\n  return (\n    <Grid item xs={12}>\n      <PartnersTable />\n    </Grid>\n  );\n};\n\nexport default Partners;\n","import { FC, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Location, History } from \"history\";\nimport { useForm } from \"react-hook-form\";\n\nimport { Button, Grid, Menu, MenuItem, List, ListItem, Typography } from \"@material-ui/core\";\nimport { Delete, Equalizer, PowerSettingsNew } from \"@material-ui/icons\";\nimport Input from \"components/UI/Fields/Input\";\nimport { TerminalsTable } from \"components/Pages/Home/TerminalsTable\";\n\nimport { getPrice } from \"utils/getPrice\";\n\nimport { RootState } from \"store/rootReducer\";\nimport { deletePartner } from \"store/ducks/owner/actionCreators\";\nimport { selectPartner } from \"store/ducks/owner/selectors\";\n\ninterface RouteProps<P> {\n  match: { params: P };\n  location: Location;\n  history: History;\n}\n\ninterface Props {\n  id: string;\n}\n\ninterface IDefaultValues {\n  email: string;\n  password: string;\n}\n\nconst PartnerPage: FC<RouteProps<Props>> = ({ match }) => {\n  const { id } = match.params;\n  const dispatch = useDispatch();\n  const partner = useSelector((state: RootState) => id && (selectPartner(state, Number(id)) as any));\n\n  const defaultValues: IDefaultValues = {\n    email: \"\",\n    password: \"\",\n  };\n  const { control } = useForm<IDefaultValues>({\n    defaultValues,\n  });\n\n  const [errors] = useState<any>({});\n\n  // const email = watch(\"email\");\n  // const password = watch(\"password\");\n\n  const [stats, setStats] = useState<null | HTMLElement>(null);\n  const [period, setPeriod] = useState(\"за неделю\");\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => setStats(event.currentTarget);\n  const handlePickStats = (e: any) => {\n    e.currentTarget.innerText && setPeriod(e.currentTarget.innerText);\n    setStats(null);\n  };\n\n  const handleDelete = () => {\n    if (id && window.confirm(`Вы действительно хотите удалить аккаунт \"${partner?.name}\"?`)) {\n      dispatch(deletePartner(Number(id)));\n    }\n  };\n\n  return (\n    <Grid>\n      <Typography variant=\"h4\" gutterBottom>\n        {partner?.name} (id: {partner?.id})\n      </Typography>\n      <Grid item>\n        <Button onClick={handleClick} startIcon={<Equalizer />}>\n          Статистика {period}\n        </Button>\n        <List dense>\n          <ListItem>Всего терминалов: 3</ListItem>\n          <ListItem>Новых терминалов: 1</ListItem>\n          <ListItem>Всего выплат: {getPrice(100)}</ListItem>\n        </List>\n        <Menu anchorEl={stats} keepMounted open={Boolean(stats)} onClose={handlePickStats}>\n          <MenuItem onClick={handlePickStats}>за неделю</MenuItem>\n          <MenuItem onClick={handlePickStats}>за месяц</MenuItem>\n          <MenuItem onClick={handlePickStats}>за год</MenuItem>\n        </Menu>\n      </Grid>\n\n      <form id=\"editPartner\" style={{ marginBottom: 28 }}>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6}>\n            <Input\n              control={control}\n              name=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              defaultValue={defaultValues.email}\n              error={!!errors.email}\n              helperText={errors?.email}\n              required\n              autoFocus\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Input\n              control={control}\n              name=\"webhookURL\"\n              label=\"Пароль\"\n              type=\"password\"\n              defaultValue={defaultValues.password}\n              error={!!errors.password}\n              helperText={errors?.password}\n              required\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6}>\n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              startIcon={<Delete />}\n              onClick={handleDelete}\n              fullWidth\n              style={{ marginTop: \"1rem\" }}>\n              Удалить аккаунт\n            </Button>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              startIcon={<PowerSettingsNew />}\n              // onClick={handleClose}\n              fullWidth\n              style={{ marginTop: \"1rem\" }}>\n              Выключить\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n\n      <TerminalsTable />\n    </Grid>\n  );\n};\n\nexport default PartnerPage;\n","import { FC } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n\nimport { Button, ButtonGroup } from \"@material-ui/core\";\nimport { Clear, Check } from \"@material-ui/icons\";\nimport Dialog from \"components/UI/Dialog\";\n\n// import { RootState } from \"store/rootReducer\";\n// import { deletePartner } from \"store/ducks/owner/actionCreators\";\n// import { selectPartner } from \"store/ducks/owner/selectors\";\n\ninterface Props {\n  id: number | null;\n  handleClose: () => void;\n}\n\nexport const EditDialog: FC<Props> = ({ id, handleClose }) => {\n  // const dispatch = useDispatch();\n  // const payment = useSelector((state: RootState) => id && selectPartner(state, id) as any);\n\n  const handleDelete = () => {\n    if (id && window.confirm(`Вы действительно хотите отклонить выплату?`)) {\n      handleClose();\n      // dispatch(deletePartner(id));\n    }\n  };\n\n  return (\n    <Dialog open={Boolean(id)} handleClose={handleClose} title={`Выплата для \"test\" (id: 1)`}>\n      <ButtonGroup fullWidth>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          startIcon={<Clear />}\n          onClick={handleDelete}\n          style={{ marginTop: \"1rem\" }}>\n          Отклонить\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          startIcon={<Check />}\n          onClick={handleClose}\n          style={{ marginTop: \"1rem\" }}>\n          Подтвердить\n        </Button>\n      </ButtonGroup>\n    </Dialog>\n  );\n};\n","import { FC, ReactElement, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n\nimport { Paper } from \"@material-ui/core\";\nimport Table from \"components/UI/TableWrapper\";\nimport { EditDialog } from \"./EditDialog\";\n\nimport { getHeaders, getRows } from \"./utilsTable\";\n// import { selectPartners } from \"store/ducks/owner/selectors\";\n// import { fetchPartners } from \"store/ducks/owner/actionCreators\";\n\ninterface Props {\n  type: string;\n}\n\nexport const PaymentsTable: FC<Props> = ({ type }): ReactElement => {\n  // const dispatch = useDispatch();\n  // const payments = useSelector();\n  const payments =\n    type === \"regular\"\n      ? [\n          {\n            id: 1,\n            name: \"test\",\n            amount: 1000,\n            createDate: Date.now(),\n            ip: \"Ожидает подтверждения\",\n          },\n        ]\n      : [\n          {\n            id: 1,\n            name: \"test\",\n            amount: 1000,\n            createDate: Date.now(),\n            ip: \"Ожидает подтверждения\",\n          },\n        ];\n\n  const headers = getHeaders();\n  const rows = getRows(payments);\n\n  const [editID, setEditID] = useState<number | null>(null);\n\n  const onRowClick = (e: any, id: number) => setEditID(id);\n  const handleEditClose = () => setEditID(null);\n\n  // useEffect(() => {\n  //   dispatch(fetchPartners());\n  // }, [dispatch]);\n\n  return (\n    <Paper>\n      <Table\n        headers={headers}\n        rows={rows}\n        title={type === \"regular\" ? \"Плановые выплаты\" : \"Текущие выплаты\"}\n        onRowClick={onRowClick}\n      />\n\n      <EditDialog id={editID} handleClose={handleEditClose} />\n    </Paper>\n  );\n};\n","import { ITableHeader, ITableRow } from \"components/UI/TableWrapper/types\";\n// import { IPartner } from \"store/ducks/owner/state\";\n\nexport const getHeaders = (): ITableHeader[] => [\n  { name: \"id\" },\n  { name: \"Пользователь\" },\n  { name: \"Сумма\" },\n  { name: \"Дата создания\" },\n  { name: \"Статус\" },\n];\n\nexport const getRows = (items: any[]): ITableRow[] => {\n  return items.map(({ id, name, amount, createDate, ip }: any) => ({\n    columns: [\n      {\n        content: id,\n      },\n      {\n        content: name,\n      },\n      {\n        content: amount,\n      },\n      {\n        content: new Date(createDate).toLocaleDateString(),\n      },\n      {\n        content: ip,\n      },\n    ],\n  }));\n};\n","import { FC, ReactElement } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n\nimport { Paper } from \"@material-ui/core\";\nimport Table from \"components/UI/TableWrapper\";\n// import { EditDialog } from \"./EditDialog\";\n\nimport { getHeaders, getRows } from \"./utilsTable\";\n// import { selectPartners } from \"store/ducks/owner/selectors\";\n// import { fetchPartners } from \"store/ducks/owner/actionCreators\";\n\nexport const OrdersTable: FC = (): ReactElement => {\n  // const dispatch = useDispatch();\n  // const orders = useSelector(selectPartners);\n  const orders = [\n    {\n      id: 1,\n      user: \"test\",\n      createDate: Date.now(),\n      amount: 5490,\n      currency: \"RUB\",\n      description: \"VISA\",\n      status: \"Выполнено\",\n    },\n  ];\n\n  const headers = getHeaders();\n  const rows = getRows(orders);\n\n  // const [editID, setEditID] = useState<number | null>(null);\n\n  // const onRowClick = (e: any, id: number) => setEditID(id);\n  // const handleEditClose = () => setEditID(null);\n\n  // useEffect(() => {\n  //   dispatch(fetchPartners());\n  // }, [dispatch]);\n\n  return (\n    <Paper>\n      <Table headers={headers} rows={rows} title=\"Список заказов\" /* onRowClick={onRowClick} */ />\n\n      {/* <EditDialog id={editID} handleClose={handleEditClose} /> */}\n    </Paper>\n  );\n};\n","import { ITableHeader, ITableRow } from \"components/UI/TableWrapper/types\";\n// import { IPartner } from \"store/ducks/owner/state\";\n\nexport const getHeaders = (): ITableHeader[] => [\n  { name: \"\" },\n  { name: \"id\" },\n  { name: \"Партнер\" },\n  { name: \"Дата\" },\n  { name: \"Сумма\" },\n  { name: \"Валюта\" },\n  { name: \"Описание\" },\n  { name: \"Статус\" },\n];\n\nexport const getRows = (items: any[]): ITableRow[] => {\n  return items.map(({ id, user, createDate, amount, currency, description, status }: any) => ({\n    columns: [\n      {\n        status: \"success\",\n      },\n      {\n        content: id,\n      },\n      {\n        content: user,\n      },\n      {\n        content: new Date(createDate).toLocaleDateString(),\n      },\n      {\n        content: amount,\n      },\n      {\n        content: currency,\n      },\n      {\n        content: description,\n      },\n      {\n        content: status,\n      },\n    ],\n  }));\n};\n","import { FC } from \"react\";\n\nimport { Divider, List, ListItem, ListItemText } from \"@material-ui/core\";\n\nimport { getPrice } from \"utils/getPrice\";\n\nconst items = [\n  {\n    title: \"Количество выплат\",\n    text: 1000000,\n  },\n  {\n    title: \"Ежегодный оборот средств\",\n    text: 1000000,\n  },\n  {\n    title: \"Количество выплат\",\n    text: 1000000,\n  },\n  {\n    title: \"Ежегодный оборот средств\",\n    text: 1000000,\n  },\n  {\n    title: \"Количество выплат\",\n    text: 1000000,\n  },\n  {\n    title: \"Ежегодный оборот средств\",\n    text: 1000000,\n  },\n  {\n    title: \"Количество выплат\",\n    text: 1000000,\n  },\n  {\n    title: \"Ежегодный оборот средств\",\n    text: 1000000,\n  },\n  {\n    title: \"Количество выплат\",\n    text: 1000000,\n  },\n  {\n    title: \"Ежегодный оборот средств\",\n    text: 1000000,\n  },\n];\n\nconst Finances: FC = () => {\n  return (\n    <div>\n      <List>\n        {items.map(({ title, text }, i) => (\n          <>\n            <ListItem key={i}>\n              <ListItemText primary={title} />\n              <ListItemText primary={getPrice(text)} style={{ textAlign: \"right\" }} />\n            </ListItem>\n            <Divider light />\n          </>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Finances;\n","import { FC, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport Dialog from \"components/UI/Dialog\";\nimport Input from \"components/UI/Fields/Input\";\n\nimport { addCard } from \"store/ducks/owner/actionCreators\";\n\ninterface Props {\n  open: boolean;\n  handleClose: () => void;\n}\n\ninterface IDefaultValues {\n  cardNumber: string;\n  mm: string;\n  yy: string;\n  cvv: string;\n}\n\nexport const NewDialog: FC<Props> = ({ open, handleClose }) => {\n  const dispatch = useDispatch();\n\n  const defaultValues: IDefaultValues = {\n    cardNumber: \"\",\n    mm: \"\",\n    yy: \"\",\n    cvv: \"\",\n  };\n  const { control, handleSubmit, watch } = useForm<IDefaultValues>({\n    defaultValues,\n  });\n\n  const [errors, setErrors] = useState<any>({});\n\n  const cardNumber = watch(\"cardNumber\");\n  const mm = watch(\"mm\");\n  const yy = watch(\"yy\");\n  const cvv = watch(\"cvv\");\n\n  const onSubmit = () => {\n    setErrors({});\n\n    if (cardNumber.length < 16) {\n      setErrors((prev: any) => ({\n        ...prev,\n        cardNumber: \"Номер карты содержит не менее 16 символов\",\n      }));\n    }\n\n    if (mm.length < 2) {\n      setErrors((prev: any) => ({\n        ...prev,\n        mm: \"Месяц истечения карты содержит не менее 2 символов\",\n      }));\n    }\n    if (yy.length < 2) {\n      setErrors((prev: any) => ({\n        ...prev,\n        yy: \"Год истечения карты содержит не менее 2 символов\",\n      }));\n    }\n    if (cvv.length < 3) {\n      setErrors((prev: any) => ({\n        ...prev,\n        cvv: \"CVV карты содержит не менее 3 символов\",\n      }));\n      return;\n    }\n\n    dispatch(addCard({ cardNumber, mm, yy, cvv }));\n    setErrors({});\n    handleClose();\n  };\n\n  return (\n    <Dialog open={open} handleClose={handleClose} title=\"Добавление карты\" form=\"addCard\">\n      <form id=\"addCard\" onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          control={control}\n          name=\"cardNumber\"\n          label=\"Номер\"\n          type=\"text\"\n          defaultValue={defaultValues.cardNumber}\n          error={!!errors.cardNumber}\n          helperText={errors?.cardNumber}\n          maxLength={16}\n          required\n          autoFocus\n        />\n        <Grid container spacing={1}>\n          <Grid xs={4} item>\n            <Input\n              control={control}\n              name=\"mm\"\n              label=\"Месяц\"\n              type=\"text\"\n              defaultValue={defaultValues.mm}\n              error={!!errors.mm}\n              helperText={errors?.mm}\n              maxLength={2}\n              required\n            />\n          </Grid>\n          <Grid xs={4} item>\n            <Input\n              control={control}\n              name=\"yy\"\n              label=\"Год\"\n              type=\"text\"\n              defaultValue={defaultValues.yy}\n              error={!!errors.yy}\n              helperText={errors?.yy}\n              maxLength={2}\n              required\n            />\n          </Grid>\n          <Grid xs={4} item>\n            <Input\n              control={control}\n              name=\"cvv\"\n              label=\"CVV\"\n              type=\"text\"\n              defaultValue={defaultValues.cvv}\n              error={!!errors.cvv}\n              helperText={errors?.cvv}\n              maxLength={3}\n              required\n            />\n          </Grid>\n        </Grid>\n        <Input\n          control={control}\n          name=\"comment\"\n          label=\"Комментарий\"\n          type=\"text\"\n          // defaultValue={defaultValues.comment}\n          // error={!!errors.comment}\n          // helperText={errors?.comment}\n        />\n      </form>\n    </Dialog>\n  );\n};\n","import { FC, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n\nimport { Button, Grid, Menu, MenuItem, List, ListItem } from \"@material-ui/core\";\nimport { Delete, Equalizer } from \"@material-ui/icons\";\nimport Dialog from \"components/UI/Dialog\";\nimport Input from \"components/UI/Fields/Input\";\n\nimport { RootState } from \"store/rootReducer\";\nimport { deleteCard } from \"store/ducks/owner/actionCreators\";\nimport { selectCard } from \"store/ducks/owner/selectors\";\n\ninterface Props {\n  id: number | null;\n  handleClose: () => void;\n}\n\ninterface IDefaultValues {\n  cardNumber: string;\n  comment: string;\n}\n\nexport const EditDialog: FC<Props> = ({ id, handleClose }) => {\n  const dispatch = useDispatch();\n  const card = useSelector((state: RootState) => id && (selectCard(state, id) as any));\n\n  const defaultValues: IDefaultValues = {\n    cardNumber: card?.cardNumber,\n    comment: \"\",\n  };\n  const { control, watch, handleSubmit, reset } = useForm<IDefaultValues>({\n    defaultValues,\n  });\n\n  const [errors, setErrors] = useState<any>({});\n\n  const cardNumber = watch(\"cardNumber\");\n  // const comment = watch(\"comment\");\n\n  const onSubmit = () => {\n    setErrors({});\n\n    if (cardNumber.length < 16) {\n      setErrors((prev: any) => ({\n        ...prev,\n        cardNumber: \"Номер карты содержит не менее 16 символов\",\n      }));\n      return;\n    }\n\n    // dispatch(editCard({ cardNumber, mm, yy }));\n    setErrors({});\n    handleClose();\n  };\n\n  const [stats, setStats] = useState<null | HTMLElement>(null);\n  const [period, setPeriod] = useState(\"за день\");\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => setStats(event.currentTarget);\n  const handlePickStats = (e: any) => {\n    e.currentTarget.innerText && setPeriod(e.currentTarget.innerText);\n    setStats(null);\n  };\n\n  const handleDelete = () => {\n    if (id && window.confirm(`Вы действительно хотите открепить карту?`)) {\n      handleClose();\n      dispatch(deleteCard(id));\n    }\n  };\n\n  // подстановка асинхронных данных в поля формы\n  useEffect(() => {\n    card &&\n      reset({\n        cardNumber: card?.cardNumber,\n        // comment: card.comment\n      });\n  }, [reset, card]);\n\n  return (\n    <Dialog\n      open={Boolean(id)}\n      handleClose={handleClose}\n      title={`${card?.cardNumber} (id: ${card?.id})`}\n      form=\"editCard\">\n      <Button onClick={handleClick} startIcon={<Equalizer />}>\n        Статистика {period}\n      </Button>\n      <Grid item xs={12}>\n        <List dense>\n          <ListItem>Транзакций: {period === \"за день\" ? card?.dayTransactions : card?.monthTransactions}</ListItem>\n          <ListItem>Сумма: {period === \"за день\" ? card?.daySum : card?.monthSum}</ListItem>\n        </List>\n      </Grid>\n      <Menu anchorEl={stats} keepMounted open={Boolean(stats)} onClose={handlePickStats}>\n        <MenuItem onClick={handlePickStats}>за день</MenuItem>\n        <MenuItem onClick={handlePickStats}>за месяц</MenuItem>\n        {/* <MenuItem onClick={handlePickStats}>за год</MenuItem> */}\n      </Menu>\n      <form id=\"editCard\" onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          control={control}\n          name=\"number\"\n          label=\"Номер\"\n          type=\"text\"\n          defaultValue={defaultValues.cardNumber}\n          error={!!errors.cardNumber}\n          helperText={errors?.cardNumber}\n          required\n          autoFocus\n        />\n        <Input\n          control={control}\n          name=\"comment\"\n          label=\"Комментарий\"\n          type=\"text\"\n          defaultValue={defaultValues.comment}\n          error={!!errors.comment}\n          helperText={errors?.comment}\n        />\n      </form>\n      <Button\n        variant=\"outlined\"\n        color=\"secondary\"\n        startIcon={<Delete />}\n        onClick={handleDelete}\n        style={{ marginTop: \"1rem\" }}>\n        Открепить карту\n      </Button>\n    </Dialog>\n  );\n};\n","import { ITableHeader, ITableRow } from \"components/UI/TableWrapper/types\";\nimport { ICard } from \"store/ducks/owner/state\";\n\nfunction parseExpirationDate(mm: number, yy: number): string {\n  return mm < 10 ? `0${mm}/${yy}` : `${mm}/${yy}`;\n}\n\nexport const getHeaders = (): ITableHeader[] => [\n  { name: \"id\" },\n  { name: \"Описание\" },\n  { name: \"Валюта\" },\n  { name: \"Номер\" },\n  { name: \"Истекает\" },\n  { name: \"Комментарий\" },\n];\n\nexport const getRows = (items: ICard[] | any): ITableRow[] => {\n  return items.map(({ id, name, currency, cardNumber, mm, yy, comment }: ICard | any) => ({\n    columns: [\n      {\n        content: id,\n      },\n      {\n        content: name || \"VISA\",\n      },\n      {\n        content: currency || \"RUB\",\n      },\n      {\n        content: cardNumber,\n      },\n      {\n        content: parseExpirationDate(mm, yy),\n      },\n      {\n        content: comment || \"Это комментарий к карте\",\n      },\n    ],\n  }));\n};\n","export enum Status {\n  LOADED = \"LOADED\",\n  LOADING = \"LOADING\",\n  ERROR = \"ERROR\",\n  NEVER = \"NEVER\",\n}\n\nexport interface IShop {\n  id: number;\n  name: string;\n  siteURL: string;\n  successURL: string;\n  failURL: string;\n  webhookURL: string;\n  createDate: number;\n  publicKey?: string;\n  webhookSecretKey?: string;\n}\n\nexport interface IUser {\n  id: number;\n  name: string;\n  email: string;\n  type: number;\n  balance: number;\n  shops: IShop[];\n}\nexport interface IManage {\n  status: Status;\n  user: IUser;\n}\n","import { FC, ReactElement, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Button, Paper } from \"@material-ui/core\";\nimport { Add as AddIcon } from \"@material-ui/icons\";\nimport Table from \"components/UI/TableWrapper\";\nimport { NewDialog } from \"./NewDialog\";\nimport { EditDialog } from \"./EditDialog\";\n\nimport { getHeaders, getRows } from \"./utilsTable\";\nimport { selectCards } from \"store/ducks/owner/selectors\";\nimport { fetchCards } from \"store/ducks/owner/actionCreators\";\n\nexport const CardsTable: FC = (): ReactElement => {\n  const dispatch = useDispatch();\n  const cards = useSelector(selectCards);\n\n  const headers = getHeaders();\n  const rows = getRows(cards);\n\n  const [openNew, setOpenNew] = useState<boolean>(false);\n  const [editID, setEditID] = useState<number | null>(null);\n\n  const handleNewOpen = () => setOpenNew(true);\n  const handleNewClose = () => setOpenNew(false);\n\n  const onRowClick = (e: any, id: number) => setEditID(id);\n  const handleEditClose = () => setEditID(null);\n\n  useEffect(() => {\n    dispatch(fetchCards());\n  }, [dispatch]);\n\n  return (\n    <Paper>\n      <Table\n        headers={headers}\n        rows={rows}\n        title=\"Список карт\"\n        button={\n          <Button variant=\"outlined\" color=\"primary\" startIcon={<AddIcon />} onClick={handleNewOpen}>\n            Добавить\n          </Button>\n        }\n        onRowClick={onRowClick}\n      />\n\n      <NewDialog open={openNew} handleClose={handleNewClose} />\n      <EditDialog id={editID} handleClose={handleEditClose} />\n    </Paper>\n  );\n};\n","import { FC } from \"react\";\n\nimport LayoutDefault from \"components/Layout\";\n\nimport Home from \"components/Pages/Home\";\nimport Partners from \"components/Pages/Partners\";\nimport PartnerPage from \"components/Pages/Partners/Partner\";\nimport Payments from \"components/Pages/Payments\";\nimport Orders from \"components/Pages/Orders\";\nimport Finances from \"components/Pages/Finances\";\nimport Cards from \"components/Pages/Cards\";\n\nexport interface IRoute {\n  name: string;\n  component: FC<any>;\n  path: string;\n  layout: FC<{ route?: IRoute; children?: any }>;\n  exact?: boolean;\n  /** Номера типов ролей, которым разрешен данный роут */\n  access?: number[];\n}\n\nexport const ROUTES: IRoute[] = [\n  {\n    name: \"Главная\",\n    component: Home,\n    path: \"/\",\n    layout: LayoutDefault,\n    exact: true,\n  },\n  {\n    name: \"Партнеры\",\n    component: Partners,\n    path: \"/partners\",\n    layout: LayoutDefault,\n    access: [2, 3],\n    exact: true,\n  },\n  {\n    name: \"Страница партнера\",\n    component: PartnerPage,\n    path: \"/partners/:id\",\n    layout: LayoutDefault,\n    access: [3],\n  },\n  {\n    name: \"Заказы\",\n    component: Orders,\n    path: \"/orders\",\n    layout: LayoutDefault,\n    access: [3],\n  },\n  {\n    name: \"Выплаты\",\n    component: Payments,\n    path: \"/payments\",\n    layout: LayoutDefault,\n    access: [2, 3],\n  },\n  {\n    name: \"Учет финансов\",\n    component: Finances,\n    path: \"/finances\",\n    layout: LayoutDefault,\n    access: [3],\n  },\n  {\n    name: \"Пулл карт\",\n    component: Cards,\n    path: \"/cards\",\n    layout: LayoutDefault,\n    access: [3],\n  },\n];\n","import { FC } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { OrdersTable } from \"./OrdersTable\";\n\nconst Orders: FC = () => {\n  return (\n    <Grid item xs={12}>\n      <OrdersTable />\n    </Grid>\n  );\n};\n\nexport default Orders;\n","import { FC } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Grid } from \"@material-ui/core\";\nimport Card from \"components/UI/Card\";\nimport { PaymentsTable } from \"./PaymentsTable\";\n\nimport { getPrice } from \"utils/getPrice\";\nimport { selectUser } from \"store/ducks/manage/selectors\";\n\nconst Payments: FC = () => {\n  const user = useSelector(selectUser);\n\n  return (\n    <Grid container spacing={3}>\n      {user.type === 3 && (\n        <>\n          <Grid item xs={12} md={6} lg={4}>\n            <Card title=\"К выплате\" text={getPrice(9300)} />\n          </Grid>\n          <Grid item xs={12} md={6} lg={4}>\n            <Card title=\"Платежи на карту\" text={getPrice(4300)} />\n          </Grid>\n          <Grid item xs={12} md={6} lg={4}>\n            <Card title=\"Платежи на баланс\" text={getPrice(1700)} />\n          </Grid>\n        </>\n      )}\n\n      <Grid item xs={12}>\n        <PaymentsTable type=\"regular\" />\n      </Grid>\n      <Grid item xs={12}>\n        <PaymentsTable type=\"current\" />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Payments;\n","import { FC } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { CardsTable } from \"./CardsTable\";\n\nconst Cards: FC = () => {\n  return (\n    <Grid item xs={12}>\n      <CardsTable />\n    </Grid>\n  );\n};\n\nexport default Cards;\n","import { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport LayoutDefault from \"components/Layout\";\nimport LayoutAuth from \"components/Layout/Auth\";\nimport ErrorPage from \"components/Pages/Error\";\nimport AuthPage from \"components/Pages/Auth\";\n\nimport { ROUTES, IRoute } from \"constants/ROUTES\";\n\nimport { isAuthorized } from \"utils/isAuthorized\";\n\nexport const App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/auth\">\n          <LayoutAuth>\n            <AuthPage />\n          </LayoutAuth>\n        </Route>\n\n        <Route path=\"/404\">\n          <LayoutDefault>\n            <ErrorPage code={404} message=\"Запрашиваемая страница не найдена.\" />\n          </LayoutDefault>\n        </Route>\n\n        {ROUTES.map((route: IRoute) => (\n          <Route\n            exact={route.exact}\n            path={route.path}\n            key={`route_${route.path}`}\n            render={props =>\n              isAuthorized() ? (\n                <route.layout route={route}>\n                  <route.component {...props} />\n                </route.layout>\n              ) : (\n                <Redirect to=\"/auth\" />\n              )\n            }\n          />\n        ))}\n\n        <Redirect from=\"*\" to=\"/404\" />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n","import produce, { Draft } from \"immer\";\nimport { AuthActions, AuthActionsTypes } from \"./actionCreators\";\nimport { Status, IAuth } from \"./state\";\n\nconst initAuth: IAuth = {\n  email: \"\",\n  password: \"\",\n  accessToken: \"\",\n  status: Status.NEVER,\n};\n\nconst authReducer = produce((draft: Draft<IAuth>, action: AuthActions) => {\n  switch (action.type) {\n    case AuthActionsTypes.LOGIN:\n      draft.status = Status.AUTHORIZING;\n      break;\n\n    case AuthActionsTypes.LOGOUT:\n      draft.email = initAuth.email;\n      draft.password = initAuth.password;\n      draft.accessToken = initAuth.accessToken;\n      draft.status = Status.UNAUTHORIZED;\n      localStorage.removeItem(\"token\");\n      break;\n\n    case AuthActionsTypes.SET_TOKEN:\n      draft.accessToken = action.payload;\n      draft.status = Status.AUTHORIZED;\n      break;\n\n    case AuthActionsTypes.SET_STATUS:\n      draft.status = action.payload;\n      break;\n\n    default:\n      break;\n  }\n}, initAuth);\n\nexport default authReducer;\n","import produce, { Draft } from \"immer\";\nimport { ManageActions, ManageActionsTypes } from \"./actionCreators\";\nimport { IManage, IShop, Status } from \"./state\";\n\nconst initManage: IManage = {\n  status: Status[\"NEVER\"],\n  user: {\n    id: -1,\n    name: \"\",\n    email: \"\",\n    type: 0,\n    balance: 0,\n    shops: [],\n  },\n};\n\nconst manageReducer = produce((draft: Draft<IManage>, action: ManageActions) => {\n  switch (action.type) {\n    case ManageActionsTypes.CHANGE_NAME_EMAIL:\n      draft.user = {\n        ...draft.user,\n        name: action.payload.name,\n        email: action.payload.email,\n      };\n      break;\n\n    case ManageActionsTypes.SET_USER:\n      draft.user = action.payload;\n      break;\n\n    case ManageActionsTypes.SET_SHOPS:\n      draft.user.shops = action.payload;\n      break;\n    case ManageActionsTypes.ADD_SHOP:\n      draft.status = Status.LOADING;\n      break;\n    case ManageActionsTypes.DELETE_SHOP:\n      const index = draft.user.shops.findIndex(shop => shop.id === action.payload);\n      index && draft.user.shops.splice(index, 1);\n      break;\n\n    case ManageActionsTypes.SET_KEY:\n      let shop: IShop | any = draft.user.shops[draft.user.shops.findIndex(shop => shop.id === action.payload.id)];\n\n      if (shop) {\n        const key = Object.keys(action.payload)[1];\n        shop[key] = action.payload[key];\n      }\n      break;\n\n    default:\n      break;\n  }\n}, initManage);\n\nexport default manageReducer;\n","export enum Status {\n  LOADED = \"LOADED\",\n  LOADING = \"LOADING\",\n  ERROR = \"ERROR\",\n  NEVER = \"NEVER\",\n}\n\nexport interface IPartner {\n  id: number;\n  name: string;\n  email: string;\n  password: string;\n  type: number;\n  balance: number;\n  createDate: number;\n  ip: string;\n  removed: boolean;\n}\n\nexport interface ICard {\n  id: number;\n  monthTransactions: number;\n  dayTransactions: number;\n  cardNumber: string;\n  mm: string;\n  yy: string;\n  daySum: number;\n  monthSum: number;\n}\n\nexport interface IOwner {\n  status: Status;\n  partners: IPartner[];\n  cards: ICard[];\n}\n","import produce, { Draft } from \"immer\";\nimport { OwnerActions, OwnerActionsTypes } from \"./actionCreators\";\nimport { IOwner, Status } from \"./state\";\n\nconst initManage: IOwner = {\n  status: Status[\"NEVER\"],\n  partners: [],\n  cards: [],\n};\n\nconst ownerReducer = produce((draft: Draft<IOwner>, action: OwnerActions) => {\n  switch (action.type) {\n    case OwnerActionsTypes.SET_PARTNERS:\n      draft.partners = action.payload;\n      break;\n\n    case OwnerActionsTypes.ADD_PARTNER:\n      draft.status = Status.LOADING;\n      break;\n\n    case OwnerActionsTypes.DELETE_PARTNER:\n      const partner = draft.partners.findIndex(partner => partner.id === action.payload);\n      partner && draft.partners.splice(partner, 1);\n      break;\n\n    case OwnerActionsTypes.SET_CARDS:\n      draft.cards = action.payload;\n      break;\n\n    case OwnerActionsTypes.ADD_CARD:\n      draft.status = Status.LOADING;\n      break;\n\n    case OwnerActionsTypes.DELETE_CARD:\n      const card = draft.cards.findIndex(card => card.id === action.payload);\n      card && draft.cards.splice(card, 1);\n      break;\n\n    default:\n      break;\n  }\n}, initManage);\n\nexport default ownerReducer;\n","import { combineReducers } from \"redux\";\n\nimport { IAuth } from \"./ducks/auth/state\";\nimport { IManage } from \"./ducks/manage/state\";\nimport { IOwner } from \"./ducks/owner/state\";\n\nimport authReducer from \"./ducks/auth/reducer\";\nimport manageReducer from \"./ducks/manage/reducer\";\nimport ownerReducer from \"./ducks/owner/reducer\";\n\nexport interface RootState {\n  auth: IAuth;\n  manage: IManage;\n  owner: IOwner;\n}\n\nexport const rootReducer = combineReducers<RootState>({\n  auth: authReducer,\n  manage: manageReducer,\n  owner: ownerReducer,\n});\n","export const errorHandler = (e: Error | any): void => {\n  console.log(\"Error\", e.response?.data?.error?.code);\n  if (e.response?.data.error) alert(e.response.data.error.message);\n};\n","import axios from \"axios\";\n\naxios.interceptors.request.use(config => {\n  config.headers[\"Authorization\"] = window.localStorage.getItem(\"token\");\n  return config;\n});\n\nexport default axios;\n","export const API_URL = \"https://6882a365b39f.ngrok.io\";\n","import axios from \"plugins/axios\";\nimport { IAuth, ILogin } from \"store/ducks/auth/state\";\nimport { API_URL } from \"./constants\";\n\nexport const API_AUTH = {\n  async login({ email, password }: ILogin): Promise<IAuth[\"accessToken\"]> {\n    const response = await axios.post(`${API_URL}/auth/login`, { email, password });\n    return response.data.token;\n  },\n};\n","import { SagaIterator } from \"redux-saga\";\nimport { call, put, takeEvery } from \"redux-saga/effects\";\n\nimport { errorHandler } from \"utils/errorHandler\";\n\nimport { API_AUTH } from \"api/auth\";\nimport { setAccessToken, setAuthStatus, AuthActionsTypes, ILoginAction } from \"./actionCreators\";\nimport { Status } from \"./state\";\n\nexport function* doLogin({ payload: values }: ILoginAction): any {\n  try {\n    const data = yield call(API_AUTH.login, values);\n    const { history } = values;\n\n    localStorage.setItem(\"token\", data);\n    yield put(setAccessToken(data));\n    history.push(\"/\");\n  } catch (e) {\n    yield put(setAuthStatus(Status.ERROR));\n\n    if (e.response?.data?.error.code === 4009) {\n      alert(\"Неверный логин или пароль\");\n    } else if (e.response?.data?.error.code === 4001) {\n      alert(\"Необходимо ввести пароль\");\n    } else if (e.response?.data?.error.code === 4003) {\n      alert(\"Минимальная длина пароля 8 символов, максимальная 50\");\n    } else {\n      errorHandler(e);\n    }\n  }\n}\n\nexport function* authSaga(): SagaIterator {\n  yield takeEvery(AuthActionsTypes.LOGIN, doLogin);\n}\n","import axios from \"plugins/axios\";\nimport {\n  IAddShop,\n  IChangeNameWithEmail,\n  IChangePassword,\n  IDeleteShop,\n  IEditShop,\n  IRefreshKey,\n} from \"store/ducks/manage/actionCreators\";\nimport { IManage, IShop } from \"store/ducks/manage/state\";\nimport { API_URL } from \"./constants\";\n\nexport const API_MANAGE = {\n  async changeNameWithEmail({\n    name,\n    email,\n  }: IChangeNameWithEmail[\"payload\"]): Promise<{\n    success: boolean;\n    user: {\n      id: number;\n      name: string;\n      email: string;\n      balance: number;\n      createDate: number;\n    };\n  }> {\n    const response = await axios.post(`${API_URL}/manage/editProfile`, { name, email });\n    return response.data.user;\n  },\n  async changePassword({ oldPassword, newPassword }: IChangePassword[\"payload\"]): Promise<{}> {\n    const response = await axios.post(`${API_URL}/manage/editProfile`, { oldPassword, newPassword });\n    return response.data.user;\n  },\n\n  async fetchUser(): Promise<IManage[\"user\"]> {\n    const response = await axios.get(`${API_URL}/manage/getUserInfo`);\n    return response.data.user;\n  },\n  async fetchShops(): Promise<IShop[]> {\n    const response = await axios.get(`${API_URL}/manage/getShopsList`);\n    return response.data.shops;\n  },\n  async addShop({ name, siteURL }: IAddShop[\"payload\"]): Promise<IShop> {\n    const response = await axios.post(`${API_URL}/manage/addShop`, { name, siteURL });\n    return response.data.shop;\n  },\n  async editShop({ id, name, failURL, successURL, webhookURL }: IEditShop[\"payload\"]): Promise<IShop> {\n    const response = await axios.post(`${API_URL}/manage/editShop`, {\n      id,\n      name,\n      failURL,\n      successURL,\n      webhookURL,\n    });\n    return response.data.shop;\n  },\n  async deleteShop(id: IDeleteShop[\"payload\"]): Promise<{ success: boolean }> {\n    const response = await axios.post(`${API_URL}/manage/removeShop`, { id });\n    return response.data.success;\n  },\n\n  async refreshKey({ id, value }: IRefreshKey[\"payload\"]): Promise<any> {\n    const response = await axios.post(`${API_URL}/manage/updateShopKeys`, { id, value });\n    return {\n      id,\n      [value]: response.data[value],\n    };\n  },\n};\n","import { SagaIterator } from \"redux-saga\";\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\n\nimport { errorHandler } from \"utils/errorHandler\";\nimport { isAuthorized } from \"utils/isAuthorized\";\n\nimport { API_MANAGE } from \"api/manage\";\nimport {\n  ManageActionsTypes,\n  IChangeNameWithEmail,\n  IChangePassword,\n  setUser,\n  IAddShop,\n  setShops,\n  IEditShop,\n  IDeleteShop,\n  IRefreshKey,\n  setKey,\n} from \"./actionCreators\";\n\nexport function* changeNameWithEmail({ payload: values }: IChangeNameWithEmail): any {\n  try {\n    yield call(API_MANAGE.changeNameWithEmail, values);\n  } catch (e) {\n    errorHandler(e);\n  }\n}\n\nexport function* changePassword({ payload: values }: IChangePassword): any {\n  try {\n    yield call(API_MANAGE.changePassword, values);\n  } catch (e) {\n    if (e.response.data?.error.code === 4013) {\n      alert(\"Новый пароль не был применен, так как он равен текущему\");\n    } else {\n      errorHandler(e);\n    }\n  }\n}\n\nexport function* fetchUser(): any {\n  try {\n    if (isAuthorized()) {\n      const data = yield call(API_MANAGE.fetchUser);\n      yield put(setUser(data));\n    } else {\n      alert(\"Необходимо авторизироваться\");\n    }\n  } catch (e) {\n    // возврат на страницу с авторизацией\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n\n    errorHandler(e);\n  }\n}\n\nexport function* fetchShops(): any {\n  try {\n    const data = yield call(API_MANAGE.fetchShops);\n    yield put(setShops(data));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\nexport function* addShop({ payload: values }: IAddShop): any {\n  try {\n    const data = yield all([yield call(API_MANAGE.addShop, values), yield call(API_MANAGE.fetchShops)]);\n\n    yield put(setShops(data[1]));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\nexport function* editShop({ payload: values }: IEditShop): any {\n  try {\n    const data = yield all([yield call(API_MANAGE.editShop, values), yield call(API_MANAGE.fetchShops)]);\n\n    yield put(setShops(data[1]));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\nexport function* deleteShop({ payload: values }: IDeleteShop): any {\n  try {\n    yield call(API_MANAGE.deleteShop, values);\n  } catch (e) {\n    errorHandler(e);\n  }\n}\n\nexport function* refreshKey({ payload: values }: IRefreshKey): any {\n  try {\n    const data = yield call(API_MANAGE.refreshKey, values);\n    const key = Object.keys(data)[1];\n\n    yield put(setKey({ id: values.id, [key]: data[key] }));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\n\nexport function* manageSaga(): SagaIterator {\n  yield takeEvery(ManageActionsTypes.CHANGE_NAME_EMAIL, changeNameWithEmail);\n  yield takeEvery(ManageActionsTypes.CHANGE_PASSWORD, changePassword);\n\n  yield takeEvery(ManageActionsTypes.FETCH_USER, fetchUser);\n\n  yield takeEvery(ManageActionsTypes.FETCH_SHOPS, fetchShops);\n  yield takeEvery(ManageActionsTypes.ADD_SHOP, addShop);\n  yield takeEvery(ManageActionsTypes.EDIT_SHOP, editShop);\n  yield takeEvery(ManageActionsTypes.DELETE_SHOP, deleteShop);\n\n  yield takeEvery(ManageActionsTypes.KEY_REFRESH, refreshKey);\n}\n","import axios from \"plugins/axios\";\nimport { IUser } from \"store/ducks/manage/state\";\nimport { IAddCard, IAddPartner, IDeleteCard, IDeletePartner } from \"store/ducks/owner/actionCreators\";\nimport { IPartner, ICard } from \"store/ducks/owner/state\";\nimport { API_URL } from \"./constants\";\n\nexport const API_OWNER = {\n  async fetchPartners(): Promise<IPartner[]> {\n    const response = await axios.get(`${API_URL}/owner/getPartnersList`);\n    return response.data.list;\n  },\n  async addPartner({ email, name, password }: IAddPartner[\"payload\"]): Promise<IUser> {\n    const response = await axios.post(`${API_URL}/owner/register`, { email, name, password });\n    return response.data.user;\n  },\n  async deletePartner(id: IDeletePartner[\"payload\"]): Promise<{ success: boolean }> {\n    const response = await axios.post(`${API_URL}/owner/removePartner`, { id });\n    return response.data.success;\n  },\n\n  async fetchCards(): Promise<ICard[]> {\n    const response = await axios.get(`${API_URL}/owner/getTargetsList`);\n    return response.data.list;\n  },\n  // async fetchCard(id: ICard[\"id\"]): Promise<ICard> {\n  //   const response = await axios.get(`${API_URL}/owner/getTargetById?id=${id}`);\n  //   return response.data.target;\n  // },\n  async addCard({ cardNumber, mm, yy }: IAddCard[\"payload\"]): Promise<IUser> {\n    const response = await axios.post(`${API_URL}/owner/addTarget`, { cardNumber, mm, yy });\n    return response.data.target;\n  },\n  async deleteCard(id: IDeleteCard[\"payload\"]): Promise<{ success: boolean }> {\n    const response = await axios.post(`${API_URL}/owner/removeTarget`, { id });\n    return response.data.success;\n  },\n};\n","import { SagaIterator } from \"redux-saga\";\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\n\nimport { errorHandler } from \"utils/errorHandler\";\n\nimport { API_OWNER } from \"api/owner\";\nimport {\n  OwnerActionsTypes,\n  IAddPartner,\n  IDeletePartner,\n  IAddCard,\n  IDeleteCard,\n  setPartners,\n  setCards,\n} from \"./actionCreators\";\n\nexport function* fetchPartners(): any {\n  try {\n    const data = yield call(API_OWNER.fetchPartners);\n    yield put(setPartners(data));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\nexport function* addPartner({ payload: values }: IAddPartner): any {\n  try {\n    const data = yield all([yield call(API_OWNER.addPartner, values), yield call(API_OWNER.fetchPartners)]);\n\n    yield put(setPartners(data[1]));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\nexport function* deletePartner({ payload: values }: IDeletePartner): any {\n  try {\n    yield call(API_OWNER.deletePartner, values);\n  } catch (e) {\n    errorHandler(e);\n  }\n}\n\nexport function* fetchCards(): any {\n  try {\n    const data = yield call(API_OWNER.fetchCards);\n    yield put(setCards(data));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\nexport function* addCard({ payload: values }: IAddCard): any {\n  try {\n    const data = yield all([yield call(API_OWNER.addCard, values), yield call(API_OWNER.fetchCards)]);\n\n    yield put(setCards(data[1]));\n  } catch (e) {\n    errorHandler(e);\n  }\n}\nexport function* deleteCard({ payload: values }: IDeleteCard): any {\n  try {\n    yield call(API_OWNER.deleteCard, values);\n  } catch (e) {\n    errorHandler(e);\n  }\n}\n\nexport function* ownerSaga(): SagaIterator {\n  yield takeEvery(OwnerActionsTypes.FETCH_PARTNERS, fetchPartners);\n  yield takeEvery(OwnerActionsTypes.ADD_PARTNER, addPartner);\n  yield takeEvery(OwnerActionsTypes.DELETE_PARTNER, deletePartner);\n\n  yield takeEvery(OwnerActionsTypes.FETCH_CARDS, fetchCards);\n  yield takeEvery(OwnerActionsTypes.ADD_CARD, addCard);\n  yield takeEvery(OwnerActionsTypes.DELETE_CARD, deleteCard);\n}\n","import { all } from \"redux-saga/effects\";\nimport { authSaga } from \"./ducks/auth/saga\";\nimport { manageSaga } from \"./ducks/manage/saga\";\nimport { ownerSaga } from \"./ducks/owner/saga\";\n\nexport default function* rootSaga() {\n  yield all([authSaga(), manageSaga(), ownerSaga()]);\n}\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport { rootReducer } from \"./rootReducer\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootSaga from \"./sagas\";\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = (typeof window !== \"undefined\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\nsagaMiddleware.run(rootSaga);\n","// @ts-nocheck\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\nimport { ruRU } from \"@material-ui/core/locale\";\n\nexport const theme = createMuiTheme(\n  {\n    typography: {\n      fontFamily: [\"Roboto\", \"sans-serif\"],\n    },\n    palette: {\n      primary: {\n        main: \"#007BFB\",\n        dark: \"#0068D8\",\n        contrastText: \"#fff\",\n      },\n      secondary: {\n        main: red.A400,\n      },\n      background: {\n        default: \"#fff\",\n      },\n      text: {\n        primary: \"#14171a\",\n      },\n    },\n    overrides: {\n      MuiButton: {\n        root: {\n          textTransform: \"none\",\n          fontSize: 16,\n          height: 40,\n        },\n        outlinedPrimary: {\n          borderColor: \"rgb(29, 161, 243)\",\n        },\n        containedSecondary: {},\n      },\n      MuiFilledInput: {\n        underline: {\n          \"&:after\": {\n            borderBottomWidth: \"2px\",\n          },\n          \"&:before\": {\n            borderColor: \"#000\",\n            borderBottomWidth: \"2px\",\n          },\n        },\n        input: {\n          backgroundColor: \"rgb(245, 248, 250)\",\n        },\n      },\n      MuiDialogActions: {\n        root: {\n          marginRight: 8,\n        },\n      },\n      MuiDialogTitle: {\n        root: {\n          padding: \".5rem .5rem .5rem 1.5rem\",\n          \"& h2\": {\n            display: \"flex\",\n            alignItems: \"center\",\n          },\n          \"& button\": {\n            marginLeft: \"auto\",\n          },\n        },\n      },\n    },\n  },\n  ruRU,\n);\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { ThemeProvider } from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport { App } from \"./App\";\nimport { store } from \"./store\";\nimport theme from \"./theme\";\n\nimport \"assets/styles/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}